{"version":3,"file":"component---src-templates-language-learning-page-tsx-84c806592980d5a00f00.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/components/seo.tsx","webpack://rheajt.github.io/./src/templates/language-learning-page.tsx","webpack://rheajt.github.io/./src/components/footer.tsx","webpack://rheajt.github.io/./src/utils/links.ts","webpack://rheajt.github.io/./src/components/header.tsx","webpack://rheajt.github.io/./src/components/layout.tsx","webpack://rheajt.github.io/./src/components/link-button.tsx","webpack://rheajt.github.io/./src/components/section.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql, HeadProps } from \"gatsby\";\n\ninterface Props {\n\tdescription?: string;\n\tlang?: string;\n\tmeta?: { name?: string; property?: string; content: string }[];\n\ttitle?: string;\n\timage?: string;\n}\n\nconst Seo: React.FC<Props> = ({\n\tdescription = \"\",\n\tlang = \"en\",\n\tmeta = [],\n\ttitle = \"jordanrhea.com\",\n\timage,\n}) => {\n\tconst { site } = useStaticQuery(\n\t\tgraphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        siteUrl\n                        social {\n                            twitter\n                        }\n                    }\n                }\n            }\n        `\n\t);\n\n\tconst metaDescription = description || site.siteMetadata.description;\n\tconst defaultTitle = site.siteMetadata?.title;\n\n\tif (image) {\n\t\tconst content = image;\n\t\tmeta = [\n\t\t\t...meta,\n\t\t\t{\n\t\t\t\tproperty: `og:image`,\n\t\t\t\tcontent,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: `twitter:image`,\n\t\t\t\tcontent,\n\t\t\t},\n\t\t];\n\t}\n\n\treturn (\n\t\t<Helmet\n\t\t\thtmlAttributes={{\n\t\t\t\tlang,\n\t\t\t}}\n\t\t\ttitle={title}\n\t\t\ttitleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n\t\t\tmeta={[\n\t\t\t\t{\n\t\t\t\t\tname: `description`,\n\t\t\t\t\tcontent: metaDescription,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: `og:title`,\n\t\t\t\t\tcontent: title,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: `og:description`,\n\t\t\t\t\tcontent: metaDescription,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: `og:type`,\n\t\t\t\t\tcontent: `website`,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: `twitter:card`,\n\t\t\t\t\tcontent: `summary`,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: `twitter:creator`,\n\t\t\t\t\tcontent: site.siteMetadata?.social?.twitter || ``,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: `twitter:title`,\n\t\t\t\t\tcontent: title,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: `twitter:description`,\n\t\t\t\t\tcontent: metaDescription,\n\t\t\t\t},\n\t\t\t\t...meta,\n\t\t\t]}\n\t\t/>\n\t);\n};\n\nexport default Seo;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Section } from \"../components/section\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport styled from \"styled-components\";\n\nexport const pageQuery = graphql`\n    query fileById($id: String!) {\n        file(id: { eq: $id }) {\n            name\n            lesson: childHanziJson {\n                notes {\n                    line_index\n                    chars {\n                        hanzi\n                        pinyin\n                    }\n                }\n                vocabulary {\n                    chinese\n                    pinyin\n                    english\n                    category\n                    part_of_speech\n                }\n            }\n        }\n    }\n`;\n\ntype Line = {\n    line_index: number;\n    line_text: string;\n    chars: [\n        {\n            pinyin: string;\n            hanzi: string;\n        },\n    ];\n};\nexport default function ChineseLessonPage(props: any) {\n    const [update, setUpdate] = React.useState<string | undefined>(undefined);\n    const { notes, vocabulary } = props.data.file.lesson;\n\n    async function handleClick() {\n        // get the selected text\n        const q = getSelection()?.toString();\n        console.log(q, vocabulary);\n        setUpdate(q);\n    }\n    return (\n        <Layout location={location} title=\"About\">\n            <Seo title=\"Chinese Language Learning\" />\n            <Section>\n                <StyledStuff>\n                    <div className=\"notes\">\n                        {notes.map((line: Line, index: number) => (\n                            <p key={`line-index-${index}`}>\n                                {line.chars.map((charObj, charIndex) => (\n                                    <React.Fragment\n                                        key={`character-index-${charIndex}`}\n                                    >\n                                        <ruby>\n                                            {charObj.hanzi}\n                                            {charObj.pinyin && (\n                                                <rt>{charObj.pinyin}</rt>\n                                            )}\n                                        </ruby>\n                                    </React.Fragment>\n                                ))}\n                            </p>\n                        ))}\n                    </div>\n                    <div className=\"updates\">\n                        <button onClick={handleClick}>click me</button>\n                        <p>{update}</p>\n\n                        {vocabulary.map((word: any, wordIndex: number) => (\n                            <div\n                                key={`vocab-index-${wordIndex}`}\n                                title={word.english}\n                            >\n                                <ruby>\n                                    {word.chinese}\n                                    {word.pinyin && <rt>{word.pinyin}</rt>}\n                                </ruby>\n                            </div>\n                        ))}\n                    </div>\n                </StyledStuff>\n            </Section>\n        </Layout>\n    );\n}\n\nconst StyledStuff = styled.div`\n    display: grid;\n    grid-template-columns: 4fr 1fr;\n    padding: 4rem 0;\n\n    p {\n        margin: 0.6em 0;\n        font-size: 1.25rem;\n    }\n    ruby {\n        ruby-position: over;\n        ruby-align: center;\n    }\n    rt {\n        font-size: 0.7em;\n        color: #444;\n    }\n    .note {\n        font-size: 0.95rem;\n        color: #666;\n        margin-bottom: 1rem;\n    }\n`;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { styled } from \"styled-components\";\nexport const Footer = () => {\n\treturn (\n\t\t<StyledFooter>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\t© {new Date().getFullYear()}{\" \"}\n\t\t\t\t\t<a href=\"https://jordanrhea.com\">jordan rhea</a>\n\t\t\t\t</div>\n\n\t\t\t\t{/*isBrowser && (\n                    <PopupWidget\n                        url=\"https://calendly.com/jordan-rhea/30min\"\n                        rootElement={document.getElementById(\"___gatsby\")!}\n                        text=\"Let's talk solutions!\"\n                        textColor=\"#ffffff\"\n                        color=\"#283597\"\n                    />\n                )*/}\n\n\t\t\t\t<div className=\"legals\">\n\t\t\t\t\t<Link to=\"/privacy\">privacy</Link>\n\t\t\t\t\t<Link to=\"/terms\">terms</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StyledFooter>\n\t);\n};\n\nconst StyledFooter = styled.footer`\n    background-color: var(--color-primary);\n    padding: 3em;\n    color: white;\n\n    a,\n    a:hover {\n        color: white;\n        text-decoration: none;\n        margin-right: 1em;\n    }\n\n    .container {\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        max-width: 800px;\n    }\n`;\n","export const links = [\n    { name: \"Projects\", to: \"projects\" },\n    { name: \"Language Learning\", to: \"language-learning\" },\n];\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { LinkButton } from \"./link-button\";\nimport { links } from \"../utils/links\";\nimport styled from \"styled-components\";\n\nexport const Header: React.FC<{ pathname: string; showLinks?: boolean }> = ({\n    pathname,\n    showLinks = true,\n}) => {\n    return (\n        <StyledHeader>\n            <div className=\"container\">\n                <Link to=\"/\">\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </Link>\n\n                <nav className={showLinks ? `` : `is-hidden`}>\n                    <div className=\"page-links\">\n                        {links.map(link => (\n                            <Link\n                                key={link.to}\n                                data-label={link.name}\n                                className={`page-link sans ${\n                                    pathname.includes(link.to) ? \"active\" : \"\"\n                                }`}\n                                to={`/${link.to}`}\n                            >\n                                <span className=\"label\">{link.name}</span>\n                            </Link>\n                        ))}\n                    </div>\n\n                    <LinkButton\n                        pathname={pathname}\n                        href={\"/contact\"}\n                        label=\"Contact\"\n                    />\n                </nav>\n            </div>\n        </StyledHeader>\n    );\n};\n\nconst StyledHeader = styled.header`\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 1;\n    padding: 0.25em;\n\n    .container {\n        max-width: 800px;\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        justify-content: center;\n    }\n\n    nav.is-hidden {\n        display: none;\n    }\n\n    a {\n        background: none;\n        text-decoration: none;\n        color: var(--color-text);\n    }\n\n    nav {\n        display: flex;\n        align-items: center;\n        list-style: none;\n        text-transform: uppercase;\n        justify-content: space-between;\n        width: 100%;\n        margin-left: 1em;\n\n        a {\n            padding: 0 1em;\n            display: inline-block;\n            position: relative;\n            transition: font-weight 0.5s linear;\n\n            /* reserve space for the bold state to prevent layout shift */\n            &::after {\n                content: attr(data-label);\n                font-weight: 700;\n                visibility: hidden;\n                display: block;\n                height: 0;\n                overflow: hidden;\n                pointer-events: none;\n            }\n\n            .label {\n                font-weight: 400;\n                transition: font-weight 0.05s linear;\n            }\n\n            &:hover .label {\n                font-weight: 700;\n            }\n\n            &.active .label {\n                font-weight: 700;\n            }\n        }\n\n        .page-links {\n            display: flex;\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { ReactNode } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Footer } from \"./footer\";\nimport { Header } from \"./header\";\n\nexport interface Location {\n    pathname: string;\n    search: string;\n    hash: string;\n}\n\nconst GlobalStyles = createGlobalStyle`\n*,\n:after,\n:before {\n    box-sizing: border-box;\n}\n\nhtml, body {\n\tpadding: 0;\n\tmargin: 0;\n}\n\nhtml {\n    line-height: var(--grid-size);\n    font-size: var(--fontSize-root);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n    font-family: var(--font-body);\n    font-size: var(--fontSize-1);\n    color: var(--color-text);\n    /* subtle graph-paper background */\n    background-color: #fbfbf8;\n    background-image:\n        linear-gradient(to right, rgba(0,0,0,0.06) 1px, transparent 1px),\n        linear-gradient(to bottom, rgba(0,0,0,0.06) 1px, transparent 1px);\n    background-size: 24px 24px;\n    background-repeat: repeat;\n}\n\n:root {\n    --grid-size: 1.5rem;\n    --maxWidth-none: \"none\";\n    --maxWidth-xs: 20rem;\n    --maxWidth-sm: 24rem;\n    --maxWidth-md: 28rem;\n    --maxWidth-lg: 32rem;\n    --maxWidth-xl: 36rem;\n    --maxWidth-2xl: 42rem;\n    --maxWidth-3xl: 48rem;\n    --maxWidth-4xl: 56rem;\n    --maxWidth-full: \"100%\";\n    --maxWidth-wrapper: var(--maxWidth-2xl);\n    --spacing-px: \"1px\";\n    --spacing-0: 0;\n    --spacing-1: calc(var(--grid-size) / 4);\n    --spacing-2: calc(var(--grid-size) / 2);\n    --spacing-3: calc(var(--grid-size) * 0.75);\n    --spacing-4: var(--grid-size);\n    --spacing-5: calc(var(--grid-size) * 1.25);\n    --spacing-6: calc(var(--grid-size) * 1.5);\n    --spacing-8: calc(var(--grid-size) * 2);\n    --spacing-10: calc(var(--grid-size) * 2.5);\n    --spacing-12: calc(var(--grid-size) * 3);\n    --spacing-16: calc(var(--grid-size) * 4);\n    --spacing-20: calc(var(--grid-size) * 5);\n    --spacing-24: calc(var(--grid-size) * 6);\n    --spacing-32: calc(var(--grid-size) * 8);\n    --fontFamily-sans: Work Sans, system-ui, -apple-system, BlinkMacSystemFont,\n        \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif,\n        \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n        \"Noto Color Emoji\";\n    --fontFamily-serif: \"Merriweather\", \"Georgia\", Cambria, \"Times New Roman\",\n        Times, serif;\n    --font-body: var(--fontFamily-sans);\n    --font-heading: var(--fontFamily-sans);\n    --fontWeight-normal: 400;\n    --fontWeight-medium: 500;\n    --fontWeight-semibold: 600;\n    --fontWeight-bold: 700;\n    --fontWeight-extrabold: 800;\n    --fontWeight-black: 900;\n    --fontSize-root: 16px;\n    --lineHeight-none: 1;\n    --lineHeight-tight: 1.25;\n    --lineHeight-normal: 1.5;\n    --lineHeight-relaxed: 1.875;\n    /* 1.200 Minor Third Type Scale */\n    --fontSize-0: 0.833rem;\n    --fontSize-1: 1rem;\n    --fontSize-2: 1.2rem;\n    --fontSize-3: 1.44rem;\n    --fontSize-4: 1.728rem;\n    --fontSize-5: 2.074rem;\n    --fontSize-6: 2.488rem;\n    --fontSize-7: 2.986rem;\n    --color-primary: #283597;\n    --color-text: #2e353f;\n    --color-text-light: #4f5969;\n    --color-heading: #1a202c;\n    --color-heading-black: black;\n    --color-accent: #d1dce5;\n}\n`;\n\nconst Layout: React.FC<{\n    children: ReactNode;\n    location: Location;\n    title: string;\n}> = ({ location, children }) => {\n    const rootPath = `/`;\n    const isRootPath = location.pathname === rootPath;\n    const isBrowser = typeof window !== \"undefined\";\n\n    // <Header pathname={location.pathname} />\n    return (\n        <div>\n            <GlobalStyles />\n\n            <Header pathname={location.pathname} />\n\n            <main>{children}</main>\n\n            <Footer />\n        </div>\n    );\n};\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\ntype LinkButtonProps = {\n\tpathname?: string;\n\thref: string;\n\tlabel: string;\n};\nexport function LinkButton({\n\tpathname = \"\",\n\thref = \"\",\n\tlabel = \"\",\n}: LinkButtonProps) {\n\tif (href.startsWith(\"http\")) {\n\t\treturn (\n\t\t\t<StyledLinkButtons>\n\t\t\t\t<a\n\t\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\thref={href}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</a>\n\t\t\t</StyledLinkButtons>\n\t\t);\n\t}\n\n\treturn (\n\t\t<StyledLinkButtons>\n\t\t\t<Link\n\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t}`}\n\t\t\t\tto={href}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Link>\n\t\t</StyledLinkButtons>\n\t);\n}\n\nconst StyledLinkButtons = styled.div`\n    .page-button {\n        background: none;\n        border: none;\n        padding: 0.5em 1em;\n        font: inherit;\n        cursor: pointer;\n        outline: inherit;\n        text-decoration: none;\n        color: white;\n        font-size: inherit;\n        font-weight: bold;\n        font-family: inherit;\n        border: 1px solid lightgray;\n        border-radius: 3px;\n        background-color: var(--color-primary);\n\n        &:hover {\n            $purple: var(--color-primary);\n            background-color: lighten(#283597, 10%);\n            // background-color: lightgray;\n        }\n    }\n`;\n","import React from \"react\";\nimport { styled } from \"styled-components\";\n\ntype SectionProps = {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n\tid?: string;\n\tstyle?: React.CSSProperties;\n};\n\nexport const Section = (props: SectionProps) => {\n\treturn (\n\t\t<StyledSection\n\t\t\tclassName={props.className}\n\t\t\tid={props.id}\n\t\t\tstyle={props.style}\n\t\t>\n\t\t\t{props.children}\n\t\t</StyledSection>\n\t);\n};\n\nconst StyledSection = styled.section`\n    padding: 3em 0.25em;\n    margin: 0 auto;\n    max-width: 800px;\n\n    @media (max-width: 768px) {\n        padding: 2em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","meta","title","image","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","content","concat","_toConsumableArray","property","name","React","Helmet","htmlAttributes","titleTemplate","undefined","social","twitter","ChineseLessonPage","props","update","setUpdate","notes","vocabulary","data","file","lesson","Layout","location","Seo","Section","StyledStuff","className","map","line","index","key","chars","charObj","charIndex","hanzi","pinyin","onClick","async","_getSelection","q","getSelection","toString","console","log","word","wordIndex","english","chinese","styled","div","withConfig","displayName","componentId","Footer","StyledFooter","Date","getFullYear","href","Link","to","footer","links","Header","pathname","showLinks","StyledHeader","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","link","includes","LinkButton","label","header","GlobalStyles","createGlobalStyle","children","startsWith","StyledLinkButtons","StyledSection","id","style","section"],"sourceRoot":""}