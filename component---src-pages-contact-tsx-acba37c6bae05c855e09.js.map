{"version":3,"file":"component---src-pages-contact-tsx-acba37c6bae05c855e09.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/components/github-subscribe.tsx","webpack://rheajt.github.io/./src/components/youtube-subscribe.tsx","webpack://rheajt.github.io/./src/components/contact-icons.tsx","webpack://rheajt.github.io/./src/pages/contact.tsx","webpack://rheajt.github.io/./src/components/contact-form.tsx","webpack://rheajt.github.io/./src/components/StyledContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport const GithubSubscribe: React.FC = () => {\n    return (\n        <>\n            <Helmet>\n                <script\n                    async\n                    defer\n                    src=\"https://buttons.github.io/buttons.js\"\n                ></script>\n            </Helmet>\n            <a\n                className=\"github-button\"\n                href=\"https://github.com/rheajt\"\n                data-color-scheme=\"no-preference: light; light: light; dark: dark;\"\n                data-size=\"large\"\n                data-show-count=\"true\"\n                aria-label=\"Follow @rheajt on GitHub\"\n            >\n                Follow @rheajt\n            </a>\n        </>\n    );\n};\n","import React, { useRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\ninterface Props {\n    channelId: string;\n    layout: string;\n    count: string;\n}\nconst YoutubeSubscribe: React.FC<Props> = ({ channelId, layout, count }) => {\n    const subBtn = useRef<HTMLDivElement>(null);\n\n    return (\n        <>\n            <Helmet>\n                <script src=\"https://apis.google.com/js/platform.js\"></script>\n            </Helmet>\n\n            <div\n                ref={subBtn}\n                className=\"g-ytsubscribe\"\n                data-channelid={channelId}\n                data-layout={layout}\n                data-count={count}\n            />\n        </>\n    );\n};\n\nexport default YoutubeSubscribe;\n","import React from \"react\";\nimport { FaGithub, FaLinkedin, FaYoutube } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { GithubSubscribe } from \"./github-subscribe\";\nimport YoutubeSubscribe from \"./youtube-subscribe\";\n\nexport const ContactIcons: React.FC = () => {\n    return (\n        <StyledContainer>\n            <h3>Social Links</h3>\n            <div className=\"contact-icons\">\n                <a\n                    className=\"icon-container\"\n                    href=\"https://youtube.com/jordanrhea\"\n                    data-label=\"YouTube\"\n                >\n                    <div className=\"icon\">\n                        <span className=\"label\">\n                            <FaYoutube />\n                        </span>\n                    </div>\n\n                    <p className=\"description\">\n                        I turned my learning into a channel that some people\n                        have found useful. Come and join! <br />\n                    </p>\n\n                    <div>\n                        <YoutubeSubscribe\n                            channelId=\"UCwqNP1r17-2xJFweoACbW8g\"\n                            layout=\"default\"\n                            count=\"default\"\n                        />\n                    </div>\n                </a>\n\n                <a className=\"icon-container\" href=\"\" data-label=\"GitHub\">\n                    <div className=\"icon\">\n                        <span className=\"label\">\n                            <FaGithub />\n                        </span>\n                    </div>\n\n                    <p className=\"description\">\n                        Github is where I share the code\n                    </p>\n\n                    <div>\n                        <GithubSubscribe />\n                    </div>\n                </a>\n\n                <a className=\"icon-container\" href=\"\" data-label=\"LinkedIn\">\n                    <div className=\"icon\">\n                        <span className=\"label\">\n                            <FaLinkedin />\n                        </span>\n                    </div>\n\n                    <p className=\"description\">\n                        More information about what I do is on LinkedIn\n                    </p>\n                </a>\n\n                <a className=\"icon-container\" href=\"\">\n                    <div className=\"icon\">\n                        <FaLinkedin />\n                    </div>\n\n                    <p className=\"description\">\n                        More information about what I do is on LinkedIn\n                    </p>\n                </a>\n            </div>\n        </StyledContainer>\n    );\n};\n\nconst StyledContainer = styled.div`\n    margin: 0 auto;\n    max-width: 800px;\n    padding: 3em 0.25em;\n\n    a {\n        color: var(--color-text);\n        text-decoration: none;\n    }\n\n    @media (max-width: 768px) {\n        padding: 2em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n    .contact-icons {\n        margin-top: 1em;\n        margin-bottom: 1em;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n        grid-gap: 1em;\n        justify-content: space-between;\n        justify-items: center;\n    }\n\n    .icon-container {\n        display: flex;\n        flex-direction: column;\n        text-decoration: none;\n        max-width: 320px;\n        padding: 1em;\n        transition: all 300ms;\n        text-align: center;\n        position: relative;\n\n        &::after {\n            content: attr(data-label);\n            font-weight: 700;\n            visibility: hidden;\n            display: block;\n            height: 0;\n            overflow: hidden;\n            pointer-events: none;\n        }\n\n        .icon {\n            text-align: center;\n            font-size: 3em;\n        }\n\n        .label {\n            font-weight: 400;\n            transition: font-weight 0.05s linear;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        &:hover .label {\n            font-weight: 700;\n        }\n\n        .description {\n            flex: 1;\n        }\n\n        &:hover {\n            background-color: white;\n            border: 1px solid lightgray;\n        }\n    }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { ContactForm } from \"../components/contact-form\";\nimport { ContactIcons } from \"../components/contact-icons\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { StyledContainer } from \"../components/StyledContainer\";\n\ninterface Props {\n\tlocation: Location;\n}\n\nconst ContactPage: React.FC<Props> = ({ location }) => {\n\tconst siteTitle = \"jordanrhea.com\";\n\n\treturn (\n\t\t<Layout location={location} title={siteTitle}>\n\t\t\t<Seo title=\"Contact\" />\n\n\t\t\t<StyledContainer>\n\t\t\t\t<ContactForm />\n\t\t\t</StyledContainer>\n\n\t\t\t<ContactIcons />\n\t\t</Layout>\n\t);\n};\n\nexport default ContactPage;\n","import React from \"react\";\nimport { styled } from \"styled-components\";\n\ninterface CustomFormElement extends HTMLFormElement {\n\tyour_name: HTMLInputElement;\n\tmessage: HTMLTextAreaElement;\n}\n\nconst initialVals = {\n\tyour_name: \"\",\n\tyour_email: \"\",\n\tservice: \"\",\n\ttopic: \"\",\n\tmessage: \"\",\n\tisAnonymous: true,\n\tisNewsletter: true,\n};\n\ninterface ContactFormProps {\n\tdata?: Partial<typeof initialVals>;\n}\n\nexport const ContactForm: React.FC<ContactFormProps> = props => {\n\tconst [isDisabled, setIsDisabled] = React.useState(true);\n\tconst [isSent, setSent] = React.useState(false);\n\tconst [percentage, setPercentage] = React.useState(0);\n\tconst [vals, setVals] = React.useState({ ...initialVals, ...props.data });\n\n\tReact.useEffect(() => {\n\t\tconst wordCount = vals.message.split(\" \").length;\n\t\tconst charCount = vals.message.length;\n\n\t\tsetPercentage(\n\t\t\tMath.min(\n\t\t\t\t100,\n\t\t\t\tMath.max(\n\t\t\t\t\t0,\n\t\t\t\t\t((charCount / 100) * 100 + (wordCount / 50) * 100) / 2\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tif (\n\t\t\tpercentage === 100 &&\n\t\t\tvals.your_name.length !== 0 &&\n\t\t\tvals.your_email.length !== 0\n\t\t) {\n\t\t\tsetIsDisabled(false);\n\t\t} else {\n\t\t\tsetIsDisabled(true);\n\t\t}\n\t}, [vals]);\n\n\tasync function handleSubmit(e: React.FormEvent<CustomFormElement>) {\n\t\te.preventDefault();\n\n\t\tconst deploymentId =\n\t\t\t\"AKfycbyhUP2UI4NOia08Ey5yykiLYERXLRyHF_fBZVBiH9rKYeWDLOmy4AdRtmPuMzS7Dsg\";\n\n\t\tconst endpoint = `https://script.google.com/macros/s/${deploymentId}/exec`;\n\n\t\ttry {\n\t\t\tconst resp = await fetch(endpoint, {\n\t\t\t\tredirect: \"follow\",\n\t\t\t\tmethod: \"post\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"content-type\": \"text/plain\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(vals),\n\t\t\t});\n\t\t\tconst json = await resp.json();\n\n\t\t\tif (json.status === \"done\") {\n\t\t\t\tsetSent(true);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tfunction handleChange(name: string, val: string | boolean) {\n\t\tconsole.log(name, val);\n\t\tsetVals({ ...vals, [name]: val });\n\t}\n\n\tif (isSent) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"grid\",\n\t\t\t\t\tplaceItems: \"center\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\theight: 200,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<b>Sent!</b>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconsole.log(\"topic\", vals.topic);\n\treturn (\n\t\t<>\n\t\t\t{vals.topic ? (\n\t\t\t\t<>\n\t\t\t\t\t<i>Lets talk more about </i>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t{vals.topic\n\t\t\t\t\t\t\t.split(\" \")\n\t\t\t\t\t\t\t.map(t => `#${t}`)\n\t\t\t\t\t\t\t.join(\", \")}\n\t\t\t\t\t</b>\n\t\t\t\t</>\n\t\t\t) : null}\n\n\t\t\t<StyledForm onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"your_name\"\n\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\tvalue={vals.your_name}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\n\t\t\t\t<FormInput\n\t\t\t\t\tname=\"your_email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalue={vals.your_email}\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\tname=\"message\"\n\t\t\t\t\tlabel=\"Send me a message! I love meeting new people and talking about data systems.\"\n\t\t\t\t\tplaceholder={vals.message}\n\t\t\t\t\tvalue={vals.message}\n\t\t\t\t\tval={percentage}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"actions full-width\">\n\t\t\t\t\t<button type=\"submit\" disabled={isDisabled}>\n\t\t\t\t\t\tSend\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<FormCheckbox\n\t\t\t\t\t\tname=\"isNewsletter\"\n\t\t\t\t\t\tlabel=\"Newsletter?\"\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\tisChecked={vals.isNewsletter}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormCheckbox\n\t\t\t\t\t\tname=\"isAnonymous\"\n\t\t\t\t\t\tlabel=\"Stay anonymous?\"\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\tisChecked={vals.isAnonymous}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</StyledForm>\n\t\t</>\n\t);\n};\n\ntype HandleChange = (name: string, val: string | boolean) => void;\n\nconst StyledFormCheckbox = styled.div`\n    label {\n        display: inline-block;\n        padding-left: 1em;\n    }\n`;\nconst FormCheckbox: React.FC<{\n\tname: string;\n\tlabel: string;\n\tisChecked: boolean;\n\thandleChange: HandleChange;\n}> = ({ name, label, isChecked, handleChange }) => {\n\treturn (\n\t\t<StyledFormCheckbox>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tid={name}\n\t\t\t\tname={name}\n\t\t\t\tonChange={e => handleChange(name, e.target.checked)}\n\t\t\t\tchecked={isChecked}\n\t\t\t/>\n\n\t\t\t<label htmlFor={name}>{label}</label>\n\t\t</StyledFormCheckbox>\n\t);\n};\n\ntype FormInputProps =\n\t| {\n\t\ttype: \"text\" | \"email\";\n\t\tname: string;\n\t\tvalue: string;\n\t\tplaceholder: string;\n\t\thandleChange: HandleChange;\n\t}\n\t| {\n\t\ttype: \"textarea\";\n\t\tname: string;\n\t\tplaceholder: string;\n\t\tvalue: string;\n\t\tlabel: string;\n\t\tval: number;\n\t\thandleChange: HandleChange;\n\t};\nconst StyledFormInput = styled.div`\n    &.full-width {\n        grid-column: 1 / -1;\n    }\n\n    label {\n        display: block;\n    }\n\n    input,\n    select,\n    textarea {\n        padding: 8px;\n        width: 100%;\n        border-radius: 3px;\n        border: 1px solid lightgray;\n\n        &:focus {\n            outline: none;\n            border: 1px solid var(--color-primary);\n        }\n    }\n`;\nconst FormInput: React.FC<FormInputProps> = props => {\n\tif (props.type === \"textarea\") {\n\t\treturn (\n\t\t\t<StyledFormInput className=\"full-width\">\n\t\t\t\t<label htmlFor={props.name}>{props.label}</label>\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"full-width\"\n\t\t\t\t\tname={props.name}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\tprops.handleChange(e.target.name, e.target.value)\n\t\t\t\t\t}\n\t\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\t\trows={7}\n\t\t\t\t></textarea>\n\t\t\t\t<Progress val={props.val > 1 ? props.val : 0} />\n\t\t\t</StyledFormInput>\n\t\t);\n\t}\n\n\treturn (\n\t\t<StyledFormInput>\n\t\t\t<label htmlFor={props.name}>{props.placeholder}</label>\n\t\t\t<input\n\t\t\t\ttype={props.type}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tname={props.name}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={e =>\n\t\t\t\t\tprops.handleChange(e.target.name, e.target.value)\n\t\t\t\t}\n\t\t\t/>\n\t\t</StyledFormInput>\n\t);\n};\n\nconst FormSelect: React.FC<{\n\tname: string;\n\tvalue: string;\n\tlabel: string;\n\thandleChange: HandleChange;\n\toptions: string[];\n}> = ({ name, value, label, options, handleChange }) => {\n\treturn (\n\t\t<div className=\"form-input\">\n\t\t\t<label htmlFor={name}>{label}</label>\n\t\t\t<select\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={e => handleChange(e.target.name, e.target.value)}\n\t\t\t>\n\t\t\t\t<option value=\"\"></option>\n\t\t\t\t{options.map(option => (\n\t\t\t\t\t<option key={option} value={option}>\n\t\t\t\t\t\t{option}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t</div>\n\t);\n};\n\nconst FormText: React.FC<{\n\tname: string;\n\tplaceholder: string;\n\tvalue: string;\n\tlabel: string;\n\tval: number;\n\thandleChange: HandleChange;\n}> = ({ name, placeholder, value, label, val, handleChange }) => {\n\treturn (\n\t\t<div className=\"form-input full-width\">\n\t\t\t<label htmlFor={name}>{label}</label>\n\t\t\t<textarea\n\t\t\t\tclassName=\"full-width\"\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={e => handleChange(e.target.name, e.target.value)}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\trows={7}\n\t\t\t></textarea>\n\t\t\t<Progress val={val > 1 ? val : 0} />\n\t\t</div>\n\t);\n};\n\nconst Progress: React.FC<{ val: number }> = ({ val }) => {\n\treturn (\n\t\t<div style={{ width: \"100%\", border: \"1px solid lightgray\" }}>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: \"var(--color-primary)\",\n\t\t\t\t\theight: 10,\n\t\t\t\t\twidth: `${val}%`,\n\t\t\t\t}}\n\t\t\t></div>\n\t\t</div>\n\t);\n};\n\nconst StyledForm = styled.form`\n    display: grid;\n    margin-top: 1em;\n    margin-bottom: 1em;\n    grid-gap: 1em;\n    grid-template-columns: 1fr 1fr;\n\n    button {\n        margin-right: 1em;\n        padding: 4px 1em;\n\n        &[type=\"submit\"] {\n            background-color: var(--color-primary);\n            color: white;\n        }\n\n        &:disabled {\n            background-color: gray;\n        }\n    }\n\n    .actions {\n        display: flex;\n        justify-content: space-between;\n    }\n`;\n// <FormService active={vals.service} handleChange={handleChange} />\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n    margin: 0 auto;\n    max-width: 800px;\n    padding: 3em 0.25em;\n\n    @media (max-width: 768px) {\n        padding: 2em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["GithubSubscribe","React","Helmet","async","defer","src","className","href","_ref","channelId","layout","count","subBtn","useRef","ref","ContactIcons","StyledContainer","FaYoutube","YoutubeSubscribe","FaGithub","FaLinkedin","styled","div","withConfig","displayName","componentId","location","Layout","title","Seo","ContactForm","initialVals","your_name","your_email","service","topic","message","isAnonymous","isNewsletter","props","isDisabled","setIsDisabled","isSent","setSent","percentage","setPercentage","vals","setVals","data","handleChange","name","val","console","log","wordCount","split","length","charCount","Math","min","max","style","display","placeItems","width","height","map","t","join","StyledForm","onSubmit","e","preventDefault","resp","fetch","redirect","method","headers","body","JSON","stringify","json","status","err","FormInput","type","placeholder","value","label","disabled","FormCheckbox","isChecked","StyledFormCheckbox","id","onChange","target","checked","htmlFor","StyledFormInput","rows","Progress","_ref4","border","backgroundColor","form"],"sourceRoot":""}