{"version":3,"file":"component---src-pages-projects-tsx-56e9369c87ad676e850c.js","mappings":"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","sources":["webpack://rheajt.github.io/./node_modules/react-icons/lib/esm/iconsManifest.js","webpack://rheajt.github.io/./node_modules/react-icons/lib/esm/iconContext.js","webpack://rheajt.github.io/./node_modules/react-icons/lib/esm/iconBase.js","webpack://rheajt.github.io/./src/components/bio.tsx","webpack://rheajt.github.io/./src/components/header.tsx","webpack://rheajt.github.io/./src/components/layout.tsx","webpack://rheajt.github.io/./src/components/project-card.tsx","webpack://rheajt.github.io/./src/pages/projects.tsx"],"sourcesContent":["export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons 4\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"io5\",\n  \"name\": \"Ionicons 5\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"hi\",\n  \"name\": \"Heroicons\",\n  \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"si\",\n  \"name\": \"Simple Icons\",\n  \"projectUrl\": \"https://simpleicons.org/\",\n  \"license\": \"CC0 1.0 Universal\",\n  \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n}, {\n  \"id\": \"im\",\n  \"name\": \"IcoMoon Free\",\n  \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"bi\",\n  \"name\": \"BoxIcons\",\n  \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"cg\",\n  \"name\": \"css.gg\",\n  \"projectUrl\": \"https://github.com/astrit/css.gg\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"vsc\",\n  \"name\": \"VS Code Icons\",\n  \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n  \"license\": \"CC BY 4.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"tb\",\n  \"name\": \"Tabler Icons\",\n  \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}];","import React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var attr = props.attr,\n        size = props.size,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { FaGithub, FaLinkedin, FaTwitter, FaYoutube } from \"react-icons/fa\";\n\nconst Bio = () => {\n    const data = useStaticQuery(graphql`\n        query BioQuery {\n            site {\n                siteMetadata {\n                    author {\n                        name\n                        summary\n                    }\n                    social {\n                        twitter\n                        github\n                        linkedin\n                        youtube\n                    }\n                }\n            }\n        }\n    `);\n\n    // Set these values by editing \"siteMetadata\" in gatsby-config.js\n    const author = data.site.siteMetadata?.author;\n    const social = data.site.siteMetadata?.social;\n\n    return (\n        <>\n            <div className=\"bio\">\n                <StaticImage\n                    className=\"bio-avatar\"\n                    layout=\"fixed\"\n                    formats={[\"auto\", \"webp\", \"avif\"]}\n                    src=\"../../content/img/avatar-image.png\"\n                    width={50}\n                    height={50}\n                    quality={95}\n                    alt=\"jordan rhea wearing a hoodie\"\n                />\n\n                {author?.name && (\n                    <div>\n                        Written by <strong>{author.name}</strong>{\" \"}\n                        {author?.summary || null}\n                        {` `}\n                        <div className=\"social-links\">\n                            <a href={social.twitter}>\n                                <FaTwitter />\n                            </a>\n                            <a href={social.linkedin}>\n                                <FaLinkedin />\n                            </a>\n                            <a href={social.youtube}>\n                                <FaYoutube />\n                            </a>\n                            <a href={social.github}>\n                                <FaGithub />\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default Bio;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nexport const Header: React.FC<{ pathname: string; showLinks?: boolean }> = ({\n    pathname,\n    showLinks = true,\n}) => {\n    return (\n        <header className=\"header\">\n            <Link to=\"/\">\n                <StaticImage\n                    layout=\"fixed\"\n                    formats={[\"auto\", \"webp\", \"avif\"]}\n                    src=\"../../content/img/jr-icon.png\"\n                    width={36}\n                    height={36}\n                    quality={95}\n                    alt=\"jordan rhea header\"\n                />\n            </Link>\n\n            <nav className={showLinks ? `` : `is-hidden`}>\n                <div className=\"page-links\">\n                    <Link\n                        className={`sans ${pathname.includes(\"projects\") && \"active\"\n                            }`}\n                        to=\"/projects\"\n                    >\n                        Projects\n                    </Link>\n\n                    <Link\n                        className={`sans ${pathname.includes(\"blog\") && \"active\"\n                            }`}\n                        to=\"/blog\"\n                    >\n                        Blog\n                    </Link>\n\n                    <Link\n                        className={`sans ${pathname.includes(\"contact\") && \"active\"\n                            }`}\n                        to=\"/contact\"\n                    >\n                        Contact\n                    </Link>\n                </div>\n            </nav>\n        </header>\n    );\n};\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport { ReactNode } from \"react\";\n// import { PopupWidget } from \"react-calendly\";\nimport { Header } from \"./header\";\n\nconst Layout: React.FC<{\n    children: ReactNode;\n    location: any;\n    title: string;\n}> = ({ location, children }) => {\n    const rootPath = `/`;\n    const isRootPath = location.pathname === rootPath;\n    // const isBrowser = typeof window !== \"undefined\";\n\n    return (\n        <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n            <Header pathname={location.pathname} />\n\n            <main>{children}</main>\n\n            {/* isBrowser && (\n                <PopupWidget\n                    url=\"https://calendly.com/jordanrhea/30min\"\n                    rootElement={document.querySelector(\"body\") as HTMLElement}\n                    text=\"SCHEDULE A MEETING\"\n                    textColor=\"#ffffff\"\n                    color=\"#00a2ff\"\n                />\n            )*/}\n\n            <footer>\n                <div>\n                    © {new Date().getFullYear()}{\" \"}\n                    <a href=\"https://jordanrhea.com\">jordan rhea</a>\n                </div>\n\n                <div className=\"legals\">\n                    <Link to=\"/privacy\">privacy</Link>\n                    <Link to=\"/terms\">terms</Link>\n                </div>\n            </footer>\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport { ProjectPage } from \"../types/ProjectPage\";\n\nconst ProjectCard: React.FC<{ project: ProjectPage }> = ({ project }) => {\n    const image = getImage(project.frontmatter.image);\n\n    return (\n        <Link to={`/projects/${project.fields.slug}`}>\n            <div className=\"project-card\">\n                {image && (\n                    <div className=\"image\">\n                        <GatsbyImage\n                            image={image}\n                            alt={project.frontmatter.title}\n                        />\n                    </div>\n                )}\n                <div className=\"description\">\n                    <h6>{project.frontmatter.title}</h6>\n                    <p>{project.excerpt}</p>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default ProjectCard;\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n// import { format } from \"date-fns\";\nimport { ProjectPageProps } from \"../types/ProjectPage\";\nimport ProjectCard from \"../components/project-card\";\n\nconst Projects: React.FC<ProjectPageProps> = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`;\n    const projects = data.allMarkdownRemark.nodes;\n\n    if (projects.length === 0) {\n        return (\n            <Layout location={location} title={siteTitle}>\n                <Seo title=\"All posts\" />\n                <Bio />\n                <p>No blog posts found.</p>\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo title=\"All Projects\" />\n            <Bio />\n\n            <div className=\"project-cards\">\n                {projects.map((p: any) => {\n                    return <ProjectCard key={p.id} project={p} />;\n                })}\n            </div>\n            {/*<ol style={{ listStyle: `none` }}>\n                {projects.map((project: ProjectPage) => {\n                    const title =\n                        project.frontmatter.title || project.fields.slug;\n\n                    return (\n                        <li key={project.fields.slug}>\n                            <article\n                                className=\"post-list-item\"\n                                itemScope\n                                itemType=\"http://schema.org/Article\"\n                            >\n                                <header>\n                                    <h2>\n                                        <Link\n                                            to={project.fields.slug}\n                                            itemProp=\"url\"\n                                        >\n                                            <span itemProp=\"headline\">\n                                                {title}\n                                            </span>\n                                        </Link>\n                                    </h2>\n                                    <small>\n                                        {format(\n                                            new Date(project.fields.date),\n                                            \"PPP\"\n                                        )}\n                                    </small>\n                                </header>\n                            </article>\n                        </li>\n                    );\n                })}\n            </ol>\n        */}\n        </Layout>\n    );\n};\n\nexport default Projects;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: { fields: { category: { eq: \"project\" } } }\n            sort: { fields: [fields___date], order: DESC }\n        ) {\n            nodes {\n                fields {\n                    slug\n                    date\n                }\n                frontmatter {\n                    title\n                    image {\n                        childImageSharp {\n                            gatsbyImageData(layout: CONSTRAINED)\n                        }\n                    }\n                }\n                excerpt\n            }\n        }\n    }\n`;\n"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","useStaticQuery","author","site","siteMetadata","_data$site$siteMetada","social","_data$site$siteMetada2","React","StaticImage","layout","formats","src","quality","alt","name","summary","href","twitter","FaTwitter","linkedin","FaLinkedin","youtube","FaYoutube","github","FaGithub","Header","pathname","showLinks","Link","to","includes","location","isRootPath","Date","getFullYear","project","image","getImage","frontmatter","fields","slug","GatsbyImage","excerpt","siteTitle","projects","allMarkdownRemark","nodes","Layout","Seo","Bio","ProjectCard","id"],"sourceRoot":""}