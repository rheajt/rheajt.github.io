{"version":3,"file":"component---src-templates-project-page-tsx-5727970e6d8d82ac7685.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/components/bio.tsx","webpack://rheajt.github.io/./src/components/blockquote.tsx","webpack://rheajt.github.io/./src/components/header.tsx","webpack://rheajt.github.io/./src/components/layout.tsx","webpack://rheajt.github.io/./src/templates/project-page.tsx","webpack://rheajt.github.io/./node_modules/react-icons/lib/esm/iconsManifest.js","webpack://rheajt.github.io/./node_modules/react-icons/lib/esm/iconContext.js","webpack://rheajt.github.io/./node_modules/react-icons/lib/esm/iconBase.js"],"sourcesContent":["import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { FaGithub, FaLinkedin, FaTwitter, FaYoutube } from \"react-icons/fa\";\n\nconst Bio = () => {\n    const data = useStaticQuery(graphql`\n        query BioQuery {\n            site {\n                siteMetadata {\n                    author {\n                        name\n                        summary\n                    }\n                    social {\n                        twitter\n                        github\n                        linkedin\n                        youtube\n                    }\n                }\n            }\n        }\n    `);\n\n    // Set these values by editing \"siteMetadata\" in gatsby-config.js\n    const author = data.site.siteMetadata?.author;\n    const social = data.site.siteMetadata?.social;\n\n    return (\n        <>\n            <div className=\"bio\">\n                <StaticImage\n                    className=\"bio-avatar\"\n                    layout=\"fixed\"\n                    formats={[\"auto\", \"webp\", \"avif\"]}\n                    src=\"../../content/img/avatar-image.png\"\n                    width={50}\n                    height={50}\n                    quality={95}\n                    alt=\"jordan rhea wearing a hoodie\"\n                />\n\n                {author?.name && (\n                    <div>\n                        Written by <strong>{author.name}</strong>{\" \"}\n                        {author?.summary || null}\n                        {` `}\n                        <div className=\"social-links\">\n                            <a href={social.twitter}>\n                                <FaTwitter />\n                            </a>\n                            <a href={social.linkedin}>\n                                <FaLinkedin />\n                            </a>\n                            <a href={social.youtube}>\n                                <FaYoutube />\n                            </a>\n                            <a href={social.github}>\n                                <FaGithub />\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default Bio;\n","import React from \"react\";\nimport { Quote } from \"../pages\";\n\nconst Blockquote: React.FC<{ quote: Quote }> = ({ quote }) => {\n    return (\n        <blockquote className=\"blockquote\">\n            <p>{quote.excerpt}</p>\n            <span className=\"author\">\n                <b>{quote.author}</b> <br />\n                {quote.position}\n            </span>\n        </blockquote>\n    );\n};\n\nexport default Blockquote;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nexport const Header: React.FC<{ pathname: string; showLinks?: boolean }> = ({\n    pathname,\n    showLinks = true,\n}) => {\n    return (\n        <header className=\"header\">\n            <Link to=\"/\">\n                <StaticImage\n                    layout=\"fixed\"\n                    formats={[\"auto\", \"webp\", \"avif\"]}\n                    src=\"../../content/img/jr-icon.png\"\n                    width={36}\n                    height={36}\n                    quality={95}\n                    alt=\"jordan rhea header\"\n                />\n            </Link>\n\n            <nav className={showLinks ? `` : `is-hidden`}>\n                <div className=\"page-links\">\n                    <Link\n                        className={`sans ${pathname.includes(\"projects\") && \"active\"\n                            }`}\n                        to=\"/projects\"\n                    >\n                        Projects\n                    </Link>\n\n                    <Link\n                        className={`sans ${pathname.includes(\"blog\") && \"active\"\n                            }`}\n                        to=\"/blog\"\n                    >\n                        Blog\n                    </Link>\n\n                    <Link\n                        className={`sans ${pathname.includes(\"contact\") && \"active\"\n                            }`}\n                        to=\"/contact\"\n                    >\n                        Contact\n                    </Link>\n                </div>\n            </nav>\n        </header>\n    );\n};\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport { ReactNode } from \"react\";\n// import { PopupWidget } from \"react-calendly\";\nimport { Header } from \"./header\";\n\nexport interface Location {\n    pathname: string;\n    search: string;\n    hash: string;\n}\n\nconst Layout: React.FC<{\n    children: ReactNode;\n    location: Location;\n    title: string;\n}> = ({ location, children }) => {\n    const rootPath = `/`;\n    const isRootPath = location.pathname === rootPath;\n    const isBrowser = typeof window !== \"undefined\";\n\n    return (\n        <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n            <Header pathname={location.pathname} />\n\n            <main>{children}</main>\n\n            <footer>\n                <div>\n                    © {new Date().getFullYear()}{\" \"}\n                    <a href=\"https://jordanrhea.com\">jordan rhea</a>\n                </div>\n\n                {/*isBrowser && (\n                    <PopupWidget\n                        url=\"https://calendly.com/jordan-rhea/30min\"\n                        rootElement={document.getElementById(\"___gatsby\")!}\n                        text=\"Let's talk solutions!\"\n                        textColor=\"#ffffff\"\n                        color=\"#283597\"\n                    />\n                )*/}\n\n                <div className=\"legals\">\n                    <Link to=\"/privacy\">privacy</Link>\n                    <Link to=\"/terms\">terms</Link>\n                </div>\n            </footer>\n        </div>\n    );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Blockquote from \"../components/blockquote\";\nimport Share from \"../components/share\";\n\ninterface Props {\n    data: Data;\n    location: Location;\n}\n\ninterface Data {\n    site: {\n        siteMetadata: {\n            siteUrl: string;\n            title: string;\n        };\n    };\n    markdownRemark: {\n        id: string;\n        html: string;\n        excerpt: string;\n        frontmatter: {\n            title: string;\n            quote: {\n                author: string;\n                text: string;\n                employer: string;\n                position: string;\n                excerpt: string;\n                email?: string;\n            };\n            image: {\n                publicURL: string;\n                childImageSharp: {\n                    gatsbyImageData: IGatsbyImageData;\n                };\n            };\n        };\n        fields: {\n            date: string;\n            thumbnail: string;\n            slug: string;\n        };\n    };\n}\n\nconst ProjectPageTemplate: React.FC<Props> = ({ data, location }) => {\n    const project = data.markdownRemark;\n    const siteTitle = data.site.siteMetadata?.title || `Title`;\n    const url =\n        data.site.siteMetadata.siteUrl + \"/projects/\" + project.fields.slug;\n\n    let image = undefined;\n\n    if (project.frontmatter.image) {\n        image =\n            data.site.siteMetadata?.siteUrl +\n            project.frontmatter.image.publicURL;\n    } else if (project.fields.thumbnail) {\n        image = project.fields.thumbnail;\n    }\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo\n                title={project.frontmatter.title}\n                description={project.excerpt}\n                image={image}\n            />\n\n            <article\n                className=\"blog-post\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n            >\n                <Share url={url} />\n                <header className=\"project-image\">\n                    <GatsbyImage\n                        image={\n                            project.frontmatter.image.childImageSharp\n                                .gatsbyImageData\n                        }\n                        alt=\"project image\"\n                    />\n\n                    <h1 itemProp=\"headline\">{project.frontmatter.title}</h1>\n                </header>\n\n                {project.frontmatter.quote && (\n                    <section>\n                        <Blockquote quote={project.frontmatter.quote} />\n                    </section>\n                )}\n\n                <section\n                    dangerouslySetInnerHTML={{ __html: project.html }}\n                    itemProp=\"articleBody\"\n                />\n\n                <hr />\n\n                <footer>\n                    <Bio />\n                </footer>\n            </article>\n        </Layout>\n    );\n};\n\nexport default ProjectPageTemplate;\n\nexport const projectsQuery = graphql`\n    query ProjectPagesById($id: String!) {\n        site {\n            siteMetadata {\n                title\n                siteUrl\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            html\n            excerpt\n            frontmatter {\n                title\n                image {\n                    publicURL\n                    childImageSharp {\n                        gatsbyImageData(layout: CONSTRAINED)\n                    }\n                }\n                quote {\n                    author\n                    position\n                    employer\n                    text\n                    excerpt\n                }\n            }\n            fields {\n                date\n                thumbnail\n                slug\n            }\n        }\n    }\n`;\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}"],"names":["data","useStaticQuery","author","site","siteMetadata","_data$site$siteMetada","social","_data$site$siteMetada2","React","className","StaticImage","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","FaTwitter","linkedin","FaLinkedin","youtube","FaYoutube","github","FaGithub","_ref","quote","excerpt","position","Header","pathname","showLinks","Link","to","includes","location","children","isRootPath","Date","getFullYear","project","markdownRemark","siteTitle","title","url","siteUrl","fields","slug","image","frontmatter","publicURL","thumbnail","Layout","Seo","description","itemScope","itemType","Share","GatsbyImage","childImageSharp","gatsbyImageData","itemProp","Blockquote","dangerouslySetInnerHTML","__html","html","Bio","DefaultContext","color","undefined","size","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","tag","key","child","GenIcon","props","IconBase","elem","conf","svgProps","computedSize","stroke","fill","strokeWidth","xmlns","Consumer"],"sourceRoot":""}