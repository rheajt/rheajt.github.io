{"version":3,"sources":["webpack:///./src/pages/privacy-policy.js","webpack:///./src/hooks/useWindowSize.js","webpack:///./src/hooks/useSiteMetadata.js","webpack:///./src/components/Seo.js"],"names":["PrivacyPolicyPage","dimensions","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","title","name","frameBorder","src","useSiteMetadata","useStaticQuery","site","siteMetadata","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","content","property"],"mappings":"yIAqBeA,UAjBf,WACE,IAAMC,ECFO,WACX,IAAMC,EAA6B,iBAAXC,OAExB,SAASC,IACL,MAAO,CACHC,MAAOH,EAAWC,OAAOG,gBAAaC,EACtCC,OAAQN,EAAWC,OAAOM,iBAAcF,GANZ,MAUAG,mBAASN,GAAtCO,EAV6B,KAUjBC,EAViB,KAyBpC,OAbAC,qBAAU,WACN,IAAKX,EACD,OAAO,EAGX,SAASY,IACLF,EAAcR,KAIlB,OADAD,OAAOY,iBAAiB,SAAUD,GAC3B,kBAAMX,OAAOa,oBAAoB,SAAUF,MACnD,CAACZ,EAAUE,IAEPO,EDvBUM,GAEnB,OACE,kBAAC,IAAD,KACE,4BACEC,MAAM,eACNC,KAAK,eACLd,MAAM,OACNG,OAAQP,EAAWO,OAAS,IAC5BY,YAAY,IACZC,IAAI,qJ,8KEIGC,EAjBgB,WAc7B,OAbiBC,yBAAe,YAAxBC,KAaIC,cCZP,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAYV,GAAS,EAAfW,KAAe,EAATX,OACrCO,EAAeH,IACfQ,EAAkBH,GAAeF,EAAaE,YAEpD,OACI,kBAAC,IAAD,CACII,eAAgB,CACZH,QAEJV,MAAOA,EACPc,cAAa,QAAUP,EAAaP,MACpCW,KAAM,CACF,CACIV,KAAK,cACLc,QAASH,GAEb,CACII,SAAS,WACTD,QAASf,GAEb,CACIgB,SAAS,iBACTD,QAASH,GAEb,CACII,SAAS,UACTD,QAAQ,c","file":"component---src-pages-privacy-policy-js-f6afe456e70113e1ad0b.js","sourcesContent":["import React from 'react';\r\nimport { Layout } from 'components';\r\nimport useWindowSize from '../hooks/useWindowSize';\r\n\r\nfunction PrivacyPolicyPage() {\r\n  const dimensions = useWindowSize();\r\n\r\n  return (\r\n    <Layout>\r\n      <iframe\r\n        title=\"contact-form\"\r\n        name=\"contact-form\"\r\n        width=\"100%\"\r\n        height={dimensions.height - 120}\r\n        frameBorder=\"0\"\r\n        src=\"https://docs.google.com/document/d/e/2PACX-1vQu8qEO-akZuQfWfi0475QF3oOlzP_Hjuonsl3PQ03UI_Ki5M8zXSqUCoL0ZXhH0Gp6uwdEfMu1Rp6a/pub?embedded=true\"\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PrivacyPolicyPage;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// Hook\r\nexport default function useWindowSize() {\r\n    const isClient = typeof window === 'object';\r\n\r\n    function getSize() {\r\n        return {\r\n            width: isClient ? window.innerWidth : undefined,\r\n            height: isClient ? window.innerHeight : undefined,\r\n        };\r\n    }\r\n\r\n    const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n    useEffect(() => {\r\n        if (!isClient) {\r\n            return false;\r\n        }\r\n\r\n        function handleResize() {\r\n            setWindowSize(getSize());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, [isClient, getSize]); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n    return windowSize;\r\n}\r\n","import { useStaticQuery, graphql } from 'gatsby';\r\n\r\nexport const useSiteMetadata = () => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n  return site.siteMetadata;\r\n};\r\n\r\nexport default useSiteMetadata;\r\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport useSiteMetadata from '../hooks/useSiteMetadata';\n\nexport function SEO({ description, lang, meta, title }) {\n    const siteMetadata = useSiteMetadata();\n    const metaDescription = description || siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n            ]}\n        />\n    );\n}\n"],"sourceRoot":""}