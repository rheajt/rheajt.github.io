{"version":3,"file":"component---src-pages-language-learning-index-tsx-05b3fe3b67d2359b160f.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/components/seo.tsx","webpack://rheajt.github.io/./src/pages/language-learning/index.tsx","webpack://rheajt.github.io/./src/components/footer.tsx","webpack://rheajt.github.io/./src/utils/links.ts","webpack://rheajt.github.io/./src/components/header.tsx","webpack://rheajt.github.io/./src/components/layout.tsx","webpack://rheajt.github.io/./src/components/link-button.tsx","webpack://rheajt.github.io/./src/components/section.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql, HeadProps } from \"gatsby\";\n\ninterface Props {\n\tdescription?: string;\n\tlang?: string;\n\tmeta?: { name?: string; property?: string; content: string }[];\n\ttitle?: string;\n\timage?: string;\n}\n\nconst Seo: React.FC<Props> = ({\n\tdescription = \"\",\n\tlang = \"en\",\n\tmeta = [],\n\ttitle = \"jordanrhea.com\",\n\timage,\n}) => {\n\tconst { site } = useStaticQuery(\n\t\tgraphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        siteUrl\n                        social {\n                            twitter\n                        }\n                    }\n                }\n            }\n        `\n\t);\n\n\tconst metaDescription = description || site.siteMetadata.description;\n\tconst defaultTitle = site.siteMetadata?.title;\n\n\tif (image) {\n\t\tconst content = image;\n\t\tmeta = [\n\t\t\t...meta,\n\t\t\t{\n\t\t\t\tproperty: `og:image`,\n\t\t\t\tcontent,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: `twitter:image`,\n\t\t\t\tcontent,\n\t\t\t},\n\t\t];\n\t}\n\n\treturn (\n\t\t<Helmet\n\t\t\thtmlAttributes={{\n\t\t\t\tlang,\n\t\t\t}}\n\t\t\ttitle={title}\n\t\t\ttitleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n\t\t\tmeta={[\n\t\t\t\t{\n\t\t\t\t\tname: `description`,\n\t\t\t\t\tcontent: metaDescription,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: `og:title`,\n\t\t\t\t\tcontent: title,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: `og:description`,\n\t\t\t\t\tcontent: metaDescription,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: `og:type`,\n\t\t\t\t\tcontent: `website`,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: `twitter:card`,\n\t\t\t\t\tcontent: `summary`,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: `twitter:creator`,\n\t\t\t\t\tcontent: site.siteMetadata?.social?.twitter || ``,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: `twitter:title`,\n\t\t\t\t\tcontent: title,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: `twitter:description`,\n\t\t\t\t\tcontent: metaDescription,\n\t\t\t\t},\n\t\t\t\t...meta,\n\t\t\t]}\n\t\t/>\n\t);\n};\n\nexport default Seo;\n","import * as React from \"react\";\nimport Layout from \"../../components/layout\";\nimport { Section } from \"../../components/section\";\nimport Seo from \"../../components/seo\";\nimport { graphql } from \"gatsby\";\n\nexport const pageQuery = graphql`\n    query {\n        allFile(filter: { sourceInstanceName: { eq: \"lessons\" } }) {\n            nodes {\n                id\n                name\n            }\n        }\n    }\n`;\nexport default function ChineseLanguageLearningPage({ data }: any) {\n    const pages = data.allFile.nodes;\n    return (\n        <Layout location={location} title=\"About\">\n            <Seo title=\"Chinese Language Learning\" />\n            <Section>\n                <h1>Chinese Language Learning</h1>\n\n                <ul>\n                    {pages.map((page: any) => (\n                        <li key={page.id}>\n                            <a href={`/language-learning/${page.name}`}>\n                                Lesson {page.name}\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n            </Section>\n        </Layout>\n    );\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { styled } from \"styled-components\";\nexport const Footer = () => {\n\treturn (\n\t\t<StyledFooter>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\tÂ© {new Date().getFullYear()}{\" \"}\n\t\t\t\t\t<a href=\"https://jordanrhea.com\">jordan rhea</a>\n\t\t\t\t</div>\n\n\t\t\t\t{/*isBrowser && (\n                    <PopupWidget\n                        url=\"https://calendly.com/jordan-rhea/30min\"\n                        rootElement={document.getElementById(\"___gatsby\")!}\n                        text=\"Let's talk solutions!\"\n                        textColor=\"#ffffff\"\n                        color=\"#283597\"\n                    />\n                )*/}\n\n\t\t\t\t<div className=\"legals\">\n\t\t\t\t\t<Link to=\"/privacy\">privacy</Link>\n\t\t\t\t\t<Link to=\"/terms\">terms</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StyledFooter>\n\t);\n};\n\nconst StyledFooter = styled.footer`\n    background-color: var(--color-primary);\n    padding: 3em;\n    color: white;\n\n    a,\n    a:hover {\n        color: white;\n        text-decoration: none;\n        margin-right: 1em;\n    }\n\n    .container {\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        max-width: 800px;\n    }\n`;\n","export const links = [\n    { name: \"Projects\", to: \"projects\" },\n    { name: \"Language Learning\", to: \"language-learning\" },\n];\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { LinkButton } from \"./link-button\";\nimport { links } from \"../utils/links\";\nimport styled from \"styled-components\";\n\nexport const Header: React.FC<{ pathname: string; showLinks?: boolean }> = ({\n    pathname,\n    showLinks = true,\n}) => {\n    return (\n        <StyledHeader>\n            <div className=\"container\">\n                <Link to=\"/\">\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </Link>\n\n                <nav className={showLinks ? `` : `is-hidden`}>\n                    <div className=\"page-links\">\n                        {links.map(link => (\n                            <Link\n                                key={link.to}\n                                data-label={link.name}\n                                className={`page-link sans ${\n                                    pathname.includes(link.to) ? \"active\" : \"\"\n                                }`}\n                                to={`/${link.to}`}\n                            >\n                                <span className=\"label\">{link.name}</span>\n                            </Link>\n                        ))}\n                    </div>\n\n                    <LinkButton\n                        pathname={pathname}\n                        href={\"/contact\"}\n                        label=\"Contact\"\n                    />\n                </nav>\n            </div>\n        </StyledHeader>\n    );\n};\n\nconst StyledHeader = styled.header`\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 1;\n    padding: 0.25em;\n\n    .container {\n        max-width: 800px;\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        justify-content: center;\n    }\n\n    nav.is-hidden {\n        display: none;\n    }\n\n    a {\n        background: none;\n        text-decoration: none;\n        color: var(--color-text);\n    }\n\n    nav {\n        display: flex;\n        align-items: center;\n        list-style: none;\n        text-transform: uppercase;\n        justify-content: space-between;\n        width: 100%;\n        margin-left: 1em;\n\n        a {\n            padding: 0 1em;\n            display: inline-block;\n            position: relative;\n            transition: font-weight 0.5s linear;\n\n            /* reserve space for the bold state to prevent layout shift */\n            &::after {\n                content: attr(data-label);\n                font-weight: 700;\n                visibility: hidden;\n                display: block;\n                height: 0;\n                overflow: hidden;\n                pointer-events: none;\n            }\n\n            .label {\n                font-weight: 400;\n                transition: font-weight 0.05s linear;\n            }\n\n            &:hover .label {\n                font-weight: 700;\n            }\n\n            &.active .label {\n                font-weight: 700;\n            }\n        }\n\n        .page-links {\n            display: flex;\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { ReactNode } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Footer } from \"./footer\";\nimport { Header } from \"./header\";\n\nexport interface Location {\n    pathname: string;\n    search: string;\n    hash: string;\n}\n\nconst GlobalStyles = createGlobalStyle`\n*,\n:after,\n:before {\n    box-sizing: border-box;\n}\n\nhtml, body {\n\tpadding: 0;\n\tmargin: 0;\n}\n\nhtml {\n    line-height: var(--grid-size);\n    font-size: var(--fontSize-root);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n    font-family: var(--font-body);\n    font-size: var(--fontSize-1);\n    color: var(--color-text);\n    /* subtle graph-paper background */\n    background-color: #fbfbf8;\n    background-image:\n        linear-gradient(to right, rgba(0,0,0,0.06) 1px, transparent 1px),\n        linear-gradient(to bottom, rgba(0,0,0,0.06) 1px, transparent 1px);\n    background-size: 24px 24px;\n    background-repeat: repeat;\n}\n\n:root {\n    --grid-size: 1.5rem;\n    --maxWidth-none: \"none\";\n    --maxWidth-xs: 20rem;\n    --maxWidth-sm: 24rem;\n    --maxWidth-md: 28rem;\n    --maxWidth-lg: 32rem;\n    --maxWidth-xl: 36rem;\n    --maxWidth-2xl: 42rem;\n    --maxWidth-3xl: 48rem;\n    --maxWidth-4xl: 56rem;\n    --maxWidth-full: \"100%\";\n    --maxWidth-wrapper: var(--maxWidth-2xl);\n    --spacing-px: \"1px\";\n    --spacing-0: 0;\n    --spacing-1: calc(var(--grid-size) / 4);\n    --spacing-2: calc(var(--grid-size) / 2);\n    --spacing-3: calc(var(--grid-size) * 0.75);\n    --spacing-4: var(--grid-size);\n    --spacing-5: calc(var(--grid-size) * 1.25);\n    --spacing-6: calc(var(--grid-size) * 1.5);\n    --spacing-8: calc(var(--grid-size) * 2);\n    --spacing-10: calc(var(--grid-size) * 2.5);\n    --spacing-12: calc(var(--grid-size) * 3);\n    --spacing-16: calc(var(--grid-size) * 4);\n    --spacing-20: calc(var(--grid-size) * 5);\n    --spacing-24: calc(var(--grid-size) * 6);\n    --spacing-32: calc(var(--grid-size) * 8);\n    --fontFamily-sans: Work Sans, system-ui, -apple-system, BlinkMacSystemFont,\n        \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif,\n        \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n        \"Noto Color Emoji\";\n    --fontFamily-serif: \"Merriweather\", \"Georgia\", Cambria, \"Times New Roman\",\n        Times, serif;\n    --font-body: var(--fontFamily-sans);\n    --font-heading: var(--fontFamily-sans);\n    --fontWeight-normal: 400;\n    --fontWeight-medium: 500;\n    --fontWeight-semibold: 600;\n    --fontWeight-bold: 700;\n    --fontWeight-extrabold: 800;\n    --fontWeight-black: 900;\n    --fontSize-root: 16px;\n    --lineHeight-none: 1;\n    --lineHeight-tight: 1.25;\n    --lineHeight-normal: 1.5;\n    --lineHeight-relaxed: 1.875;\n    /* 1.200 Minor Third Type Scale */\n    --fontSize-0: 0.833rem;\n    --fontSize-1: 1rem;\n    --fontSize-2: 1.2rem;\n    --fontSize-3: 1.44rem;\n    --fontSize-4: 1.728rem;\n    --fontSize-5: 2.074rem;\n    --fontSize-6: 2.488rem;\n    --fontSize-7: 2.986rem;\n    --color-primary: #283597;\n    --color-text: #2e353f;\n    --color-text-light: #4f5969;\n    --color-heading: #1a202c;\n    --color-heading-black: black;\n    --color-accent: #d1dce5;\n}\n`;\n\nconst Layout: React.FC<{\n    children: ReactNode;\n    location: Location;\n    title: string;\n}> = ({ location, children }) => {\n    const rootPath = `/`;\n    const isRootPath = location.pathname === rootPath;\n    const isBrowser = typeof window !== \"undefined\";\n\n    // <Header pathname={location.pathname} />\n    return (\n        <div>\n            <GlobalStyles />\n\n            <Header pathname={location.pathname} />\n\n            <main>{children}</main>\n\n            <Footer />\n        </div>\n    );\n};\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\ntype LinkButtonProps = {\n\tpathname?: string;\n\thref: string;\n\tlabel: string;\n};\nexport function LinkButton({\n\tpathname = \"\",\n\thref = \"\",\n\tlabel = \"\",\n}: LinkButtonProps) {\n\tif (href.startsWith(\"http\")) {\n\t\treturn (\n\t\t\t<StyledLinkButtons>\n\t\t\t\t<a\n\t\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\thref={href}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</a>\n\t\t\t</StyledLinkButtons>\n\t\t);\n\t}\n\n\treturn (\n\t\t<StyledLinkButtons>\n\t\t\t<Link\n\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t}`}\n\t\t\t\tto={href}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Link>\n\t\t</StyledLinkButtons>\n\t);\n}\n\nconst StyledLinkButtons = styled.div`\n    .page-button {\n        background: none;\n        border: none;\n        padding: 0.5em 1em;\n        font: inherit;\n        cursor: pointer;\n        outline: inherit;\n        text-decoration: none;\n        color: white;\n        font-size: inherit;\n        font-weight: bold;\n        font-family: inherit;\n        border: 1px solid lightgray;\n        border-radius: 3px;\n        background-color: var(--color-primary);\n\n        &:hover {\n            $purple: var(--color-primary);\n            background-color: lighten(#283597, 10%);\n            // background-color: lightgray;\n        }\n    }\n`;\n","import React from \"react\";\nimport { styled } from \"styled-components\";\n\ntype SectionProps = {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n\tid?: string;\n\tstyle?: React.CSSProperties;\n};\n\nexport const Section = (props: SectionProps) => {\n\treturn (\n\t\t<StyledSection\n\t\t\tclassName={props.className}\n\t\t\tid={props.id}\n\t\t\tstyle={props.style}\n\t\t>\n\t\t\t{props.children}\n\t\t</StyledSection>\n\t);\n};\n\nconst StyledSection = styled.section`\n    padding: 3em 0.25em;\n    margin: 0 auto;\n    max-width: 800px;\n\n    @media (max-width: 768px) {\n        padding: 2em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","meta","title","image","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","content","concat","_toConsumableArray","property","name","React","Helmet","htmlAttributes","titleTemplate","undefined","social","twitter","ChineseLanguageLearningPage","data","pages","allFile","nodes","Layout","location","Seo","Section","map","page","key","id","href","Footer","StyledFooter","className","Date","getFullYear","Link","to","styled","footer","withConfig","displayName","componentId","links","Header","pathname","showLinks","StyledHeader","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","link","includes","LinkButton","label","header","GlobalStyles","createGlobalStyle","children","startsWith","StyledLinkButtons","div","props","StyledSection","style","section"],"sourceRoot":""}