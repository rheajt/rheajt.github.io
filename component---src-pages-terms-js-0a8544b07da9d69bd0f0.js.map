{"version":3,"sources":["webpack:///./src/hooks/useWindowSize.js","webpack:///./src/hooks/useSiteMetadata.js","webpack:///./src/components/Seo.js","webpack:///./src/pages/terms.js"],"names":["useWindowSize","isClient","window","getSize","console","log","width","innerWidth","undefined","height","innerHeight","useGetSize","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useSiteMetadata","useStaticQuery","site","siteMetadata","SEO","description","lang","title","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","TermsPage","dimensions","frameBorder","src"],"mappings":"6FAAA,kDAgBe,SAASA,IACpB,IAAMC,EAA6B,iBAAXC,OAElBC,EAhBV,SAAoBF,GAOhB,OANAG,QAAQC,IAAI,YAAaJ,GAMlB,CACHK,MAAOL,EAAWC,OAAOK,gBAAaC,EACtCC,OAAQR,EAAWC,OAAOQ,iBAAcF,GAO5BG,CAAWV,GAHS,EAIAW,mBAAST,GAAtCU,EAJ6B,KAIjBC,EAJiB,KAmBpC,OAbAC,qBAAU,WACN,IAAKd,EACD,OAAO,EAGX,SAASe,IACLF,EAAcX,KAIlB,OADAD,OAAOe,iBAAiB,SAAUD,GAC3B,kBAAMd,OAAOgB,oBAAoB,SAAUF,MACnD,CAACf,EAAUE,IAEPU,I,8KChBIM,EAjBgB,WAc7B,OAbiBC,yBAAe,YAAxBC,KAaIC,cCZP,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAYC,GAAS,EAAfC,KAAe,EAATD,OACrCJ,EAAeH,IACfS,EAAkBJ,GAAeF,EAAaE,YAEpD,OACI,kBAAC,IAAD,CACIK,eAAgB,CACZJ,QAEJC,MAAOA,EACPI,cAAa,QAAUR,EAAaI,MACpCC,KAAM,CACF,CACII,KAAK,cACLC,QAASJ,GAEb,CACIK,SAAS,WACTD,QAASN,GAEb,CACIO,SAAS,iBACTD,QAASJ,GAEb,CACIK,SAAS,UACTD,QAAQ,c,+CC9B5B,wDAwBeE,UApBf,WACI,IAAMC,EAAanC,cAKnB,OACI,kBAAC,IAAD,KACI,4BACI0B,MAAM,mBACNK,KAAK,QACLzB,MAAM,OACNG,OAAQ0B,EAAW1B,OAAS,IAC5B2B,YAAY,IACZC,IAAI","file":"component---src-pages-terms-js-0a8544b07da9d69bd0f0.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\n// Hook\r\nfunction useGetSize(isClient) {\r\n    console.log('is client', isClient);\r\n\r\n    //return {\r\n    //width: window.innerWidth,\r\n    //height: window.innerHeight\r\n    //}\r\n    return {\r\n        width: isClient ? window.innerWidth : undefined,\r\n        height: isClient ? window.innerHeight : undefined,\r\n    };\r\n}\r\n\r\nexport default function useWindowSize() {\r\n    const isClient = typeof window === 'object';\r\n\r\n    const getSize = useGetSize(isClient);\r\n    const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n    useEffect(() => {\r\n        if (!isClient) {\r\n            return false;\r\n        }\r\n\r\n        function handleResize() {\r\n            setWindowSize(getSize());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, [isClient, getSize]); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n    return windowSize;\r\n}\r\n","import { useStaticQuery, graphql } from 'gatsby';\r\n\r\nexport const useSiteMetadata = () => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n  return site.siteMetadata;\r\n};\r\n\r\nexport default useSiteMetadata;\r\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport useSiteMetadata from '../hooks/useSiteMetadata';\n\nexport function SEO({ description, lang, meta, title }) {\n    const siteMetadata = useSiteMetadata();\n    const metaDescription = description || siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n            ]}\n        />\n    );\n}\n","import React from 'react';\nimport { Layout } from 'components';\nimport useWindowSize from '../hooks/useWindowSize';\n\nfunction TermsPage() {\n    const dimensions = useWindowSize();\n\n    /*\n    <iframe src=\"https://docs.google.com/document/d/e/2PACX-1vTfE-k4i9mOSCz_ZZunZTmOYROZIgPjXdvp7GiOupqSet-cgeYBUIvalf_n-08OMX1vM6UHLw8zx4-d/pub?embedded=true\"></iframe>\n        */\n    return (\n        <Layout>\n            <iframe\n                title=\"terms-of-service\"\n                name=\"terms\"\n                width=\"100%\"\n                height={dimensions.height - 120}\n                frameBorder=\"0\"\n                src=\"https://docs.google.com/document/d/e/2PACX-1vTfE-k4i9mOSCz_ZZunZTmOYROZIgPjXdvp7GiOupqSet-cgeYBUIvalf_n-08OMX1vM6UHLw8zx4-d/pub?embedded=true\"\n            />\n        </Layout>\n    );\n}\n\nexport default TermsPage;\n"],"sourceRoot":""}