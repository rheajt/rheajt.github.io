{"version":3,"file":"component---src-pages-poker-tsx-4f4bbdf01bcc5129a37a.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/components/poker-card-selector.tsx","webpack://rheajt.github.io/./src/components/poker-form.tsx","webpack://rheajt.github.io/./src/components/poker-seats.tsx","webpack://rheajt.github.io/./src/utils/pokerReducer.ts","webpack://rheajt.github.io/./src/pages/poker.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst suits = [\"clubs ♣\", \"diamonds ♦\", \"hearts ♥\", \"spades ♠\"];\nconst cards = [\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"10\",\n    \"J\",\n    \"Q\",\n    \"K\",\n    \"A\",\n];\n\nconst PokerCardSelector: React.FC = () => {\n    const [card, setCard] = useState(\"\");\n    const [suit, setSuit] = useState(\"\");\n\n    if (card === \"\" || suit === \"\") {\n        return (\n            <div>\n                <div>\n                    {cards.map(card => (\n                        <button onClick={() => setCard(card)}>{card}</button>\n                    ))}\n                </div>\n                <div>\n                    {suits.map(suit => (\n                        <button onClick={() => setSuit(suit[0])}>{suit}</button>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <span\n            className=\"poker-card\"\n            onClick={() => {\n                setCard(\"\");\n                setSuit(\"\");\n            }}\n        >\n            {card}\n            {suit}\n        </span>\n    );\n};\n\nexport default PokerCardSelector;\n","import React, { FormEvent, useState } from \"react\";\nimport { PokerSeat } from \"../utils/pokerReducer\";\nimport PokerCardSelector from \"./poker-card-selector\";\n\nconst handAction = {\n    round: \"\",\n    action: \"\",\n};\n\nconst PokerForm: React.FC<{ seats: PokerSeat[] }> = ({ seats }) => {\n    const [handActions, setHandActions] = useState<typeof handAction[]>([]);\n\n    function handleSubmit(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"pre-flop\">\n                <span>Dealt:</span>\n                <PokerCardSelector />\n                <PokerCardSelector />\n                <div className=\"poker-action\">\n                    <select>\n                        <option value=\"UTG\">UTG</option>\n                        <option value=\"UTG+1\">UTG+1</option>\n                        <option value=\"MP\">MP</option>\n                        <option value=\"HJ\">HJ</option>\n                        <option value=\"CO\">CO</option>\n                        <option value=\"BTN\">BTN</option>\n                        <option value=\"SB\">SB</option>\n                        <option value=\"BB\">BB</option>\n                    </select>\n\n                    <select>\n                        {seats.map((s, idx) => {\n                            return (\n                                <option value={s.name} key={\"pre-flop-\" + idx}>\n                                    {s.name}\n                                </option>\n                            );\n                        })}\n                    </select>\n\n                    <select>\n                        <option value=\"check\">check</option>\n                        <option value=\"bet\">bet</option>\n                        <option value=\"raise\">raise</option>\n                        <option value=\"call\">call</option>\n                        <option value=\"fold\">fold</option>\n                    </select>\n\n                    <input type=\"number\" />\n                </div>\n                <button\n                    onClick={() => {\n                        const updatedActions = [\n                            ...handActions,\n                            { round: \"pre-flop\", action: `stuff` },\n                        ];\n                        setHandActions(updatedActions);\n                    }}\n                >\n                    +\n                </button>\n\n                <div>\n                    {handActions\n                        .filter(ha => ha.round === \"pre-flop\")\n                        .map(ha => {\n                            return <p>{ha.action}</p>;\n                        })}\n                </div>\n            </div>\n\n            <div className=\"flop\">\n                <span>Flop</span>\n                <PokerCardSelector />\n                <PokerCardSelector />\n                <PokerCardSelector />\n            </div>\n\n            <div className=\"turn\">\n                <span>Turn</span>\n                <PokerCardSelector />\n            </div>\n\n            <div className=\"river\">\n                <span>River</span>\n                <PokerCardSelector />\n            </div>\n        </form>\n    );\n};\n\nexport default PokerForm;\n","import React from \"react\";\nimport { PokerSeat } from \"../utils/pokerReducer\";\n\nconst PokerSeats: React.FC<{\n    seats: PokerSeat[];\n    handleUpdateSeat: (idx: number, update: Partial<PokerSeat>) => void;\n    handleAddSeat: () => void;\n}> = ({ seats, handleUpdateSeat, handleAddSeat }) => {\n    const updateSeat = (\n        idx: number,\n        e: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        console.log(\"on change\", idx);\n        if (e.target.type === \"checkbox\") {\n            let isChecked = e.target.checked;\n\n            handleUpdateSeat(idx, {\n                [e.target.name]: isChecked,\n            });\n        } else {\n            handleUpdateSeat(idx, {\n                [e.target.name]: e.target.value,\n            });\n        }\n    };\n    return (\n        <>\n            {seats.map((seat, idx) => {\n                return (\n                    <div className=\"poker-seat\" key={idx}>\n                        <input\n                            name=\"hero\"\n                            type=\"checkbox\"\n                            checked={seat.hero}\n                            onChange={(\n                                e: React.ChangeEvent<HTMLInputElement>\n                            ) => updateSeat(idx, e)}\n                        />\n\n                        <input\n                            name=\"name\"\n                            value={seat.name}\n                            onChange={(\n                                e: React.ChangeEvent<HTMLInputElement>\n                            ) => updateSeat(idx, e)}\n                        />\n\n                        <input\n                            name=\"in\"\n                            type=\"number\"\n                            value={seat.in}\n                            onChange={(\n                                e: React.ChangeEvent<HTMLInputElement>\n                            ) => updateSeat(idx, e)}\n                        />\n\n                        <input\n                            name=\"out\"\n                            type=\"number\"\n                            value={seat.out}\n                            onChange={(\n                                e: React.ChangeEvent<HTMLInputElement>\n                            ) => updateSeat(idx, e)}\n                        />\n                    </div>\n                );\n            })}\n\n            <button onClick={handleAddSeat}>+</button>\n        </>\n    );\n};\n\nexport default PokerSeats;\n","export interface PokerSeat {\n    name: string;\n    hero: boolean;\n    in?: number;\n    out?: number;\n}\n\n// export interface PokerHand {\n\n// }\n\ntype Actions =\n    | { type: \"add_seat\" }\n    | {\n        type: \"update_seat\";\n        payload: {\n            seatIdx: number;\n            update: Partial<PokerSeat>;\n        };\n    };\n\nconst initialSeat = {\n    name: \"\",\n    hero: false,\n    in: 0,\n};\n\nexport const initialState = {\n    seats: [initialSeat] as PokerSeat[],\n    hands: [],\n};\n\nexport const reducer = (state: typeof initialState, action: Actions) => {\n    switch (action.type) {\n        case \"add_seat\": {\n            state.seats.push(initialSeat);\n            return { ...state };\n        }\n\n        case \"update_seat\": {\n            let seat = state.seats[action.payload.seatIdx];\n            state.seats[action.payload.seatIdx] = {\n                ...seat,\n                ...action.payload.update,\n            };\n\n            console.log(state);\n            return { ...state };\n        }\n\n        // case \"add_hand\": {\n        //     const updatedHands = [...state.hands, action.payload];\n        //     return { ...state, hands: updatedHands };\n        // }\n\n        default:\n            return state;\n    }\n};\n","import { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport React, { useReducer, useState } from \"react\";\nimport PokerForm from \"../components/poker-form\";\nimport PokerSeats from \"../components/poker-seats\";\nimport Seo from \"../components/seo\";\nimport { initialState, reducer } from \"../utils/pokerReducer\";\n\nconst PokerPanel: React.FC<{\n    title: string;\n    isActive: boolean;\n    handleClick: () => void;\n}> = ({ title, isActive, handleClick, children }) => {\n    return (\n        <>\n            <button className=\"accordion\" onClick={handleClick}>\n                {title}\n            </button>\n\n            <div className={`panel ${isActive && \"active\"}`}>{children}</div>\n        </>\n    );\n};\n\nconst PokerPage: React.FC = () => {\n    const [activeSection, setActiveSection] = useState(0);\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <div className=\"poker-page\">\n            <Seo title=\"Poker Notes\" />\n\n            <PokerPanel\n                title={`Game Seats (${state.seats.length})`}\n                isActive={activeSection === 1}\n                handleClick={() =>\n                    setActiveSection(val => (val === 1 ? -1 : 1))\n                }\n            >\n                <PokerSeats\n                    seats={state.seats}\n                    handleAddSeat={() =>\n                        dispatch({\n                            type: \"add_seat\",\n                        })\n                    }\n                    handleUpdateSeat={(idx, update) =>\n                        dispatch({\n                            type: \"update_seat\",\n                            payload: {\n                                seatIdx: idx,\n                                update,\n                            },\n                        })\n                    }\n                />\n            </PokerPanel>\n\n            <PokerPanel\n                title=\"Take Notes\"\n                isActive={activeSection === 2}\n                handleClick={() =>\n                    setActiveSection(val => (val === 2 ? -1 : 2))\n                }\n            >\n                <PokerForm seats={state.seats} />\n            </PokerPanel>\n\n            <PokerPanel\n                title={`All Hands (${state.hands.length})`}\n                isActive={activeSection === 3}\n                handleClick={() =>\n                    setActiveSection(val => (val === 3 ? -1 : 3))\n                }\n            >\n                <h1>all hands</h1>\n            </PokerPanel>\n            <footer>\n                <Link to=\"/\">\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </Link>\n                Poker Hand Notes\n            </footer>\n        </div>\n    );\n};\n\nexport default PokerPage;\n"],"names":["suits","cards","useState","card","setCard","suit","setSuit","React","map","onClick","className","seats","handActions","setHandActions","onSubmit","e","preventDefault","PokerCardSelector","value","s","idx","name","key","type","updatedActions","round","action","filter","ha","handleUpdateSeat","handleAddSeat","updateSeat","console","log","target","isChecked","checked","seat","hero","onChange","in","out","initialSeat","initialState","hands","reducer","state","push","payload","seatIdx","update","PokerPanel","title","isActive","handleClick","children","activeSection","setActiveSection","useReducer","dispatch","Seo","length","val","PokerSeats","PokerForm","Link","to","StaticImage","layout","formats","src","width","height","quality","alt"],"sourceRoot":""}