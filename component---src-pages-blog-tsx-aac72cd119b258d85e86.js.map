{"version":3,"file":"component---src-pages-blog-tsx-aac72cd119b258d85e86.js","mappings":"gMA4FA,UAlE8B,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC7BC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEFC,EAAAA,cAACC,EAAAA,EAAD,CAAQV,SAAUA,EAAUI,MAAOH,GAC/BQ,EAAAA,cAACE,EAAAA,EAAD,CAAKP,MAAM,cACXK,EAAAA,cAACG,EAAAA,EAAD,MACAH,EAAAA,cAAAA,IAAAA,KAAAA,yBAMRA,EAAAA,cAACC,EAAAA,EAAD,CAAQV,SAAUA,EAAUI,MAAOH,GAC/BQ,EAAAA,cAACE,EAAAA,EAAD,CAAKP,MAAM,cACXK,EAAAA,cAACG,EAAAA,EAAD,MACAH,EAAAA,cAAAA,KAAAA,CAAII,MAAO,CAAEC,UAAU,SAClBT,EAAMU,KAAI,SAACC,GACR,IAAMZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KAEpD,OACIV,EAAAA,cAAAA,KAAAA,CAAIW,IAAKJ,EAAKE,OAAOC,MACjBV,EAAAA,cAAAA,UAAAA,CACIY,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETd,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAACe,EAAAA,KAAD,CACIC,GAAIT,EAAKE,OAAOC,KAChBO,SAAS,OAETjB,EAAAA,cAAAA,OAAAA,CAAMiB,SAAS,YACVtB,KAIbK,EAAAA,cAAAA,QAAAA,MACKkB,EAAAA,EAAAA,GACG,IAAIC,KAAKZ,EAAKE,OAAOW,MACrB,SAIZpB,EAAAA,cAAAA,UAAAA,KACIA,EAAAA,cAAAA,IAAAA,CACIqB,wBAAyB,CACrBC,OACIf,EAAKC,YAAYe,aACjBhB,EAAKiB,SAEbP,SAAS","sources":["webpack://rheajt.github.io/./src/pages/blog.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n// import { Post } from \"../typings/Post\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n    data: any;\n    location: Location;\n}\n\ninterface Post {\n    fields: {\n        slug: string;\n        date: string;\n    };\n    frontmatter: {\n        title: string;\n        description: string;\n    };\n    excerpt: string;\n}\n\nconst Blog: React.FC<Props> = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`;\n    const posts = data.allMarkdownRemark.nodes;\n\n    if (posts.length === 0) {\n        return (\n            <Layout location={location} title={siteTitle}>\n                <Seo title=\"All posts\" />\n                <Bio />\n                <p>No blog posts found.</p>\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo title=\"All posts\" />\n            <Bio />\n            <ol style={{ listStyle: `none` }}>\n                {posts.map((post: Post) => {\n                    const title = post.frontmatter.title || post.fields.slug;\n\n                    return (\n                        <li key={post.fields.slug}>\n                            <article\n                                className=\"post-list-item\"\n                                itemScope\n                                itemType=\"http://schema.org/Article\"\n                            >\n                                <header>\n                                    <h2>\n                                        <Link\n                                            to={post.fields.slug}\n                                            itemProp=\"url\"\n                                        >\n                                            <span itemProp=\"headline\">\n                                                {title}\n                                            </span>\n                                        </Link>\n                                    </h2>\n                                    <small>\n                                        {format(\n                                            new Date(post.fields.date),\n                                            \"PPP\"\n                                        )}\n                                    </small>\n                                </header>\n                                <section>\n                                    <p\n                                        dangerouslySetInnerHTML={{\n                                            __html:\n                                                post.frontmatter.description ||\n                                                post.excerpt,\n                                        }}\n                                        itemProp=\"description\"\n                                    />\n                                </section>\n                            </article>\n                        </li>\n                    );\n                })}\n            </ol>\n        </Layout>\n    );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: { fields: { category: { eq: \"blog\" } } }\n            sort: { fields: [fields___date], order: DESC }\n        ) {\n            nodes {\n                excerpt\n                fields {\n                    slug\n                    date\n                }\n                frontmatter {\n                    title\n                    description\n                }\n            }\n        }\n    }\n`;\n"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","React","Layout","Seo","Bio","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","format","Date","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}