{"version":3,"file":"component---src-templates-flashcards-page-tsx-1df4b85ead8c986fa417.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/components/footer.tsx","webpack://rheajt.github.io/./src/utils/links.ts","webpack://rheajt.github.io/./src/components/header.tsx","webpack://rheajt.github.io/./src/components/layout.tsx","webpack://rheajt.github.io/./src/components/link-button.tsx","webpack://rheajt.github.io/./src/templates/flashcards-page.tsx","webpack://rheajt.github.io/./src/components/section.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { styled } from \"styled-components\";\nexport const Footer = () => {\n\treturn (\n\t\t<StyledFooter>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\tÂ© {new Date().getFullYear()}{\" \"}\n\t\t\t\t\t<a href=\"https://jordanrhea.com\">jordan rhea</a>\n\t\t\t\t</div>\n\n\t\t\t\t{/*isBrowser && (\n                    <PopupWidget\n                        url=\"https://calendly.com/jordan-rhea/30min\"\n                        rootElement={document.getElementById(\"___gatsby\")!}\n                        text=\"Let's talk solutions!\"\n                        textColor=\"#ffffff\"\n                        color=\"#283597\"\n                    />\n                )*/}\n\n\t\t\t\t<div className=\"legals\">\n\t\t\t\t\t<Link to=\"/privacy\">privacy</Link>\n\t\t\t\t\t<Link to=\"/terms\">terms</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StyledFooter>\n\t);\n};\n\nconst StyledFooter = styled.footer`\n    background-color: var(--color-primary);\n    padding: 3em;\n    color: white;\n\n    a,\n    a:hover {\n        color: white;\n        text-decoration: none;\n        margin-right: 1em;\n    }\n\n    .container {\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        max-width: 800px;\n    }\n`;\n","export const links = [\n    { name: \"Projects\", to: \"projects\" },\n    {\n        name: \"About\",\n        to: \"about\",\n        children: [{ name: \"Language Learning\", to: \"language-learning\" }],\n    },\n];\n","import { Link, navigate } from \"gatsby\";\nimport React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { LinkButton } from \"./link-button\";\nimport { links } from \"../utils/links\";\nimport styled from \"styled-components\";\n\nexport const BasicHeader: React.FC = () => {\n    return (\n        <StyledHeader>\n            <div className=\"container\">\n                <div\n                    onClick={() => {\n                        navigate(-1);\n                    }}\n                >\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </div>\n            </div>\n        </StyledHeader>\n    );\n};\nexport const Header: React.FC<{ pathname: string; showLinks?: boolean }> = ({\n    pathname,\n    showLinks = true,\n}) => {\n    const [openDropdown, setOpenDropdown] = React.useState<string | null>(null);\n\n    React.useEffect(() => {\n        if (typeof window === \"undefined\") return;\n        function handleResize() {\n            if (window.innerWidth > 768) {\n                setOpenDropdown(null);\n            }\n        }\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return (\n        <StyledHeader>\n            <div className=\"container\">\n                <Link to=\"/\">\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </Link>\n\n                <nav className={showLinks ? `` : `is-hidden`}>\n                    <div className=\"page-links\">\n                        {links.map((link: any) => {\n                            const hasChildren =\n                                Array.isArray(link.children) &&\n                                link.children.length > 0;\n                            const isActive =\n                                pathname.includes(link.to) ||\n                                (hasChildren &&\n                                    link.children.some((c: any) =>\n                                        pathname.includes(c.to),\n                                    ));\n\n                            if (!hasChildren) {\n                                return (\n                                    <Link\n                                        key={link.to}\n                                        data-label={link.name}\n                                        className={`page-link sans ${isActive ? \"active\" : \"\"}`}\n                                        to={`/${link.to}`}\n                                        onClick={() => setOpenDropdown(null)}\n                                    >\n                                        <span className=\"label\">\n                                            {link.name}\n                                        </span>\n                                    </Link>\n                                );\n                            }\n\n                            return (\n                                <div\n                                    key={link.to}\n                                    className={`page-link-with-dropdown ${isActive ? \"active\" : \"\"} ${openDropdown === link.to ? \"is-open\" : \"\"}`}\n                                >\n                                    <Link\n                                        data-label={link.name}\n                                        className={`page-link sans ${isActive ? \"active\" : \"\"}`}\n                                        to={`/${link.to}`}\n                                        onClick={e => {\n                                            if (typeof window === \"undefined\")\n                                                return;\n                                            if (window.innerWidth <= 768) {\n                                                // if dropdown is already open for this link, follow the link\n                                                if (openDropdown === link.to) {\n                                                    setOpenDropdown(null);\n                                                    return;\n                                                }\n\n                                                e.preventDefault();\n                                                setOpenDropdown(link.to);\n                                            }\n                                        }}\n                                    >\n                                        <span className=\"label\">\n                                            {link.name}\n                                        </span>\n                                    </Link>\n\n                                    <div className=\"dropdown\">\n                                        {link.children.map((child: any) => (\n                                            <Link\n                                                key={child.to}\n                                                to={`/${child.to}`}\n                                                className={`dropdown-item sans ${pathname.includes(child.to) ? \"active\" : \"\"}`}\n                                                onClick={() =>\n                                                    setOpenDropdown(null)\n                                                }\n                                            >\n                                                <span className=\"label\">\n                                                    {child.name}\n                                                </span>\n                                            </Link>\n                                        ))}\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n\n                    <LinkButton\n                        pathname={pathname}\n                        href={\"/contact\"}\n                        label=\"Contact\"\n                    />\n                </nav>\n            </div>\n        </StyledHeader>\n    );\n};\n\nconst StyledHeader = styled.header`\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 1;\n    padding: 0.25em;\n\n    .container {\n        max-width: 800px;\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        justify-content: center;\n    }\n\n    nav.is-hidden {\n        display: none;\n    }\n\n    a {\n        background: none;\n        text-decoration: none;\n        color: var(--color-text);\n    }\n\n    nav {\n        display: flex;\n        align-items: center;\n        list-style: none;\n        text-transform: uppercase;\n        justify-content: space-between;\n        width: 100%;\n        margin-left: 1em;\n\n        a {\n            padding: 0 1em;\n            display: inline-block;\n            position: relative;\n            transition: font-weight 0.5s linear;\n\n            /* reserve space for the bold state to prevent layout shift */\n            &::after {\n                content: attr(data-label);\n                font-weight: 700;\n                visibility: hidden;\n                display: block;\n                height: 0;\n                overflow: hidden;\n                pointer-events: none;\n            }\n\n            .label {\n                font-weight: 400;\n                transition: font-weight 0.05s linear;\n            }\n\n            &:hover .label {\n                font-weight: 700;\n            }\n\n            &.active .label {\n                font-weight: 700;\n            }\n        }\n\n        .page-links {\n            display: flex;\n            align-items: center;\n        }\n\n        /* Dropdown container */\n        .page-link-with-dropdown {\n            position: relative;\n            display: flex;\n            align-content: center;\n        }\n\n        .dropdown {\n            opacity: 0;\n            visibility: hidden;\n            pointer-events: none;\n            position: absolute;\n            top: 100%;\n            left: 100%;\n            transform: translateX(-50%) translateY(6px);\n            background: var(--color-background, #fff);\n            border-radius: 4px;\n            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.12);\n            min-width: 180px;\n            padding: 0.25em 0;\n            z-index: 10;\n            transition:\n                opacity 160ms ease,\n                transform 160ms ease;\n        }\n\n        .page-link-with-dropdown:hover .dropdown,\n        .page-link-with-dropdown .dropdown:hover,\n        .page-link-with-dropdown.is-open .dropdown {\n            opacity: 1;\n            visibility: visible;\n            pointer-events: auto;\n            transform: translateX(-50%) translateY(0);\n        }\n\n        .dropdown-item {\n            display: block;\n            padding: 0.5em 1em;\n            text-decoration: none;\n            color: var(--color-text);\n            white-space: nowrap;\n        }\n\n        .dropdown-item:hover {\n            background: rgba(0, 0, 0, 0.04);\n        }\n    }\n`;\n","import { navigate } from \"gatsby\";\nimport * as React from \"react\";\nimport { ReactNode } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Footer } from \"./footer\";\nimport { BasicHeader, Header } from \"./header\";\n\nexport interface Location {\n    pathname: string;\n    search: string;\n    hash: string;\n}\n\nconst GlobalStyles = createGlobalStyle`\n*,\n:after,\n:before {\n    box-sizing: border-box;\n}\n\nhtml, body {\n\tpadding: 0;\n\tmargin: 0;\n}\n\nhtml {\n    line-height: var(--grid-size);\n    font-size: var(--fontSize-root);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n    font-family: var(--font-body);\n    font-size: var(--fontSize-1);\n    color: var(--color-text);\n    /* subtle graph-paper background */\n    background-color: #fbfbf8;\n    background-image:\n        linear-gradient(to right, rgba(0,0,0,0.06) 1px, transparent 1px),\n        linear-gradient(to bottom, rgba(0,0,0,0.06) 1px, transparent 1px);\n    background-size: 24px 24px;\n    background-repeat: repeat;\n}\n\n:root {\n    --grid-size: 1.5rem;\n    --maxWidth-none: \"none\";\n    --maxWidth-xs: 20rem;\n    --maxWidth-sm: 24rem;\n    --maxWidth-md: 28rem;\n    --maxWidth-lg: 32rem;\n    --maxWidth-xl: 36rem;\n    --maxWidth-2xl: 42rem;\n    --maxWidth-3xl: 48rem;\n    --maxWidth-4xl: 56rem;\n    --maxWidth-full: \"100%\";\n    --maxWidth-wrapper: var(--maxWidth-2xl);\n    --spacing-px: \"1px\";\n    --spacing-0: 0;\n    --spacing-1: calc(var(--grid-size) / 4);\n    --spacing-2: calc(var(--grid-size) / 2);\n    --spacing-3: calc(var(--grid-size) * 0.75);\n    --spacing-4: var(--grid-size);\n    --spacing-5: calc(var(--grid-size) * 1.25);\n    --spacing-6: calc(var(--grid-size) * 1.5);\n    --spacing-8: calc(var(--grid-size) * 2);\n    --spacing-10: calc(var(--grid-size) * 2.5);\n    --spacing-12: calc(var(--grid-size) * 3);\n    --spacing-16: calc(var(--grid-size) * 4);\n    --spacing-20: calc(var(--grid-size) * 5);\n    --spacing-24: calc(var(--grid-size) * 6);\n    --spacing-32: calc(var(--grid-size) * 8);\n    --fontFamily-sans: Work Sans, system-ui, -apple-system, BlinkMacSystemFont,\n        \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif,\n        \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n        \"Noto Color Emoji\";\n    --fontFamily-serif: \"Merriweather\", \"Georgia\", Cambria, \"Times New Roman\",\n        Times, serif;\n    --font-body: var(--fontFamily-sans);\n    --font-heading: var(--fontFamily-sans);\n    --fontWeight-normal: 400;\n    --fontWeight-medium: 500;\n    --fontWeight-semibold: 600;\n    --fontWeight-bold: 700;\n    --fontWeight-extrabold: 800;\n    --fontWeight-black: 900;\n    --fontSize-root: 16px;\n    --lineHeight-none: 1;\n    --lineHeight-tight: 1.25;\n    --lineHeight-normal: 1.5;\n    --lineHeight-relaxed: 1.875;\n    /* 1.200 Minor Third Type Scale */\n    --fontSize-0: 0.833rem;\n    --fontSize-1: 1rem;\n    --fontSize-2: 1.2rem;\n    --fontSize-3: 1.44rem;\n    --fontSize-4: 1.728rem;\n    --fontSize-5: 2.074rem;\n    --fontSize-6: 2.488rem;\n    --fontSize-7: 2.986rem;\n    --color-primary: #283597;\n    --color-text: #2e353f;\n    --color-text-light: #4f5969;\n    --color-heading: #1a202c;\n    --color-heading-black: black;\n    --color-accent: #d1dce5;\n}\n`;\n\nconst Layout: React.FC<{\n    children: ReactNode;\n    location: Location;\n    title: string;\n}> = ({ location, children }) => {\n    return (\n        <div>\n            <GlobalStyles />\n\n            <Header pathname={location.pathname} />\n\n            <main>{children}</main>\n\n            <Footer />\n        </div>\n    );\n};\n\nexport function SimpleLayout({ children }: { children: ReactNode }) {\n    return (\n        <div>\n            <GlobalStyles />\n            <BasicHeader />\n            <main>{children}</main>\n        </div>\n    );\n}\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\ntype LinkButtonProps = {\n\tpathname?: string;\n\thref: string;\n\tlabel: string;\n};\nexport function LinkButton({\n\tpathname = \"\",\n\thref = \"\",\n\tlabel = \"\",\n}: LinkButtonProps) {\n\tif (href.startsWith(\"http\")) {\n\t\treturn (\n\t\t\t<StyledLinkButtons>\n\t\t\t\t<a\n\t\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\thref={href}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</a>\n\t\t\t</StyledLinkButtons>\n\t\t);\n\t}\n\n\treturn (\n\t\t<StyledLinkButtons>\n\t\t\t<Link\n\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t}`}\n\t\t\t\tto={href}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Link>\n\t\t</StyledLinkButtons>\n\t);\n}\n\nconst StyledLinkButtons = styled.div`\n    .page-button {\n        background: none;\n        border: none;\n        padding: 0.5em 1em;\n        font: inherit;\n        cursor: pointer;\n        outline: inherit;\n        text-decoration: none;\n        color: white;\n        font-size: inherit;\n        font-weight: bold;\n        font-family: inherit;\n        border: 1px solid lightgray;\n        border-radius: 3px;\n        background-color: var(--color-primary);\n\n        &:hover {\n            $purple: var(--color-primary);\n            background-color: lighten(#283597, 10%);\n            // background-color: lightgray;\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Section } from \"../components/section\";\nimport { SimpleLayout } from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport styled from \"styled-components\";\n\nexport const pageQuery = graphql`\n    query fileById($id: String!) {\n        file(id: { eq: $id }) {\n            name\n            lesson: childHanziJson {\n                vocabulary {\n                    chinese\n                    pinyin\n                    english\n                    category\n                    part_of_speech\n                }\n            }\n        }\n    }\n`;\n\nexport default function FlashcardsPage(props: any) {\n    const { vocabulary } = props.data.file.lesson;\n\n    const [currentIndex, setCurrentIndex] = React.useState(0);\n\n    return (\n        <SimpleLayout>\n            <Seo title={`Flashcards from ${props.pageContext.id}`} />\n\n            <Section>\n                <Container>\n                    <CardArea>\n                        {vocabulary && vocabulary.length > 0 ? (\n                            <Flashcard item={vocabulary[currentIndex]} />\n                        ) : (\n                            <div>No vocabulary</div>\n                        )}\n                    </CardArea>\n\n                    <NavRow>\n                        <NavButton\n                            onClick={() => {\n                                if (!vocabulary || vocabulary.length === 0)\n                                    return;\n                                const newIndex =\n                                    (currentIndex - 1 + vocabulary.length) %\n                                    vocabulary.length;\n                                setCurrentIndex(newIndex);\n                            }}\n                            aria-label=\"Previous card\"\n                        >\n                            Prev\n                        </NavButton>\n\n                        <Counter>\n                            {currentIndex + 1} / {vocabulary?.length || 0}\n                        </Counter>\n\n                        <NavButton\n                            onClick={() => {\n                                if (!vocabulary || vocabulary.length === 0)\n                                    return;\n                                const newIndex =\n                                    (currentIndex + 1) % vocabulary.length;\n                                setCurrentIndex(newIndex);\n                            }}\n                            aria-label=\"Next card\"\n                        >\n                            Next\n                        </NavButton>\n                    </NavRow>\n                </Container>\n            </Section>\n        </SimpleLayout>\n    );\n}\n\nconst Flashcard = ({ item }: { item: any }) => {\n    const [isFlipped, setIsFlipped] = React.useState<boolean>(false);\n\n    return (\n        <CardOuter>\n            <CardInner\n                flipped={isFlipped.toString()}\n                onClick={() => setIsFlipped(prev => !prev)}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={e => {\n                    if (e.key === \"Enter\" || e.key === \" \") {\n                        e.preventDefault();\n                        setIsFlipped(prev => !prev);\n                    }\n                }}\n            >\n                <CardFront>\n                    <ChineseText>{item.chinese}</ChineseText>\n                    <PinyinText>{item.pinyin}</PinyinText>\n                </CardFront>\n\n                <CardBack>\n                    <EnglishText>{item.english}</EnglishText>\n                    {item.part_of_speech && <POS>{item.part_of_speech}</POS>}\n                </CardBack>\n            </CardInner>\n        </CardOuter>\n    );\n};\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 2em;\n    gap: 16px;\n`;\n\nconst NavRow = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 12px;\n`;\n\nconst NavButton = styled.button`\n    padding: 6px 10px;\n    border-radius: 4px;\n    border: 1px solid #ddd;\n    background: #fff;\n    cursor: pointer;\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n`;\n\nconst CardArea = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Counter = styled.div`\n    font-size: 0.9rem;\n    color: #666;\n`;\n\nconst CardOuter = styled.div`\n    perspective: 1000px;\n`;\n\nconst CardInner = styled.div<{ flipped: string }>`\n    width: 360px;\n    height: 300px;\n    position: relative;\n    transform-style: preserve-3d;\n    transition: transform 0.6s;\n    transform: ${({ flipped }) =>\n        flipped === \"true\" ? \"rotateY(180deg)\" : \"none\"};\n    cursor: pointer;\n`;\n\nconst CardFace = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    backface-visibility: hidden;\n    border-radius: 8px;\n    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.12);\n    padding: 12px;\n`;\n\nconst CardFront = styled(CardFace)`\n    background: #fff;\n`;\n\nconst CardBack = styled(CardFace)`\n    background: #f7f7f7;\n    transform: rotateY(180deg);\n`;\n\nconst ChineseText = styled.div`\n    font-size: 4.6rem;\n    font-weight: 700;\n    margin-bottom: 8px;\n`;\n\nconst PinyinText = styled.div`\n    margin-top: 1rem;\n    font-size: 1rem;\n    color: #555;\n`;\n\nconst EnglishText = styled.div`\n    font-size: 1rem;\n    color: #222;\n`;\n\nconst POS = styled.div`\n    font-size: 0.8rem;\n    color: #666;\n    margin-top: 8px;\n`;\n","import React from \"react\";\nimport { styled } from \"styled-components\";\n\ntype SectionProps = {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n\tid?: string;\n\tstyle?: React.CSSProperties;\n};\n\nexport const Section = (props: SectionProps) => {\n\treturn (\n\t\t<StyledSection\n\t\t\tclassName={props.className}\n\t\t\tid={props.id}\n\t\t\tstyle={props.style}\n\t\t>\n\t\t\t{props.children}\n\t\t</StyledSection>\n\t);\n};\n\nconst StyledSection = styled.section`\n    padding: 3em 0.25em;\n    margin: 0 auto;\n    max-width: 800px;\n\n    @media (max-width: 768px) {\n        padding: 2em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["Footer","React","StyledFooter","className","Date","getFullYear","href","Link","to","styled","footer","withConfig","displayName","componentId","links","name","children","BasicHeader","StyledHeader","onClick","navigate","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","Header","_ref","pathname","showLinks","openDropdown","setOpenDropdown","window","addEventListener","handleResize","removeEventListener","innerWidth","map","link","hasChildren","Array","isArray","length","isActive","includes","some","c","key","e","preventDefault","child","LinkButton","label","header","GlobalStyles","createGlobalStyle","SimpleLayout","_ref2","location","startsWith","StyledLinkButtons","div","FlashcardsPage","props","vocabulary","data","file","lesson","currentIndex","setCurrentIndex","Seo","title","pageContext","id","Section","Container","CardArea","Flashcard","item","NavRow","NavButton","newIndex","Counter","isFlipped","setIsFlipped","CardOuter","CardInner","flipped","toString","prev","role","tabIndex","onKeyDown","CardFront","ChineseText","chinese","PinyinText","pinyin","CardBack","EnglishText","english","part_of_speech","POS","button","CardFace","StyledSection","style","section"],"sourceRoot":""}