{"version":3,"file":"component---src-pages-language-learning-index-tsx-803b32ad26ef8977c916.js","mappings":"gPAmBe,SAASA,EAA2BC,GAA0B,IAAzB,KAAEC,EAAI,SAAEC,GAAeF,EACvE,MAAMG,EAAQF,EAAKG,sBAAsBC,MACzC,OACIC,EAAAA,cAACC,EAAAA,EAAM,CAACL,SAAUA,EAAUM,MAAM,SAC9BF,EAAAA,cAACG,EAAAA,EAAG,CAACD,MAAM,8BACXF,EAAAA,cAACI,EAAAA,EAAO,KACJJ,EAAAA,cAAA,UAAI,oDAEJA,EAAAA,cAAA,SACIA,EAAAA,cAAA,SAAG,0BAA2B,IAC9BA,EAAAA,cAAA,KAAGK,KAAK,wGAAuG,8BAInHL,EAAAA,cAAA,SAAG,mXAUHA,EAAAA,cAACM,EAAS,KACNN,EAAAA,cAACO,EAAU,KACPP,EAAAA,cAACQ,EAAa,KACVR,EAAAA,cAACS,EAAc,CAACC,GAAG,iCAAgC,eAKvDV,EAAAA,cAACW,EAAW,KACPd,EAAMe,IAAKC,GACRb,EAAAA,cAAA,MAAIc,IAAKD,EAAKE,IACVf,EAAAA,cAACgB,EAAU,CACPN,GAAI,4BAA4BG,EAAKI,UACxC,UACWJ,EAAKI,OAAO,SAAOJ,EAAKK,UAOpDlB,EAAAA,cAACmB,EAAW,KACRnB,EAAAA,cAACoB,EAAAA,cAAa,SAMtC,CAEA,MAAMZ,EAAgBa,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,gBAAVJ,CAAU,6EAO1BZ,GAAiBY,EAAAA,EAAAA,SAAOK,EAAAA,MAAKH,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAAZJ,CAAY,sUAmB7Bf,EAAYe,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAVJ,CAAU,8FAQtBd,EAAac,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAVJ,CAAU,MAEvBF,EAAcE,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAVJ,CAAU,uBAIxBV,EAAcU,EAAAA,QAAOM,GAAEJ,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAATJ,CAAS,iEAQvBL,GAAaK,EAAAA,EAAAA,SAAOK,EAAAA,MAAKH,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAZJ,CAAY,gT,gHCtHxB,MAAMO,EAASA,IAEpB5B,EAAAA,cAAC6B,EAAY,KACZ7B,EAAAA,cAAA,OAAK8B,UAAU,aACd9B,EAAAA,cAAA,WAAK,MACD,IAAI+B,MAAOC,cAAe,IAC7BhC,EAAAA,cAAA,KAAGK,KAAK,0BAAyB,gBAalCL,EAAAA,cAAA,OAAK8B,UAAU,UACd9B,EAAAA,cAAC0B,EAAAA,KAAI,CAAChB,GAAG,YAAW,WACpBV,EAAAA,cAAC0B,EAAAA,KAAI,CAAChB,GAAG,UAAS,YAOjBmB,EAAeR,EAAAA,OAAOY,OAAMV,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAbJ,CAAa,yO,wBC/B3B,MAAMa,EAAQ,CACjB,CAAEC,KAAM,WAAYzB,GAAI,YACxB,CACIyB,KAAM,QACNzB,GAAI,QACJ0B,SAAU,CAAC,CAAED,KAAM,oBAAqBzB,GAAI,wBCEvC2B,EAAwBA,IAE7BrC,EAAAA,cAACsC,EAAY,KACTtC,EAAAA,cAAA,OAAK8B,UAAU,aACX9B,EAAAA,cAAA,OACIuC,QAASA,MACLC,EAAAA,EAAAA,WAAU,KAGdxC,EAAAA,cAACyC,EAAAA,EAAW,CACRC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,gCACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,qBAAoBC,YAAAC,EAAA,WAOnCC,EAA8DzD,IAGpE,IAHqE,SACxE0D,EAAQ,UACRC,GAAY,GACf3D,EACG,MAAO4D,EAAcC,GAAmBvD,EAAAA,SAA8B,MAatE,OAXAA,EAAAA,UAAgB,KACZ,GAAsB,oBAAXwD,OAOX,OADAA,OAAOC,iBAAiB,SAAUC,GAC3B,IAAMF,OAAOG,oBAAoB,SAAUD,GANlD,SAASA,IACDF,OAAOI,WAAa,KACpBL,EAAgB,KAExB,GAGD,IAGCvD,EAAAA,cAACsC,EAAY,KACTtC,EAAAA,cAAA,OAAK8B,UAAU,aACX9B,EAAAA,cAAC0B,EAAAA,KAAI,CAAChB,GAAG,KACLV,EAAAA,cAACyC,EAAAA,EAAW,CACRC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,gCACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,qBAAoBC,YAAAC,EAAA,SAIhClD,EAAAA,cAAA,OAAK8B,UAAWuB,EAAY,GAAK,aAC7BrD,EAAAA,cAAA,OAAK8B,UAAU,cACVI,EAAMtB,IAAKiD,IACR,MAAMC,EACFC,MAAMC,QAAQH,EAAKzB,WACnByB,EAAKzB,SAAS6B,OAAS,EACrBC,EACFd,EAASe,SAASN,EAAKnD,KACtBoD,GACGD,EAAKzB,SAASgC,KAAMC,GAChBjB,EAASe,SAASE,EAAE3D,KAGhC,OAAKoD,EAiBD9D,EAAAA,cAAA,OACIc,IAAK+C,EAAKnD,GACVoB,UAAW,2BAA2BoC,EAAW,SAAW,MAAMZ,IAAiBO,EAAKnD,GAAK,UAAY,MAEzGV,EAAAA,cAAC0B,EAAAA,KAAI,CACD,aAAYmC,EAAK1B,KACjBL,UAAW,mBAAkBoC,EAAW,SAAW,IACnDxD,GAAI,IAAImD,EAAKnD,KACb6B,QAAS+B,IACL,GAAsB,oBAAXd,QAEPA,OAAOI,YAAc,IAAK,CAE1B,GAAIN,IAAiBO,EAAKnD,GAEtB,YADA6C,EAAgB,MAIpBe,EAAEC,iBACFhB,EAAgBM,EAAKnD,GACzB,IAGJV,EAAAA,cAAA,QAAM8B,UAAU,SACX+B,EAAK1B,OAIdnC,EAAAA,cAAA,OAAK8B,UAAU,YACV+B,EAAKzB,SAASxB,IAAK4D,GAChBxE,EAAAA,cAAC0B,EAAAA,KAAI,CACDZ,IAAK0D,EAAM9D,GACXA,GAAI,IAAI8D,EAAM9D,KACdoB,UAAW,uBAAsBsB,EAASe,SAASK,EAAM9D,IAAM,SAAW,IAC1E6B,QAASA,IACLgB,EAAgB,OAGpBvD,EAAAA,cAAA,QAAM8B,UAAU,SACX0C,EAAMrC,UAtDvBnC,EAAAA,cAAC0B,EAAAA,KAAI,CACDZ,IAAK+C,EAAKnD,GACV,aAAYmD,EAAK1B,KACjBL,UAAW,mBAAkBoC,EAAW,SAAW,IACnDxD,GAAI,IAAImD,EAAKnD,KACb6B,QAASA,IAAMgB,EAAgB,OAE/BvD,EAAAA,cAAA,QAAM8B,UAAU,SACX+B,EAAK1B,UAwD9BnC,EAAAA,cAACyE,EAAAA,EAAU,CACPrB,SAAUA,EACV/C,KAAM,WACNqE,MAAM,gBAQxBpC,EAAejB,EAAAA,QAAOsD,OAAMpD,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAbJ,CAAa,gjDC3I5BuD,GAAeC,EAAAA,EAAAA,mBAAiB,wuEAmH/B,SAASC,EAAYC,GAAyC,IAAxC,SAAE3C,GAAmC2C,EAC9D,OACI/E,EAAAA,cAAA,WACIA,EAAAA,cAAC4E,EAAY,MACb5E,EAAAA,cAACqC,EAAW,MACZrC,EAAAA,cAAA,YAAOoC,GAGnB,CAEA,MAxBK1C,IAA6B,IAA5B,SAAEE,EAAQ,SAAEwC,GAAU1C,EACxB,OACIM,EAAAA,cAAA,WACIA,EAAAA,cAAC4E,EAAY,MAEb5E,EAAAA,cAACmD,EAAM,CAACC,SAAUxD,EAASwD,WAE3BpD,EAAAA,cAAA,YAAOoC,GAEPpC,EAAAA,cAAC4B,EAAM,O,+EClHZ,SAAS6C,EAAU/E,GAIL,IAJM,SAC1B0D,EAAW,GAAE,KACb/C,EAAO,GAAE,MACTqE,EAAQ,IACShF,EACjB,OAAIW,EAAK2E,WAAW,QAElBhF,EAAAA,cAACiF,EAAiB,KACjBjF,EAAAA,cAAA,KACC8B,UAAW,oBAAoBsB,EAASe,SAAS9D,IAAS,WAE1DA,KAAMA,GAELqE,IAOJ1E,EAAAA,cAACiF,EAAiB,KACjBjF,EAAAA,cAAC0B,EAAAA,KAAI,CACJI,UAAW,oBAAoBsB,EAASe,SAAS9D,IAAS,WAE1DK,GAAIL,GAEHqE,GAIL,CAEA,MAAMO,E,QAAoB5D,QAAOC,IAAGC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAVJ,CAAU,oW,+EC/B7B,MAAMjB,EAAW8E,GAEtBlF,EAAAA,cAACmF,EAAa,CACbrD,UAAWoD,EAAMpD,UACjBf,GAAImE,EAAMnE,GACVqE,MAAOF,EAAME,OAEZF,EAAM9C,UAKJ+C,EAAgB9D,EAAAA,OAAOgE,QAAO9D,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAdJ,CAAc,gI","sources":["webpack://rheajt.github.io/./src/pages/language-learning/index.tsx","webpack://rheajt.github.io/./src/components/footer.tsx","webpack://rheajt.github.io/./src/utils/links.ts","webpack://rheajt.github.io/./src/components/header.tsx","webpack://rheajt.github.io/./src/components/layout.tsx","webpack://rheajt.github.io/./src/components/link-button.tsx","webpack://rheajt.github.io/./src/components/section.tsx"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/layout\";\nimport { Section } from \"../../components/section\";\nimport Seo from \"../../components/seo\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { PartsOfSpeech } from \"./partsOfSpeech\";\n\nexport const pageQuery = graphql`\n    query {\n        allGoogleLessonsSheet(sort: { lesson: DESC }) {\n            nodes {\n                date\n                lesson\n            }\n        }\n    }\n`;\n\nexport default function ChineseLanguageLearningPage({ data, location }: any) {\n    const pages = data.allGoogleLessonsSheet.nodes;\n    return (\n        <Layout location={location} title=\"About\">\n            <Seo title=\"Chinese Language Learning\" />\n            <Section>\n                <h1>Using Spreadsheets to Optimize Language Learning</h1>\n\n                <p>\n                    <b>My “Zhongwen” Workbook</b>{\" \"}\n                    <a href=\"https://docs.google.com/spreadsheets/d/1tJvDMO8ATqcR6KhXBYxO_Ygb9P9KXECBqEhk8JOh7pc/edit?usp=sharing\">\n                        View the spreadsheet here\n                    </a>\n                </p>\n                <p>\n                    I’ve been studying Chinese via tutoring and taking tons of\n                    notes. But raw notes pile up faster than I can review them,\n                    and a lot get forgotten. To fix that, I created a\n                    spreadsheet I call Zhongwen. It helps me turn scattered\n                    notes into something I can use, track, and improve over\n                    time. Here’s how it works — and how you might adapt it for\n                    your own languages/studies.\n                </p>\n\n                <TwoColumn>\n                    <LeftColumn>\n                        <DictionaryRow>\n                            <DictionaryLink to=\"/language-learning/dictionary\">\n                                Dictionary\n                            </DictionaryLink>\n                        </DictionaryRow>\n\n                        <LessonsList>\n                            {pages.map((page: any) => (\n                                <li key={page.id}>\n                                    <LessonLink\n                                        to={`/language-learning/lesson${page.lesson}`}\n                                    >\n                                        Lesson {page.lesson} from {page.date}\n                                    </LessonLink>\n                                </li>\n                            ))}\n                        </LessonsList>\n                    </LeftColumn>\n\n                    <RightColumn>\n                        <PartsOfSpeech />\n                    </RightColumn>\n                </TwoColumn>\n            </Section>\n        </Layout>\n    );\n}\n\nconst DictionaryRow = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin: 1rem 0 1.25rem 0;\n`;\n\nconst DictionaryLink = styled(Link)`\n    display: inline-block;\n    padding: 0.55rem 0.95rem;\n    background: var(--color-primary);\n    color: #fff;\n    border-radius: 8px;\n    font-weight: 700;\n    text-decoration: none;\n    box-shadow: 0 6px 18px rgba(40, 53, 151, 0.12);\n    transition:\n        transform 120ms ease,\n        box-shadow 120ms ease;\n\n    &:hover {\n        transform: translateY(-3px);\n        box-shadow: 0 12px 30px rgba(40, 53, 151, 0.14);\n    }\n`;\n\nconst TwoColumn = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 320px;\n    gap: 2rem;\n    align-items: start;\n    margin-top: 1rem;\n`;\n\nconst LeftColumn = styled.div``;\n\nconst RightColumn = styled.div`\n    min-height: 160px;\n`;\n\nconst LessonsList = styled.ul`\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    display: grid;\n    gap: 0.5rem;\n`;\n\nconst LessonLink = styled(Link)`\n    display: block;\n    padding: 0.5rem 0.75rem;\n    border-radius: 6px;\n    color: var(--color-text);\n    text-decoration: none;\n    border: 1px solid rgba(0, 0, 0, 0.04);\n    transition:\n        background 120ms ease,\n        color 120ms ease,\n        transform 120ms ease;\n\n    &:hover {\n        background: rgba(40, 53, 151, 0.06);\n        color: var(--color-primary);\n        transform: translateX(3px);\n    }\n`;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { styled } from \"styled-components\";\nexport const Footer = () => {\n\treturn (\n\t\t<StyledFooter>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\t© {new Date().getFullYear()}{\" \"}\n\t\t\t\t\t<a href=\"https://jordanrhea.com\">jordan rhea</a>\n\t\t\t\t</div>\n\n\t\t\t\t{/*isBrowser && (\n                    <PopupWidget\n                        url=\"https://calendly.com/jordan-rhea/30min\"\n                        rootElement={document.getElementById(\"___gatsby\")!}\n                        text=\"Let's talk solutions!\"\n                        textColor=\"#ffffff\"\n                        color=\"#283597\"\n                    />\n                )*/}\n\n\t\t\t\t<div className=\"legals\">\n\t\t\t\t\t<Link to=\"/privacy\">privacy</Link>\n\t\t\t\t\t<Link to=\"/terms\">terms</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StyledFooter>\n\t);\n};\n\nconst StyledFooter = styled.footer`\n    background-color: var(--color-primary);\n    padding: 3em;\n    color: white;\n\n    a,\n    a:hover {\n        color: white;\n        text-decoration: none;\n        margin-right: 1em;\n    }\n\n    .container {\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        max-width: 800px;\n    }\n`;\n","export const links = [\n    { name: \"Projects\", to: \"projects\" },\n    {\n        name: \"About\",\n        to: \"about\",\n        children: [{ name: \"Language Learning\", to: \"language-learning\" }],\n    },\n];\n","import { Link, navigate } from \"gatsby\";\nimport React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { LinkButton } from \"./link-button\";\nimport { links } from \"../utils/links\";\nimport styled from \"styled-components\";\n\nexport const BasicHeader: React.FC = () => {\n    return (\n        <StyledHeader>\n            <div className=\"container\">\n                <div\n                    onClick={() => {\n                        navigate(-1);\n                    }}\n                >\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </div>\n            </div>\n        </StyledHeader>\n    );\n};\nexport const Header: React.FC<{ pathname: string; showLinks?: boolean }> = ({\n    pathname,\n    showLinks = true,\n}) => {\n    const [openDropdown, setOpenDropdown] = React.useState<string | null>(null);\n\n    React.useEffect(() => {\n        if (typeof window === \"undefined\") return;\n        function handleResize() {\n            if (window.innerWidth > 768) {\n                setOpenDropdown(null);\n            }\n        }\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return (\n        <StyledHeader>\n            <div className=\"container\">\n                <Link to=\"/\">\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </Link>\n\n                <nav className={showLinks ? `` : `is-hidden`}>\n                    <div className=\"page-links\">\n                        {links.map((link: any) => {\n                            const hasChildren =\n                                Array.isArray(link.children) &&\n                                link.children.length > 0;\n                            const isActive =\n                                pathname.includes(link.to) ||\n                                (hasChildren &&\n                                    link.children.some((c: any) =>\n                                        pathname.includes(c.to),\n                                    ));\n\n                            if (!hasChildren) {\n                                return (\n                                    <Link\n                                        key={link.to}\n                                        data-label={link.name}\n                                        className={`page-link sans ${isActive ? \"active\" : \"\"}`}\n                                        to={`/${link.to}`}\n                                        onClick={() => setOpenDropdown(null)}\n                                    >\n                                        <span className=\"label\">\n                                            {link.name}\n                                        </span>\n                                    </Link>\n                                );\n                            }\n\n                            return (\n                                <div\n                                    key={link.to}\n                                    className={`page-link-with-dropdown ${isActive ? \"active\" : \"\"} ${openDropdown === link.to ? \"is-open\" : \"\"}`}\n                                >\n                                    <Link\n                                        data-label={link.name}\n                                        className={`page-link sans ${isActive ? \"active\" : \"\"}`}\n                                        to={`/${link.to}`}\n                                        onClick={e => {\n                                            if (typeof window === \"undefined\")\n                                                return;\n                                            if (window.innerWidth <= 768) {\n                                                // if dropdown is already open for this link, follow the link\n                                                if (openDropdown === link.to) {\n                                                    setOpenDropdown(null);\n                                                    return;\n                                                }\n\n                                                e.preventDefault();\n                                                setOpenDropdown(link.to);\n                                            }\n                                        }}\n                                    >\n                                        <span className=\"label\">\n                                            {link.name}\n                                        </span>\n                                    </Link>\n\n                                    <div className=\"dropdown\">\n                                        {link.children.map((child: any) => (\n                                            <Link\n                                                key={child.to}\n                                                to={`/${child.to}`}\n                                                className={`dropdown-item sans ${pathname.includes(child.to) ? \"active\" : \"\"}`}\n                                                onClick={() =>\n                                                    setOpenDropdown(null)\n                                                }\n                                            >\n                                                <span className=\"label\">\n                                                    {child.name}\n                                                </span>\n                                            </Link>\n                                        ))}\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n\n                    <LinkButton\n                        pathname={pathname}\n                        href={\"/contact\"}\n                        label=\"Contact\"\n                    />\n                </nav>\n            </div>\n        </StyledHeader>\n    );\n};\n\nconst StyledHeader = styled.header`\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 1;\n    padding: 0.25em;\n\n    .container {\n        max-width: 800px;\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        justify-content: center;\n    }\n\n    nav.is-hidden {\n        display: none;\n    }\n\n    a {\n        background: none;\n        text-decoration: none;\n        color: var(--color-text);\n    }\n\n    nav {\n        display: flex;\n        align-items: center;\n        list-style: none;\n        text-transform: uppercase;\n        justify-content: space-between;\n        width: 100%;\n        margin-left: 1em;\n\n        a {\n            padding: 0 1em;\n            display: inline-block;\n            position: relative;\n            transition: font-weight 0.5s linear;\n\n            /* reserve space for the bold state to prevent layout shift */\n            &::after {\n                content: attr(data-label);\n                font-weight: 700;\n                visibility: hidden;\n                display: block;\n                height: 0;\n                overflow: hidden;\n                pointer-events: none;\n            }\n\n            .label {\n                font-weight: 400;\n                transition: font-weight 0.05s linear;\n            }\n\n            &:hover .label {\n                font-weight: 700;\n            }\n\n            &.active .label {\n                font-weight: 700;\n            }\n        }\n\n        .page-links {\n            display: flex;\n            align-items: center;\n        }\n\n        /* Dropdown container */\n        .page-link-with-dropdown {\n            position: relative;\n            display: flex;\n            align-content: center;\n        }\n\n        .dropdown {\n            opacity: 0;\n            visibility: hidden;\n            pointer-events: none;\n            position: absolute;\n            top: 100%;\n            left: 100%;\n            transform: translateX(-50%) translateY(6px);\n            background: var(--color-background, #fff);\n            border-radius: 4px;\n            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.12);\n            min-width: 180px;\n            padding: 0.25em 0;\n            z-index: 10;\n            transition:\n                opacity 160ms ease,\n                transform 160ms ease;\n        }\n\n        .page-link-with-dropdown:hover .dropdown,\n        .page-link-with-dropdown .dropdown:hover,\n        .page-link-with-dropdown.is-open .dropdown {\n            opacity: 1;\n            visibility: visible;\n            pointer-events: auto;\n            transform: translateX(-50%) translateY(0);\n        }\n\n        .dropdown-item {\n            display: block;\n            padding: 0.5em 1em;\n            text-decoration: none;\n            color: var(--color-text);\n            white-space: nowrap;\n        }\n\n        .dropdown-item:hover {\n            background: rgba(0, 0, 0, 0.04);\n        }\n    }\n`;\n","import { navigate } from \"gatsby\";\nimport * as React from \"react\";\nimport { ReactNode } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Footer } from \"./footer\";\nimport { BasicHeader, Header } from \"./header\";\n\nexport interface Location {\n    pathname: string;\n    search: string;\n    hash: string;\n}\n\nconst GlobalStyles = createGlobalStyle`\n*,\n:after,\n:before {\n    box-sizing: border-box;\n}\n\nhtml, body {\n\tpadding: 0;\n\tmargin: 0;\n}\n\nhtml {\n    line-height: var(--grid-size);\n    font-size: var(--fontSize-root);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n    font-family: var(--font-body);\n    font-size: var(--fontSize-1);\n    color: var(--color-text);\n    /* subtle graph-paper background */\n    background-color: #fbfbf8;\n    background-image:\n        linear-gradient(to right, rgba(0,0,0,0.06) 1px, transparent 1px),\n        linear-gradient(to bottom, rgba(0,0,0,0.06) 1px, transparent 1px);\n    background-size: 24px 24px;\n    background-repeat: repeat;\n}\n\n:root {\n    --grid-size: 1.5rem;\n    --maxWidth-none: \"none\";\n    --maxWidth-xs: 20rem;\n    --maxWidth-sm: 24rem;\n    --maxWidth-md: 28rem;\n    --maxWidth-lg: 32rem;\n    --maxWidth-xl: 36rem;\n    --maxWidth-2xl: 42rem;\n    --maxWidth-3xl: 48rem;\n    --maxWidth-4xl: 56rem;\n    --maxWidth-full: \"100%\";\n    --maxWidth-wrapper: var(--maxWidth-2xl);\n    --spacing-px: \"1px\";\n    --spacing-0: 0;\n    --spacing-1: calc(var(--grid-size) / 4);\n    --spacing-2: calc(var(--grid-size) / 2);\n    --spacing-3: calc(var(--grid-size) * 0.75);\n    --spacing-4: var(--grid-size);\n    --spacing-5: calc(var(--grid-size) * 1.25);\n    --spacing-6: calc(var(--grid-size) * 1.5);\n    --spacing-8: calc(var(--grid-size) * 2);\n    --spacing-10: calc(var(--grid-size) * 2.5);\n    --spacing-12: calc(var(--grid-size) * 3);\n    --spacing-16: calc(var(--grid-size) * 4);\n    --spacing-20: calc(var(--grid-size) * 5);\n    --spacing-24: calc(var(--grid-size) * 6);\n    --spacing-32: calc(var(--grid-size) * 8);\n    --fontFamily-sans: Work Sans, system-ui, -apple-system, BlinkMacSystemFont,\n        \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif,\n        \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n        \"Noto Color Emoji\";\n    --fontFamily-serif: \"Merriweather\", \"Georgia\", Cambria, \"Times New Roman\",\n        Times, serif;\n    --font-body: var(--fontFamily-sans);\n    --font-heading: var(--fontFamily-sans);\n    --fontWeight-normal: 400;\n    --fontWeight-medium: 500;\n    --fontWeight-semibold: 600;\n    --fontWeight-bold: 700;\n    --fontWeight-extrabold: 800;\n    --fontWeight-black: 900;\n    --fontSize-root: 16px;\n    --lineHeight-none: 1;\n    --lineHeight-tight: 1.25;\n    --lineHeight-normal: 1.5;\n    --lineHeight-relaxed: 1.875;\n    /* 1.200 Minor Third Type Scale */\n    --fontSize-0: 0.833rem;\n    --fontSize-1: 1rem;\n    --fontSize-2: 1.2rem;\n    --fontSize-3: 1.44rem;\n    --fontSize-4: 1.728rem;\n    --fontSize-5: 2.074rem;\n    --fontSize-6: 2.488rem;\n    --fontSize-7: 2.986rem;\n    --color-primary: #283597;\n    --color-text: #2e353f;\n    --color-text-light: #4f5969;\n    --color-heading: #1a202c;\n    --color-heading-black: black;\n    --color-accent: #d1dce5;\n}\n`;\n\nconst Layout: React.FC<{\n    children: ReactNode;\n    location: Location;\n    title: string;\n}> = ({ location, children }) => {\n    return (\n        <div>\n            <GlobalStyles />\n\n            <Header pathname={location.pathname} />\n\n            <main>{children}</main>\n\n            <Footer />\n        </div>\n    );\n};\n\nexport function SimpleLayout({ children }: { children: ReactNode }) {\n    return (\n        <div>\n            <GlobalStyles />\n            <BasicHeader />\n            <main>{children}</main>\n        </div>\n    );\n}\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\ntype LinkButtonProps = {\n\tpathname?: string;\n\thref: string;\n\tlabel: string;\n};\nexport function LinkButton({\n\tpathname = \"\",\n\thref = \"\",\n\tlabel = \"\",\n}: LinkButtonProps) {\n\tif (href.startsWith(\"http\")) {\n\t\treturn (\n\t\t\t<StyledLinkButtons>\n\t\t\t\t<a\n\t\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\thref={href}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</a>\n\t\t\t</StyledLinkButtons>\n\t\t);\n\t}\n\n\treturn (\n\t\t<StyledLinkButtons>\n\t\t\t<Link\n\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t}`}\n\t\t\t\tto={href}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Link>\n\t\t</StyledLinkButtons>\n\t);\n}\n\nconst StyledLinkButtons = styled.div`\n    .page-button {\n        background: none;\n        border: none;\n        padding: 0.5em 1em;\n        font: inherit;\n        cursor: pointer;\n        outline: inherit;\n        text-decoration: none;\n        color: white;\n        font-size: inherit;\n        font-weight: bold;\n        font-family: inherit;\n        border: 1px solid lightgray;\n        border-radius: 3px;\n        background-color: var(--color-primary);\n\n        &:hover {\n            $purple: var(--color-primary);\n            background-color: lighten(#283597, 10%);\n            // background-color: lightgray;\n        }\n    }\n`;\n","import React from \"react\";\nimport { styled } from \"styled-components\";\n\ntype SectionProps = {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n\tid?: string;\n\tstyle?: React.CSSProperties;\n};\n\nexport const Section = (props: SectionProps) => {\n\treturn (\n\t\t<StyledSection\n\t\t\tclassName={props.className}\n\t\t\tid={props.id}\n\t\t\tstyle={props.style}\n\t\t>\n\t\t\t{props.children}\n\t\t</StyledSection>\n\t);\n};\n\nconst StyledSection = styled.section`\n    padding: 3em 0.25em;\n    margin: 0 auto;\n    max-width: 800px;\n\n    @media (max-width: 768px) {\n        padding: 2em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["ChineseLanguageLearningPage","_ref","data","location","pages","allGoogleLessonsSheet","nodes","React","Layout","title","Seo","Section","href","TwoColumn","LeftColumn","DictionaryRow","DictionaryLink","to","LessonsList","map","page","key","id","LessonLink","lesson","date","RightColumn","PartsOfSpeech","styled","div","withConfig","displayName","componentId","Link","ul","Footer","StyledFooter","className","Date","getFullYear","footer","links","name","children","BasicHeader","StyledHeader","onClick","navigate","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","Header","pathname","showLinks","openDropdown","setOpenDropdown","window","addEventListener","handleResize","removeEventListener","innerWidth","link","hasChildren","Array","isArray","length","isActive","includes","some","c","e","preventDefault","child","LinkButton","label","header","GlobalStyles","createGlobalStyle","SimpleLayout","_ref2","startsWith","StyledLinkButtons","props","StyledSection","style","section"],"sourceRoot":""}