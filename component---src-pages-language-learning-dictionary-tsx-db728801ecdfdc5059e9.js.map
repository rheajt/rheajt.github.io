{"version":3,"file":"component---src-pages-language-learning-dictionary-tsx-db728801ecdfdc5059e9.js","mappings":"+OAkCe,SAASA,EAA6BC,GAA0B,IAAzB,KAAEC,EAAI,SAAEC,GAAeF,EACzE,MAAOG,EAAQC,GAAaC,EAAAA,SAAuB,IAEnD,IAAKJ,IAASA,EAAKK,uBACf,OAAOD,EAAAA,cAACE,EAAAA,EAAM,MAGlB,MAAMC,EAAgBP,EAAKK,uBAAuBG,OAAS,GAE3D,OADAC,QAAQC,IAAIV,GAERI,EAAAA,cAACO,EAAAA,EAAM,CACHV,SAAUA,EACVW,MAAM,wCAENR,EAAAA,cAACS,EAAAA,EAAG,CAACD,MAAM,yCACXR,EAAAA,cAACU,EAAAA,EAAO,KACJV,EAAAA,cAACW,EAAS,KACNX,EAAAA,cAACY,EAAW,CACRC,KAAK,OACLC,MAAOhB,EACPiB,SAAWC,GACPjB,EAAUiB,EAAEC,OAAOH,OAEvBI,YAAY,kBACZ,aAAW,kBAInBlB,EAAAA,cAACmB,EAAS,KACLhB,EACIL,OAAOsB,IACJ,IAAKtB,EAAQ,OAAO,EACpB,MAAMuB,EAAcvB,EAAOwB,cAC3B,OACKF,EAAKG,SACFH,EAAKG,QACAD,cACAE,SAASH,IACjBD,EAAKK,QACFL,EAAKK,OACAH,cACAE,SAASH,IACjBD,EAAKM,SACFN,EAAKM,QACAJ,cACAE,SAASH,IACjBD,EAAKO,cACFP,EAAKO,aACAL,cACAE,SAASH,IACjBD,EAAKQ,UACFR,EAAKQ,SACAN,cACAE,SAASH,KAGzBQ,IAAIT,GACMpB,EAAAA,cAAC8B,EAAQ,CAACC,IAAKX,EAAKY,GAAIZ,KAAMA,OAMjE,CAEA,SAASU,EAAQG,GAA2B,IAA1B,KAAEb,GAAsBa,EACtC,OACIjC,EAAAA,cAACkC,EAAQ,CAACC,GAAI,4BAA4Bf,EAAKgB,UAC3CpC,EAAAA,cAACqC,EAAO,KACJrC,EAAAA,cAACsC,EAAO,KAAElB,EAAKG,SACdH,EAAKK,QAAUzB,EAAAA,cAACuC,EAAM,KAAEnB,EAAKK,SAGlCzB,EAAAA,cAACwC,EAAO,KAAEpB,EAAKM,SAEf1B,EAAAA,cAACyC,EAAI,KACDzC,EAAAA,cAAC0C,EAAW,KAAC,UAAQtB,EAAKgB,QACzBhB,EAAKO,cAAgB3B,EAAAA,cAAC2C,EAAQ,KAAEvB,EAAKO,eAItD,CAEA,MAAMO,GAAWU,EAAAA,EAAAA,SAAOC,EAAAA,MAAKC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAZJ,CAAY,sUAoBvBP,EAAUO,EAAAA,QAAOK,IAAGH,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,oDAMpBN,EAAUM,EAAAA,QAAOK,IAAGH,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,uCAKpBL,EAASK,EAAAA,QAAOK,IAAGH,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAVJ,CAAU,mCAKnBJ,EAAUI,EAAAA,QAAOK,IAAGH,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,mCAKpBH,EAAOG,EAAAA,QAAOK,IAAGH,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAVJ,CAAU,mEAOjBF,EAAcE,EAAAA,QAAOM,KAAIJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAXJ,CAAW,wIASzBD,EAAWC,EAAAA,QAAOM,KAAIJ,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAXJ,CAAW,kCAKtBjC,EAAYiC,EAAAA,QAAOK,IAAGH,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAVJ,CAAU,wEAOtBhC,EAAcgC,EAAAA,QAAOO,MAAKL,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAZJ,CAAY,+QAiB1BzB,EAAYyB,EAAAA,QAAOK,IAAGH,WAAA,CAAAC,YAAA,wBAAAC,YAAA,iBAAVJ,CAAU,uF,+ECxMrB,MAAM1C,EAASA,KACrB,MAAOkD,EAASC,GAAcrD,EAAAA,SAAe,IAM7C,OALAsD,EAAAA,EAAAA,WAAU,KACTC,WAAW,KACVF,EAAW,aACT,MACD,IAEFrD,EAAAA,cAACwD,EAAY,CAACC,UAAWL,GACxBpD,EAAAA,cAAA,OAAKyD,UAAU,kBAKZD,EAAeZ,EAAAA,QAAOK,IAAGH,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAVJ,CAAU,uf,+ECPxB,MAAMlC,EAAWgD,GAEhB1D,EAAAA,cAAC2D,EAAa,CACVF,UAAWC,EAAMD,UACjBzB,GAAI0B,EAAM1B,GACV4B,MAAOF,EAAME,OAEZF,EAAMG,UAKbF,EAAgBf,EAAAA,OAAOkB,QAAOhB,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAdJ,CAAc,gI","sources":["webpack://rheajt.github.io/./src/pages/language-learning/dictionary.tsx","webpack://rheajt.github.io/./src/components/loader.tsx","webpack://rheajt.github.io/./src/components/section.tsx"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/layout\";\nimport { Section } from \"../../components/section\";\nimport Seo from \"../../components/seo\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { Loader } from \"../../components/loader\";\n\nexport const pageQuery = graphql`\n    query allWords {\n        allGoogleTutoringSheet(sort: { lesson: DESC }) {\n            nodes {\n                id\n                chinese\n                pinyin\n                partOfSpeech\n                english\n                lesson\n                category\n            }\n        }\n    }\n`;\n\ntype Word = {\n    id: string;\n    chinese: string;\n    pinyin?: string;\n    partOfSpeech?: string;\n    english: string;\n    lesson: number;\n    category?: string;\n};\n\nexport default function ChineseLanguageDictionaryPage({ data, location }: any) {\n    const [filter, setFilter] = React.useState<string>(\"\");\n\n    if (!data || !data.allGoogleTutoringSheet) {\n        return <Loader />;\n    }\n\n    const words: Word[] = data.allGoogleTutoringSheet.nodes || [];\n    console.log(data);\n    return (\n        <Layout\n            location={location}\n            title=\"Chinese Language Learning Dictionary\"\n        >\n            <Seo title=\"Chinese Language Learning Dictionary\" />\n            <Section>\n                <SearchRow>\n                    <SearchInput\n                        type=\"text\"\n                        value={filter}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                            setFilter(e.target.value)\n                        }\n                        placeholder=\"Filter words...\"\n                        aria-label=\"Filter words\"\n                    />\n                </SearchRow>\n\n                <CardsGrid>\n                    {words\n                        .filter(word => {\n                            if (!filter) return true;\n                            const lowerFilter = filter.toLowerCase();\n                            return (\n                                (word.chinese &&\n                                    word.chinese\n                                        .toLowerCase()\n                                        .includes(lowerFilter)) ||\n                                (word.pinyin &&\n                                    word.pinyin\n                                        .toLowerCase()\n                                        .includes(lowerFilter)) ||\n                                (word.english &&\n                                    word.english\n                                        .toLowerCase()\n                                        .includes(lowerFilter)) ||\n                                (word.partOfSpeech &&\n                                    word.partOfSpeech\n                                        .toLowerCase()\n                                        .includes(lowerFilter)) ||\n                                (word.category &&\n                                    word.category\n                                        .toLowerCase()\n                                        .includes(lowerFilter))\n                            );\n                        })\n                        .map(word => {\n                            return <WordCard key={word.id} word={word} />;\n                        })}\n                </CardsGrid>\n            </Section>\n        </Layout>\n    );\n}\n\nfunction WordCard({ word }: { word: Word }) {\n    return (\n        <CardLink to={`/language-learning/lesson${word.lesson}`}>\n            <CardTop>\n                <Chinese>{word.chinese}</Chinese>\n                {word.pinyin && <Pinyin>{word.pinyin}</Pinyin>}\n            </CardTop>\n\n            <English>{word.english}</English>\n\n            <Meta>\n                <LessonBadge>Lesson {word.lesson}</LessonBadge>\n                {word.partOfSpeech && <Category>{word.partOfSpeech}</Category>}\n            </Meta>\n        </CardLink>\n    );\n}\n\nconst CardLink = styled(Link)`\n    display: block;\n    padding: 12px 16px;\n    background: #fff;\n    border-radius: 8px;\n    border: 1px solid rgba(0, 0, 0, 0.06);\n    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.03);\n    margin: 0.5rem 0;\n    text-decoration: none;\n    color: inherit;\n    transition:\n        transform 140ms ease,\n        box-shadow 140ms ease;\n\n    &:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.06);\n    }\n`;\n\nconst CardTop = styled.div`\n    display: flex;\n    align-items: baseline;\n    gap: 0.75rem;\n`;\n\nconst Chinese = styled.div`\n    font-size: 1.5rem;\n    font-weight: 700;\n`;\n\nconst Pinyin = styled.div`\n    font-size: 0.95rem;\n    color: #555;\n`;\n\nconst English = styled.div`\n    margin-top: 0.5rem;\n    color: #333;\n`;\n\nconst Meta = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin-top: 0.5rem;\n`;\n\nconst LessonBadge = styled.span`\n    background: var(--color-accent);\n    color: var(--color-text);\n    padding: 0.2rem 0.5rem;\n    border-radius: 999px;\n    font-size: 0.8rem;\n    font-weight: 600;\n`;\n\nconst Category = styled.span`\n    font-size: 0.8rem;\n    color: #666;\n`;\n\nconst SearchRow = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 1rem;\n`;\n\nconst SearchInput = styled.input`\n    width: 100%;\n    max-width: 560px;\n    padding: 0.6rem 0.9rem;\n    border-radius: 8px;\n    border: 1px solid lightgray;\n    font-size: 1rem;\n    transition:\n        box-shadow 120ms ease,\n        border-color 120ms ease;\n    &:focus {\n        outline: none;\n        border-color: var(--color-primary);\n        box-shadow: 0 6px 18px rgba(40, 53, 151, 0.06);\n    }\n`;\n\nconst CardsGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));\n    gap: 0.75rem;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nexport const Loader = () => {\n\tconst [fadeOut, setFadeOut] = React.useState(\"\");\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tsetFadeOut(\"fade-out\");\n\t\t}, 700);\n\t}, []);\n\treturn (\n\t\t<StyledLoader className={fadeOut}>\n\t\t\t<div className=\"load-circle\"></div>\n\t\t</StyledLoader>\n\t);\n};\n\nconst StyledLoader = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    background-color: #111;\n    z-index: 9999999999999;\n\n    &.fade-out {\n        opacity: 0;\n        width: 0;\n        height: 0;\n        transition: width 0.5s 0.5s, height 0.5s 0.5s, opacity 0.5s;\n    }\n\n    .load-circle {\n        margin: 50vh auto;\n        width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        border: 10px solid #111;\n        border-top: 10px solid var(--color-primary);\n        -webkit-animation: rotate 1.2s infinite linear;\n        animation: rotate 1.2s infinite linear;\n    }\n\n    @-webkit-keyframes rotate {\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`;\n","import React from \"react\";\nimport { styled } from \"styled-components\";\n\ntype SectionProps = {\n    children: React.ReactNode;\n    className?: string;\n    id?: string;\n    style?: React.CSSProperties;\n};\n\nexport const Section = (props: SectionProps) => {\n    return (\n        <StyledSection\n            className={props.className}\n            id={props.id}\n            style={props.style}\n        >\n            {props.children}\n        </StyledSection>\n    );\n};\n\nconst StyledSection = styled.section`\n    padding: 3em 0.25em;\n    margin: 0 auto;\n    max-width: 800px;\n\n    @media (max-width: 768px) {\n        padding: 5em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["ChineseLanguageDictionaryPage","_ref","data","location","filter","setFilter","React","allGoogleTutoringSheet","Loader","words","nodes","console","log","Layout","title","Seo","Section","SearchRow","SearchInput","type","value","onChange","e","target","placeholder","CardsGrid","word","lowerFilter","toLowerCase","chinese","includes","pinyin","english","partOfSpeech","category","map","WordCard","key","id","_ref2","CardLink","to","lesson","CardTop","Chinese","Pinyin","English","Meta","LessonBadge","Category","styled","Link","withConfig","displayName","componentId","div","span","input","fadeOut","setFadeOut","useEffect","setTimeout","StyledLoader","className","props","StyledSection","style","children","section"],"sourceRoot":""}