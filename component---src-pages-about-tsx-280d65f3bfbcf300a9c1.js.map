{"version":3,"file":"component---src-pages-about-tsx-280d65f3bfbcf300a9c1.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/utils/buildMapboxSrc.ts","webpack://rheajt.github.io/./src/pages/about.tsx","webpack://rheajt.github.io/./src/components/footer.tsx","webpack://rheajt.github.io/./src/utils/links.ts","webpack://rheajt.github.io/./src/components/header.tsx","webpack://rheajt.github.io/./src/components/layout.tsx","webpack://rheajt.github.io/./src/components/link-button.tsx"],"sourcesContent":["interface MapboxImageOptions {\n    theme: string;\n    lat: number;\n    lng: number;\n    zoom: number;\n    token: string;\n}\n\nconst defaultOpts: MapboxImageOptions = {\n    theme: \"dark-v10\",\n    lat: -77.4469,\n    lng: 37.5628,\n    zoom: 11.64,\n    token: \"pk.eyJ1IjoicmhlYWp0IiwiYSI6ImNqNjR1MWd0YTF2ZTIzM3E3OHVzNXh6YXQifQ.aDdsJcGnpBi5982--JQZVA\",\n};\n\nexport function buildMapboxSrc(opts = defaultOpts) {\n    const url: string[] = [\n        \"https://api.mapbox.com/styles/v1/mapbox/\",\n        opts.theme,\n        `/static/${opts.lat},${opts.lng},${opts.zoom},0/`,\n        `500x400?access_token=${opts.token}`,\n    ];\n\n    return url.join(\"\");\n}\n","import * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { buildMapboxSrc } from \"../utils/buildMapboxSrc\";\n\nconst About: React.FC<{ location: any }> = ({ location }) => {\n    return (\n        <Layout location={location} title=\"About\">\n            <h1>About Page</h1>\n\n            <section>\n                <p>\n                    I am a solutions developer working with both Google\n                    Workspaces and Microsoft 365. I like building tools to make\n                    our digital work lives easier.\n                </p>\n                <p>\n                    I have lived all over the world in different roles. I was a\n                    United States Marine in Okinawa, Japan. I taught middle\n                    school English in Richmond, VA. I became a self-taught\n                    computer programmer in Izmir, Turkey. Now I am doing\n                    development work in Beijing, China.\n                </p>\n\n                <p>\n                    <figure className=\"marginnote\">\n                        <img src={buildMapboxSrc()} alt=\"map\" />\n                    </figure>\n                </p>\n\n                <p>\n                    I write code using JavaScript, Typescript, and Google Apps\n                    Script. I have built SPFx webparts in Microsoft Sharepoint\n                    and written many automations in Google Workspaces. The idea\n                    of automating the boring parts of the day is incredible.\n                </p>\n            </section>\n        </Layout>\n    );\n};\n\nexport default About;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { styled } from \"styled-components\";\nexport const Footer = () => {\n\treturn (\n\t\t<StyledFooter>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\tÂ© {new Date().getFullYear()}{\" \"}\n\t\t\t\t\t<a href=\"https://jordanrhea.com\">jordan rhea</a>\n\t\t\t\t</div>\n\n\t\t\t\t{/*isBrowser && (\n                    <PopupWidget\n                        url=\"https://calendly.com/jordan-rhea/30min\"\n                        rootElement={document.getElementById(\"___gatsby\")!}\n                        text=\"Let's talk solutions!\"\n                        textColor=\"#ffffff\"\n                        color=\"#283597\"\n                    />\n                )*/}\n\n\t\t\t\t<div className=\"legals\">\n\t\t\t\t\t<Link to=\"/privacy\">privacy</Link>\n\t\t\t\t\t<Link to=\"/terms\">terms</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StyledFooter>\n\t);\n};\n\nconst StyledFooter = styled.footer`\n    background-color: var(--color-primary);\n    padding: 3em;\n    color: white;\n\n    a,\n    a:hover {\n        color: white;\n        text-decoration: none;\n        margin-right: 1em;\n    }\n\n    .container {\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        max-width: 800px;\n    }\n`;\n","export const links = [\n    { name: \"Projects\", to: \"projects\" },\n    { name: \"Language Learning\", to: \"language-learning\" },\n];\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { LinkButton } from \"./link-button\";\nimport { links } from \"../utils/links\";\nimport styled from \"styled-components\";\n\nexport const Header: React.FC<{ pathname: string; showLinks?: boolean }> = ({\n    pathname,\n    showLinks = true,\n}) => {\n    return (\n        <StyledHeader>\n            <div className=\"container\">\n                <Link to=\"/\">\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </Link>\n\n                <nav className={showLinks ? `` : `is-hidden`}>\n                    <div className=\"page-links\">\n                        {links.map(link => (\n                            <Link\n                                key={link.to}\n                                data-label={link.name}\n                                className={`page-link sans ${\n                                    pathname.includes(link.to) ? \"active\" : \"\"\n                                }`}\n                                to={`/${link.to}`}\n                            >\n                                <span className=\"label\">{link.name}</span>\n                            </Link>\n                        ))}\n                    </div>\n\n                    <LinkButton\n                        pathname={pathname}\n                        href={\"/contact\"}\n                        label=\"Contact\"\n                    />\n                </nav>\n            </div>\n        </StyledHeader>\n    );\n};\n\nconst StyledHeader = styled.header`\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 1;\n    padding: 0.25em;\n\n    .container {\n        max-width: 800px;\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        justify-content: center;\n    }\n\n    nav.is-hidden {\n        display: none;\n    }\n\n    a {\n        background: none;\n        text-decoration: none;\n        color: var(--color-text);\n    }\n\n    nav {\n        display: flex;\n        align-items: center;\n        list-style: none;\n        text-transform: uppercase;\n        justify-content: space-between;\n        width: 100%;\n        margin-left: 1em;\n\n        a {\n            padding: 0 1em;\n            display: inline-block;\n            position: relative;\n            transition: font-weight 0.5s linear;\n\n            /* reserve space for the bold state to prevent layout shift */\n            &::after {\n                content: attr(data-label);\n                font-weight: 700;\n                visibility: hidden;\n                display: block;\n                height: 0;\n                overflow: hidden;\n                pointer-events: none;\n            }\n\n            .label {\n                font-weight: 400;\n                transition: font-weight 0.05s linear;\n            }\n\n            &:hover .label {\n                font-weight: 700;\n            }\n\n            &.active .label {\n                font-weight: 700;\n            }\n        }\n\n        .page-links {\n            display: flex;\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { ReactNode } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Footer } from \"./footer\";\nimport { Header } from \"./header\";\n\nexport interface Location {\n    pathname: string;\n    search: string;\n    hash: string;\n}\n\nconst GlobalStyles = createGlobalStyle`\n*,\n:after,\n:before {\n    box-sizing: border-box;\n}\n\nhtml, body {\n\tpadding: 0;\n\tmargin: 0;\n}\n\nhtml {\n    line-height: var(--grid-size);\n    font-size: var(--fontSize-root);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n    font-family: var(--font-body);\n    font-size: var(--fontSize-1);\n    color: var(--color-text);\n    /* subtle graph-paper background */\n    background-color: #fbfbf8;\n    background-image:\n        linear-gradient(to right, rgba(0,0,0,0.06) 1px, transparent 1px),\n        linear-gradient(to bottom, rgba(0,0,0,0.06) 1px, transparent 1px);\n    background-size: 24px 24px;\n    background-repeat: repeat;\n}\n\n:root {\n    --grid-size: 1.5rem;\n    --maxWidth-none: \"none\";\n    --maxWidth-xs: 20rem;\n    --maxWidth-sm: 24rem;\n    --maxWidth-md: 28rem;\n    --maxWidth-lg: 32rem;\n    --maxWidth-xl: 36rem;\n    --maxWidth-2xl: 42rem;\n    --maxWidth-3xl: 48rem;\n    --maxWidth-4xl: 56rem;\n    --maxWidth-full: \"100%\";\n    --maxWidth-wrapper: var(--maxWidth-2xl);\n    --spacing-px: \"1px\";\n    --spacing-0: 0;\n    --spacing-1: calc(var(--grid-size) / 4);\n    --spacing-2: calc(var(--grid-size) / 2);\n    --spacing-3: calc(var(--grid-size) * 0.75);\n    --spacing-4: var(--grid-size);\n    --spacing-5: calc(var(--grid-size) * 1.25);\n    --spacing-6: calc(var(--grid-size) * 1.5);\n    --spacing-8: calc(var(--grid-size) * 2);\n    --spacing-10: calc(var(--grid-size) * 2.5);\n    --spacing-12: calc(var(--grid-size) * 3);\n    --spacing-16: calc(var(--grid-size) * 4);\n    --spacing-20: calc(var(--grid-size) * 5);\n    --spacing-24: calc(var(--grid-size) * 6);\n    --spacing-32: calc(var(--grid-size) * 8);\n    --fontFamily-sans: Work Sans, system-ui, -apple-system, BlinkMacSystemFont,\n        \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif,\n        \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n        \"Noto Color Emoji\";\n    --fontFamily-serif: \"Merriweather\", \"Georgia\", Cambria, \"Times New Roman\",\n        Times, serif;\n    --font-body: var(--fontFamily-sans);\n    --font-heading: var(--fontFamily-sans);\n    --fontWeight-normal: 400;\n    --fontWeight-medium: 500;\n    --fontWeight-semibold: 600;\n    --fontWeight-bold: 700;\n    --fontWeight-extrabold: 800;\n    --fontWeight-black: 900;\n    --fontSize-root: 16px;\n    --lineHeight-none: 1;\n    --lineHeight-tight: 1.25;\n    --lineHeight-normal: 1.5;\n    --lineHeight-relaxed: 1.875;\n    /* 1.200 Minor Third Type Scale */\n    --fontSize-0: 0.833rem;\n    --fontSize-1: 1rem;\n    --fontSize-2: 1.2rem;\n    --fontSize-3: 1.44rem;\n    --fontSize-4: 1.728rem;\n    --fontSize-5: 2.074rem;\n    --fontSize-6: 2.488rem;\n    --fontSize-7: 2.986rem;\n    --color-primary: #283597;\n    --color-text: #2e353f;\n    --color-text-light: #4f5969;\n    --color-heading: #1a202c;\n    --color-heading-black: black;\n    --color-accent: #d1dce5;\n}\n`;\n\nconst Layout: React.FC<{\n    children: ReactNode;\n    location: Location;\n    title: string;\n}> = ({ location, children }) => {\n    const rootPath = `/`;\n    const isRootPath = location.pathname === rootPath;\n    const isBrowser = typeof window !== \"undefined\";\n\n    // <Header pathname={location.pathname} />\n    return (\n        <div>\n            <GlobalStyles />\n\n            <Header pathname={location.pathname} />\n\n            <main>{children}</main>\n\n            <Footer />\n        </div>\n    );\n};\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\ntype LinkButtonProps = {\n\tpathname?: string;\n\thref: string;\n\tlabel: string;\n};\nexport function LinkButton({\n\tpathname = \"\",\n\thref = \"\",\n\tlabel = \"\",\n}: LinkButtonProps) {\n\tif (href.startsWith(\"http\")) {\n\t\treturn (\n\t\t\t<StyledLinkButtons>\n\t\t\t\t<a\n\t\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\thref={href}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</a>\n\t\t\t</StyledLinkButtons>\n\t\t);\n\t}\n\n\treturn (\n\t\t<StyledLinkButtons>\n\t\t\t<Link\n\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t}`}\n\t\t\t\tto={href}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Link>\n\t\t</StyledLinkButtons>\n\t);\n}\n\nconst StyledLinkButtons = styled.div`\n    .page-button {\n        background: none;\n        border: none;\n        padding: 0.5em 1em;\n        font: inherit;\n        cursor: pointer;\n        outline: inherit;\n        text-decoration: none;\n        color: white;\n        font-size: inherit;\n        font-weight: bold;\n        font-family: inherit;\n        border: 1px solid lightgray;\n        border-radius: 3px;\n        background-color: var(--color-primary);\n\n        &:hover {\n            $purple: var(--color-primary);\n            background-color: lighten(#283597, 10%);\n            // background-color: lightgray;\n        }\n    }\n`;\n"],"names":["defaultOpts","theme","lat","lng","zoom","token","buildMapboxSrc","opts","join","_ref","location","React","Layout","title","className","src","alt","Footer","StyledFooter","Date","getFullYear","href","Link","to","styled","footer","withConfig","displayName","componentId","links","name","Header","pathname","showLinks","StyledHeader","StaticImage","layout","formats","width","height","quality","__imageData","require","map","link","key","includes","LinkButton","label","header","GlobalStyles","createGlobalStyle","children","startsWith","StyledLinkButtons","div"],"sourceRoot":""}