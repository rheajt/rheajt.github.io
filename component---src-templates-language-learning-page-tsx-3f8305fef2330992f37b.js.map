{"version":3,"file":"component---src-templates-language-learning-page-tsx-3f8305fef2330992f37b.js","mappings":"4NA4Be,SAASA,EAAkBC,GACtCC,QAAQC,IAAIF,GACZ,MAAOG,EAAQC,GAAaC,EAAAA,cAAmCC,GACzDC,EAAQP,EAAMQ,KAAKC,uBAAuBC,MAQhD,OACIL,EAAAA,cAACM,EAAAA,EAAM,CAACC,SAAUZ,EAAMY,SAAUC,MAAM,SACpCR,EAAAA,cAACS,EAAAA,EAAG,CACAD,MAAO,gCAAgCb,EAAMe,YAAYC,OAE7DX,EAAAA,cAACY,EAAAA,EAAO,KACJZ,EAAAA,cAACa,EAAW,KACRb,EAAAA,cAAA,OAAKc,UAAU,SACVZ,EAAMa,IAAI,CAACC,EAAmBC,IAC3BjB,EAAAA,cAAA,KAAGkB,IAAK,cAAcD,KAClBjB,EAAAA,cAAA,YACKgB,EAAKG,QACLH,EAAKI,QAAUpB,EAAAA,cAAA,UAAKgB,EAAKI,WAKtCpB,EAAAA,cAACqB,EAAAA,KAAI,CACDP,UAAU,mBACVQ,GAAI,GAAG3B,EAAMY,SAASgB,qBACtBC,QA1BxBC,iBAA6B,IAAAC,EAEzB,MAAMC,EAAkB,QAAjBD,EAAGE,sBAAc,IAAAF,OAAA,EAAdA,EAAgBG,WAC1B9B,EAAU4B,EACd,GAuBqB,iBAQzB,CAEA,MAAMd,E,QAAciB,QAAOC,IAAGC,WAAA,CAAAC,YAAA,sCAAAC,YAAA,gBAAVJ,CAAU,0tB,+EC5DvB,MAAMlB,EAAWjB,GAEhBK,EAAAA,cAACmC,EAAa,CACVrB,UAAWnB,EAAMmB,UACjBH,GAAIhB,EAAMgB,GACVyB,MAAOzC,EAAMyC,OAEZzC,EAAM0C,UAKbF,EAAgBL,EAAAA,OAAOQ,QAAON,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAdJ,CAAc,gI","sources":["webpack://rheajt.github.io/./src/templates/language-learning-page.tsx","webpack://rheajt.github.io/./src/components/section.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { Section } from \"../components/section\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport styled from \"styled-components\";\n\nexport const pageQuery = graphql`\n    query lesson($lesson: Int!) {\n        allGoogleTutoringSheet(filter: { lesson: { eq: $lesson } }) {\n            nodes {\n                chinese\n                pinyin\n                partOfSpeech\n                english\n                category\n            }\n        }\n    }\n`;\n\ntype LessonTopic = {\n    chinese: string;\n    pinyin?: string;\n    partOfSpeech?: string;\n    english: string;\n    category?: string;\n};\nexport default function ChineseLessonPage(props: any) {\n    console.log(props);\n    const [update, setUpdate] = React.useState<string | undefined>(undefined);\n    const notes = props.data.allGoogleTutoringSheet.nodes;\n\n    async function handleClick() {\n        // get the selected text\n        const q = getSelection()?.toString();\n        setUpdate(q);\n    }\n\n    return (\n        <Layout location={props.location} title=\"About\">\n            <Seo\n                title={`Language Learning Notes from ${props.pageContext.id}`}\n            />\n            <Section>\n                <StyledStuff>\n                    <div className=\"notes\">\n                        {notes.map((line: LessonTopic, index: number) => (\n                            <p key={`line-index-${index}`}>\n                                <ruby>\n                                    {line.chinese}\n                                    {line.pinyin && <rt>{line.pinyin}</rt>}\n                                </ruby>\n                            </p>\n                        ))}\n\n                        <Link\n                            className=\"flashcard-button\"\n                            to={`${props.location.pathname}flashcards`}\n                            onClick={handleClick}\n                        >\n                            Flashcards\n                        </Link>\n                    </div>\n                </StyledStuff>\n            </Section>\n        </Layout>\n    );\n}\n\nconst StyledStuff = styled.div`\n    display: grid;\n    padding: 4rem 0;\n\n    p {\n        margin: 0.6em 0;\n        font-size: 1.25rem;\n    }\n    ruby {\n        font-family: Iansui;\n        ruby-position: over;\n        ruby-align: center;\n    }\n    rt {\n        font-size: 0.7em;\n        color: #444;\n    }\n\n    .updates {\n        display: flex;\n        flex-direction: column;\n        gap: 0.75rem;\n        align-items: flex-start;\n    }\n\n    .flashcard-button {\n        display: inline-block;\n        padding: 0.5rem 0.9rem;\n        background: var(--color-primary);\n        color: #fff;\n        text-decoration: none;\n        border-radius: 6px;\n        font-weight: 600;\n        box-shadow: 0 6px 18px rgba(40, 53, 151, 0.12);\n        transition:\n            transform 120ms ease,\n            box-shadow 120ms ease;\n    }\n    .flashcard-button:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 10px 24px rgba(40, 53, 151, 0.16);\n    }\n    .flashcard-button:focus {\n        outline: none;\n        box-shadow: 0 0 0 4px rgba(40, 53, 151, 0.08);\n    }\n\n    .note {\n        font-size: 0.95rem;\n        color: #666;\n        margin-bottom: 1rem;\n    }\n`;\n","import React from \"react\";\nimport { styled } from \"styled-components\";\n\ntype SectionProps = {\n    children: React.ReactNode;\n    className?: string;\n    id?: string;\n    style?: React.CSSProperties;\n};\n\nexport const Section = (props: SectionProps) => {\n    return (\n        <StyledSection\n            className={props.className}\n            id={props.id}\n            style={props.style}\n        >\n            {props.children}\n        </StyledSection>\n    );\n};\n\nconst StyledSection = styled.section`\n    padding: 3em 0.25em;\n    margin: 0 auto;\n    max-width: 800px;\n\n    @media (max-width: 768px) {\n        padding: 5em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["ChineseLessonPage","props","console","log","update","setUpdate","React","undefined","notes","data","allGoogleTutoringSheet","nodes","Layout","location","title","Seo","pageContext","id","Section","StyledStuff","className","map","line","index","key","chinese","pinyin","Link","to","pathname","onClick","async","_getSelection","q","getSelection","toString","styled","div","withConfig","displayName","componentId","StyledSection","style","children","section"],"sourceRoot":""}