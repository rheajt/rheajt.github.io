{"version":3,"file":"component---src-templates-blog-post-tsx-fce923ab769f018232d7.js","mappings":"6LAiIA,UAtE0C,SAAC,GAAwB,IAAD,EAMlC,EANaA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzCC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KACdC,OAAQC,EAERT,EAAKU,YAAYF,OACjBG,QAAQC,IAAIZ,EAAKU,YAAYF,OAC7BA,GACI,UAAAV,EAAKK,KAAKC,oBAAV,eAAwBS,SACxBb,EAAKU,YAAYF,MAAMM,WACpBd,EAAKe,OAAOC,YACnBR,EAAQR,EAAKe,OAAOC,WAGxB,OACIC,EAAAA,cAACC,EAAAA,EAAD,CAAQnB,SAAUA,EAAUM,MAAOH,GAC/Be,EAAAA,cAACE,EAAAA,EAAD,CACId,MAAOL,EAAKU,YAAYL,MACxBe,YAAapB,EAAKU,YAAYU,aAAepB,EAAKqB,QAClDb,MAAOA,IAEXS,EAAAA,cAAAA,UAAAA,CACIK,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETP,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAAAA,KAAAA,CAAIQ,SAAS,YAAYzB,EAAKU,YAAYL,OAC1CY,EAAAA,cAAAA,IAAAA,MAAIS,EAAAA,EAAAA,GAAO,IAAIC,KAAK3B,EAAKe,OAAOa,MAAO,SAE3CX,EAAAA,cAAAA,UAAAA,CACIY,wBAAyB,CAAEC,OAAQ9B,EAAK+B,MACxCN,SAAS,gBAEbR,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAACe,EAAAA,EAAD,QAGRf,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,iBACXL,EAAAA,cAAAA,KAAAA,CACIgB,MAAO,CACHC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGbrB,EAAAA,cAAAA,KAAAA,KACKX,GACGW,EAAAA,cAACsB,EAAAA,KAAD,CAAMC,GAAIlC,EAASS,OAAO0B,KAAMC,IAAI,QAApC,KACOpC,EAASI,YAAYL,QAIpCY,EAAAA,cAAAA,KAAAA,KACKV,GACGU,EAAAA,cAACsB,EAAAA,KAAD,CAAMC,GAAIjC,EAAKQ,OAAO0B,KAAMC,IAAI,QAC3BnC,EAAKG,YAAYL,MADtB","sources":["webpack://rheajt.github.io/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { format } from \"date-fns\";\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\n\ninterface Props {\n    data: Data;\n    location: Location;\n}\n\ninterface Data {\n    site: {\n        siteMetadata: {\n            siteUrl: string;\n            title: string;\n        };\n    };\n    markdownRemark: {\n        id: string;\n        excerpt: string;\n        html: string;\n        frontmatter: {\n            title: string;\n            date: string;\n            description: string;\n            image: {\n                publicURL: string;\n                childImageSharp: {\n                    gatsbyImageData: IGatsbyImageData;\n                };\n            };\n        };\n        fields: {\n            date: string;\n            thumbnail: string;\n        };\n    };\n    previous: {\n        fields: {\n            slug: string;\n        };\n        frontmatter: {\n            title: string;\n        };\n    };\n    next: {\n        fields: {\n            slug: string;\n        };\n        frontmatter: {\n            title: string;\n        };\n    };\n}\n\nconst BlogPostTemplate: React.FC<Props> = ({ data, location }) => {\n    const post = data.markdownRemark;\n    const siteTitle = data.site.siteMetadata?.title || `Title`;\n    const { previous, next } = data;\n    let image = undefined;\n\n    if (post.frontmatter.image) {\n        console.log(post.frontmatter.image);\n        image =\n            data.site.siteMetadata?.siteUrl +\n            post.frontmatter.image.publicURL;\n    } else if (post.fields.thumbnail) {\n        image = post.fields.thumbnail;\n    }\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n                image={image}\n            />\n            <article\n                className=\"blog-post\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n            >\n                <header>\n                    <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n                    <p>{format(new Date(post.fields.date), \"PPP\")}</p>\n                </header>\n                <section\n                    dangerouslySetInnerHTML={{ __html: post.html }}\n                    itemProp=\"articleBody\"\n                />\n                <hr />\n                <footer>\n                    <Bio />\n                </footer>\n            </article>\n            <nav className=\"blog-post-nav\">\n                <ul\n                    style={{\n                        display: `flex`,\n                        flexWrap: `wrap`,\n                        justifyContent: `space-between`,\n                        listStyle: `none`,\n                        padding: 0,\n                    }}\n                >\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                ← {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title} →\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </nav>\n        </Layout>\n    );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug(\n        $id: String!\n        $previousPostId: String\n        $nextPostId: String\n    ) {\n        site {\n            siteMetadata {\n                title\n                siteUrl\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                description\n                image {\n                    publicURL\n                    childImageSharp {\n                        gatsbyImageData(layout: CONSTRAINED)\n                    }\n                }\n            }\n            fields {\n                date\n                thumbnail\n            }\n        }\n        previous: markdownRemark(id: { eq: $previousPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n        next: markdownRemark(id: { eq: $nextPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n    }\n`;\n"],"names":["data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","image","undefined","frontmatter","console","log","siteUrl","publicURL","fields","thumbnail","React","Layout","Seo","description","excerpt","className","itemScope","itemType","itemProp","format","Date","date","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","slug","rel"],"sourceRoot":""}