{"version":3,"file":"component---src-templates-project-page-tsx-ce44372e489af632ae5c.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/components/bio.tsx","webpack://rheajt.github.io/./src/components/contact-form.tsx","webpack://rheajt.github.io/./src/components/blockquote.tsx","webpack://rheajt.github.io/./src/templates/project-page.tsx","webpack://rheajt.github.io/./src/components/StyledContainer.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { FaGithub, FaLinkedin, FaTwitter, FaYoutube } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nconst Bio = () => {\n    const data = useStaticQuery(graphql`\n        query BioQuery {\n            site {\n                siteMetadata {\n                    author {\n                        name\n                        summary\n                    }\n                    social {\n                        twitter\n                        github\n                        linkedin\n                        youtube\n                    }\n                }\n            }\n        }\n    `);\n\n    // Set these values by editing \"siteMetadata\" in gatsby-config.js\n    const author = data.site.siteMetadata?.author;\n    const social = data.site.siteMetadata?.social;\n\n    return (\n        <StyledBio>\n            <StaticImage\n                className=\"bio-avatar\"\n                layout=\"fixed\"\n                formats={[\"auto\", \"webp\", \"avif\"]}\n                src=\"../../content/img/avatar-image.png\"\n                width={50}\n                height={50}\n                quality={95}\n                alt=\"jordan rhea wearing a hoodie\"\n            />\n\n            {author?.name && (\n                <div>\n                    Written by <strong>{author.name}</strong>{\" \"}\n                    {author?.summary || null}\n                    {` `}\n                    <div className=\"social-links\">\n                        <a href={social.twitter} data-label=\"Twitter\">\n                            <span className=\"label\">\n                                <FaTwitter />\n                            </span>\n                        </a>\n                        <a href={social.linkedin} data-label=\"LinkedIn\">\n                            <span className=\"label\">\n                                <FaLinkedin />\n                            </span>\n                        </a>\n                        <a href={social.youtube} data-label=\"YouTube\">\n                            <span className=\"label\">\n                                <FaYoutube />\n                            </span>\n                        </a>\n                        <a href={social.github} data-label=\"GitHub\">\n                            <span className=\"label\">\n                                <FaGithub />\n                            </span>\n                        </a>\n                    </div>\n                </div>\n            )}\n        </StyledBio>\n    );\n};\n\nexport default Bio;\n\nconst StyledBio = styled.div`\n    display: flex;\n    margin-top: var(--spacing-16);\n    margin-bottom: var(--spacing-16);\n    a {\n        color: var(--color-text);\n        text-decoration: none;\n        display: inline-block;\n        position: relative;\n\n        &::after {\n            content: attr(data-label);\n            font-weight: 700;\n            visibility: hidden;\n            display: block;\n            height: 0;\n            overflow: hidden;\n            pointer-events: none;\n        }\n\n        .label {\n            font-weight: 400;\n            transition: font-weight 0.05s linear;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        &:hover .label {\n            font-weight: 700;\n        }\n    }\n\n    p {\n        margin-bottom: var(--spacing-0);\n    }\n\n    .bio-avatar {\n        margin-right: var(--spacing-4);\n        margin-bottom: var(--spacing-0);\n        min-width: 50px;\n        border-radius: 100%;\n    }\n`;\n","import React from \"react\";\nimport { styled } from \"styled-components\";\n\ninterface CustomFormElement extends HTMLFormElement {\n\tyour_name: HTMLInputElement;\n\tmessage: HTMLTextAreaElement;\n}\n\nconst initialVals = {\n\tyour_name: \"\",\n\tyour_email: \"\",\n\tservice: \"\",\n\ttopic: \"\",\n\tmessage: \"\",\n\tisAnonymous: true,\n\tisNewsletter: true,\n};\n\ninterface ContactFormProps {\n\tdata?: Partial<typeof initialVals>;\n}\n\nexport const ContactForm: React.FC<ContactFormProps> = props => {\n\tconst [isDisabled, setIsDisabled] = React.useState(true);\n\tconst [isSent, setSent] = React.useState(false);\n\tconst [percentage, setPercentage] = React.useState(0);\n\tconst [vals, setVals] = React.useState({ ...initialVals, ...props.data });\n\n\tReact.useEffect(() => {\n\t\tconst wordCount = vals.message.split(\" \").length;\n\t\tconst charCount = vals.message.length;\n\n\t\tsetPercentage(\n\t\t\tMath.min(\n\t\t\t\t100,\n\t\t\t\tMath.max(\n\t\t\t\t\t0,\n\t\t\t\t\t((charCount / 100) * 100 + (wordCount / 50) * 100) / 2\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tif (\n\t\t\tpercentage === 100 &&\n\t\t\tvals.your_name.length !== 0 &&\n\t\t\tvals.your_email.length !== 0\n\t\t) {\n\t\t\tsetIsDisabled(false);\n\t\t} else {\n\t\t\tsetIsDisabled(true);\n\t\t}\n\t}, [vals]);\n\n\tasync function handleSubmit(e: React.FormEvent<CustomFormElement>) {\n\t\te.preventDefault();\n\n\t\tconst deploymentId =\n\t\t\t\"AKfycbyhUP2UI4NOia08Ey5yykiLYERXLRyHF_fBZVBiH9rKYeWDLOmy4AdRtmPuMzS7Dsg\";\n\n\t\tconst endpoint = `https://script.google.com/macros/s/${deploymentId}/exec`;\n\n\t\ttry {\n\t\t\tconst resp = await fetch(endpoint, {\n\t\t\t\tredirect: \"follow\",\n\t\t\t\tmethod: \"post\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"content-type\": \"text/plain\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(vals),\n\t\t\t});\n\t\t\tconst json = await resp.json();\n\n\t\t\tif (json.status === \"done\") {\n\t\t\t\tsetSent(true);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tfunction handleChange(name: string, val: string | boolean) {\n\t\tconsole.log(name, val);\n\t\tsetVals({ ...vals, [name]: val });\n\t}\n\n\tif (isSent) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"grid\",\n\t\t\t\t\tplaceItems: \"center\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\theight: 200,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<b>Sent!</b>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconsole.log(\"topic\", vals.topic);\n\treturn (\n\t\t<>\n\t\t\t{vals.topic ? (\n\t\t\t\t<>\n\t\t\t\t\t<i>Lets talk more about </i>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t{vals.topic\n\t\t\t\t\t\t\t.split(\" \")\n\t\t\t\t\t\t\t.map(t => `#${t}`)\n\t\t\t\t\t\t\t.join(\", \")}\n\t\t\t\t\t</b>\n\t\t\t\t</>\n\t\t\t) : null}\n\n\t\t\t<StyledForm onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"your_name\"\n\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\tvalue={vals.your_name}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\n\t\t\t\t<FormInput\n\t\t\t\t\tname=\"your_email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalue={vals.your_email}\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\tname=\"message\"\n\t\t\t\t\tlabel=\"Send me a message! I love meeting new people and talking about data systems.\"\n\t\t\t\t\tplaceholder={vals.message}\n\t\t\t\t\tvalue={vals.message}\n\t\t\t\t\tval={percentage}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"actions full-width\">\n\t\t\t\t\t<button type=\"submit\" disabled={isDisabled}>\n\t\t\t\t\t\tSend\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<FormCheckbox\n\t\t\t\t\t\tname=\"isNewsletter\"\n\t\t\t\t\t\tlabel=\"Newsletter?\"\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\tisChecked={vals.isNewsletter}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormCheckbox\n\t\t\t\t\t\tname=\"isAnonymous\"\n\t\t\t\t\t\tlabel=\"Stay anonymous?\"\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\tisChecked={vals.isAnonymous}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</StyledForm>\n\t\t</>\n\t);\n};\n\ntype HandleChange = (name: string, val: string | boolean) => void;\n\nconst StyledFormCheckbox = styled.div`\n    label {\n        display: inline-block;\n        padding-left: 1em;\n    }\n`;\nconst FormCheckbox: React.FC<{\n\tname: string;\n\tlabel: string;\n\tisChecked: boolean;\n\thandleChange: HandleChange;\n}> = ({ name, label, isChecked, handleChange }) => {\n\treturn (\n\t\t<StyledFormCheckbox>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tid={name}\n\t\t\t\tname={name}\n\t\t\t\tonChange={e => handleChange(name, e.target.checked)}\n\t\t\t\tchecked={isChecked}\n\t\t\t/>\n\n\t\t\t<label htmlFor={name}>{label}</label>\n\t\t</StyledFormCheckbox>\n\t);\n};\n\ntype FormInputProps =\n\t| {\n\t\ttype: \"text\" | \"email\";\n\t\tname: string;\n\t\tvalue: string;\n\t\tplaceholder: string;\n\t\thandleChange: HandleChange;\n\t}\n\t| {\n\t\ttype: \"textarea\";\n\t\tname: string;\n\t\tplaceholder: string;\n\t\tvalue: string;\n\t\tlabel: string;\n\t\tval: number;\n\t\thandleChange: HandleChange;\n\t};\nconst StyledFormInput = styled.div`\n    &.full-width {\n        grid-column: 1 / -1;\n    }\n\n    label {\n        display: block;\n    }\n\n    input,\n    select,\n    textarea {\n        padding: 8px;\n        width: 100%;\n        border-radius: 3px;\n        border: 1px solid lightgray;\n\n        &:focus {\n            outline: none;\n            border: 1px solid var(--color-primary);\n        }\n    }\n`;\nconst FormInput: React.FC<FormInputProps> = props => {\n\tif (props.type === \"textarea\") {\n\t\treturn (\n\t\t\t<StyledFormInput className=\"full-width\">\n\t\t\t\t<label htmlFor={props.name}>{props.label}</label>\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"full-width\"\n\t\t\t\t\tname={props.name}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\tprops.handleChange(e.target.name, e.target.value)\n\t\t\t\t\t}\n\t\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\t\trows={7}\n\t\t\t\t></textarea>\n\t\t\t\t<Progress val={props.val > 1 ? props.val : 0} />\n\t\t\t</StyledFormInput>\n\t\t);\n\t}\n\n\treturn (\n\t\t<StyledFormInput>\n\t\t\t<label htmlFor={props.name}>{props.placeholder}</label>\n\t\t\t<input\n\t\t\t\ttype={props.type}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tname={props.name}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={e =>\n\t\t\t\t\tprops.handleChange(e.target.name, e.target.value)\n\t\t\t\t}\n\t\t\t/>\n\t\t</StyledFormInput>\n\t);\n};\n\nconst FormSelect: React.FC<{\n\tname: string;\n\tvalue: string;\n\tlabel: string;\n\thandleChange: HandleChange;\n\toptions: string[];\n}> = ({ name, value, label, options, handleChange }) => {\n\treturn (\n\t\t<div className=\"form-input\">\n\t\t\t<label htmlFor={name}>{label}</label>\n\t\t\t<select\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={e => handleChange(e.target.name, e.target.value)}\n\t\t\t>\n\t\t\t\t<option value=\"\"></option>\n\t\t\t\t{options.map(option => (\n\t\t\t\t\t<option key={option} value={option}>\n\t\t\t\t\t\t{option}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t</div>\n\t);\n};\n\nconst FormText: React.FC<{\n\tname: string;\n\tplaceholder: string;\n\tvalue: string;\n\tlabel: string;\n\tval: number;\n\thandleChange: HandleChange;\n}> = ({ name, placeholder, value, label, val, handleChange }) => {\n\treturn (\n\t\t<div className=\"form-input full-width\">\n\t\t\t<label htmlFor={name}>{label}</label>\n\t\t\t<textarea\n\t\t\t\tclassName=\"full-width\"\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={e => handleChange(e.target.name, e.target.value)}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\trows={7}\n\t\t\t></textarea>\n\t\t\t<Progress val={val > 1 ? val : 0} />\n\t\t</div>\n\t);\n};\n\nconst Progress: React.FC<{ val: number }> = ({ val }) => {\n\treturn (\n\t\t<div style={{ width: \"100%\", border: \"1px solid lightgray\" }}>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: \"var(--color-primary)\",\n\t\t\t\t\theight: 10,\n\t\t\t\t\twidth: `${val}%`,\n\t\t\t\t}}\n\t\t\t></div>\n\t\t</div>\n\t);\n};\n\nconst StyledForm = styled.form`\n    display: grid;\n    margin-top: 1em;\n    margin-bottom: 1em;\n    grid-gap: 1em;\n    grid-template-columns: 1fr 1fr;\n\n    button {\n        margin-right: 1em;\n        padding: 4px 1em;\n\n        &[type=\"submit\"] {\n            background-color: var(--color-primary);\n            color: white;\n        }\n\n        &:disabled {\n            background-color: gray;\n        }\n    }\n\n    .actions {\n        display: flex;\n        justify-content: space-between;\n    }\n`;\n// <FormService active={vals.service} handleChange={handleChange} />\n","import React from \"react\";\nimport { styled } from \"styled-components\";\nimport { Quote } from \"../pages\";\n\nconst Blockquote: React.FC<{ quote: Quote }> = ({ quote }) => {\n\treturn (\n\t\t<StyledBlockquote>\n\t\t\t<p>{quote.excerpt}</p>\n\t\t\t<span className=\"author\">\n\t\t\t\t<b>{quote.author}</b> <br />\n\t\t\t\t{quote.position}\n\t\t\t</span>\n\t\t</StyledBlockquote>\n\t);\n};\n\nexport default Blockquote;\n\nconst StyledBlockquote = styled.blockquote`\n    padding: 0.5em 10px 3em;\n    max-width: 400px;\n    margin: 0 auto;\n\n    &:before {\n        color: var(--text-primary);\n        content: open-quote;\n        font-size: 4em;\n        line-height: 0.1em;\n        margin-right: 0.25em;\n        vertical-align: -0.4em;\n    }\n\n    &:after {\n        color: transparent;\n        content: close-quote;\n        font-size: 4em;\n        line-height: 0.1em;\n        margin-right: 0.25em;\n        vertical-align: -0.4em;\n    }\n\n    > p {\n        display: inline;\n        font-style: normal;\n    }\n\n    span.author {\n        display: block;\n        text-align: right;\n    }\n\n    @media (max-width: 368px) {\n        max-width: 300px;\n    }\n`;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Blockquote from \"../components/blockquote\";\nimport Share from \"../components/share\";\nimport { ContactForm } from \"../components/contact-form\";\nimport { StyledContainer } from \"../components/StyledContainer\";\nimport { styled } from \"styled-components\";\n\ninterface Props {\n\tdata: Data;\n\tlocation: Location;\n}\n\ninterface Data {\n\tsite: {\n\t\tsiteMetadata: {\n\t\t\tsiteUrl: string;\n\t\t\ttitle: string;\n\t\t};\n\t};\n\tmarkdownRemark: {\n\t\tid: string;\n\t\thtml: string;\n\t\texcerpt: string;\n\t\tfrontmatter: {\n\t\t\ttitle: string;\n\t\t\tmessage: string;\n\t\t\ttags: string[];\n\t\t\tquote: {\n\t\t\t\tauthor: string;\n\t\t\t\ttext: string;\n\t\t\t\temployer: string;\n\t\t\t\tposition: string;\n\t\t\t\texcerpt: string;\n\t\t\t\temail?: string;\n\t\t\t};\n\t\t\timage: {\n\t\t\t\tpublicURL: string;\n\t\t\t\tchildImageSharp: {\n\t\t\t\t\tgatsbyImageData: IGatsbyImageData;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\tfields: {\n\t\t\tdate: string;\n\t\t\tthumbnail: string;\n\t\t\tslug: string;\n\t\t};\n\t};\n}\n\nconst ProjectPageTemplate: React.FC<Props> = ({ data, location }) => {\n\tconst project = data.markdownRemark;\n\tconst siteTitle = data.site.siteMetadata?.title || `Title`;\n\n\tconst url =\n\t\tdata.site.siteMetadata.siteUrl + \"/projects/\" + project.fields.slug;\n\n\tlet image = undefined;\n\n\tif (project.frontmatter.image) {\n\t\timage =\n\t\t\tdata.site.siteMetadata?.siteUrl +\n\t\t\tproject.frontmatter.image.publicURL;\n\t} else if (project.fields.thumbnail) {\n\t\timage = project.fields.thumbnail;\n\t}\n\n\treturn (\n\t\t<Layout location={location} title={siteTitle}>\n\t\t\t<Seo\n\t\t\t\ttitle={project.frontmatter.title}\n\t\t\t\tdescription={project.excerpt}\n\t\t\t\timage={image}\n\t\t\t/>\n\n\t\t\t<StyledContainer>\n\t\t\t\t<StyledProjectImage>\n\t\t\t\t\t<GatsbyImage\n\t\t\t\t\t\timage={\n\t\t\t\t\t\t\tproject.frontmatter.image.childImageSharp\n\t\t\t\t\t\t\t\t.gatsbyImageData\n\t\t\t\t\t\t}\n\t\t\t\t\t\talt=\"project image\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition: \"sticky\",\n\t\t\t\t\t\t\ttop: \"20px\",\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h1 itemProp=\"headline\" style={{ flex: 1 }}>\n\t\t\t\t\t\t\t{project.frontmatter.title}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<Share url={url} />\n\t\t\t\t\t</div>\n\t\t\t\t</StyledProjectImage>\n\n\t\t\t\t{project.frontmatter.quote && (\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<Blockquote quote={project.frontmatter.quote} />\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\n\t\t\t\t<section\n\t\t\t\t\tdangerouslySetInnerHTML={{ __html: project.html }}\n\t\t\t\t\titemProp=\"articleBody\"\n\t\t\t\t/>\n\n\t\t\t\t<ContactForm\n\t\t\t\t\tdata={{\n\t\t\t\t\t\ttopic: project.frontmatter.tags.length\n\t\t\t\t\t\t\t? project.frontmatter.tags.join(\" \")\n\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\tmessage: project.frontmatter.message\n\t\t\t\t\t\t\t? project.frontmatter.message\n\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<hr />\n\n\t\t\t\t<footer>\n\t\t\t\t\t<Bio />\n\t\t\t\t</footer>\n\t\t\t</StyledContainer>\n\t\t</Layout>\n\t);\n};\n\nexport default ProjectPageTemplate;\n\nexport const projectsQuery = graphql`\n    query ProjectPagesById($id: String!) {\n        site {\n            siteMetadata {\n                title\n                siteUrl\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            html\n            excerpt\n            frontmatter {\n                title\n                message\n                image {\n                    publicURL\n                    childImageSharp {\n                        gatsbyImageData(layout: CONSTRAINED)\n                    }\n                }\n                tags\n                quote {\n                    author\n                    position\n                    employer\n                    text\n                    excerpt\n                }\n            }\n            fields {\n                date\n                thumbnail\n                slug\n            }\n        }\n    }\n`;\n\nconst StyledProjectImage = styled.div`\n    margin-top: var(--spacing-8);\n`;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n    margin: 0 auto;\n    max-width: 800px;\n    padding: 3em 0.25em;\n\n    @media (max-width: 768px) {\n        padding: 2em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","StyledBio","StaticImage","className","layout","formats","src","width","height","quality","alt","__imageData","require","name","summary","href","twitter","FaTwitter","linkedin","FaLinkedin","youtube","FaYoutube","github","FaGithub","styled","div","withConfig","displayName","componentId","initialVals","your_name","your_email","service","topic","message","isAnonymous","isNewsletter","ContactForm","props","isDisabled","setIsDisabled","isSent","setSent","percentage","setPercentage","vals","setVals","handleChange","val","console","log","wordCount","split","length","charCount","Math","min","max","style","display","placeItems","map","t","join","StyledForm","onSubmit","async","e","preventDefault","resp","fetch","redirect","method","headers","body","JSON","stringify","json","status","err","FormInput","type","placeholder","value","label","disabled","FormCheckbox","isChecked","StyledFormCheckbox","_ref","id","onChange","target","checked","htmlFor","StyledFormInput","rows","Progress","_ref4","border","backgroundColor","form","quote","StyledBlockquote","excerpt","position","blockquote","location","project","markdownRemark","siteTitle","title","url","siteUrl","fields","slug","image","frontmatter","publicURL","thumbnail","Layout","Seo","description","StyledContainer","StyledProjectImage","GatsbyImage","childImageSharp","gatsbyImageData","top","alignItems","itemProp","flex","Share","Blockquote","dangerouslySetInnerHTML","__html","html","tags"],"sourceRoot":""}