{"version":3,"file":"component---src-pages-projects-tsx-c6ab1af26db4ca62b02c.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/components/bio.tsx","webpack://rheajt.github.io/./src/pages/projects.tsx","webpack://rheajt.github.io/./src/components/StyledContainer.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { FaGithub, FaLinkedin, FaTwitter, FaYoutube } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nconst Bio = () => {\n    const data = useStaticQuery(graphql`\n        query BioQuery {\n            site {\n                siteMetadata {\n                    author {\n                        name\n                        summary\n                    }\n                    social {\n                        twitter\n                        github\n                        linkedin\n                        youtube\n                    }\n                }\n            }\n        }\n    `);\n\n    // Set these values by editing \"siteMetadata\" in gatsby-config.js\n    const author = data.site.siteMetadata?.author;\n    const social = data.site.siteMetadata?.social;\n\n    return (\n        <StyledBio>\n            <StaticImage\n                className=\"bio-avatar\"\n                layout=\"fixed\"\n                formats={[\"auto\", \"webp\", \"avif\"]}\n                src=\"../../content/img/avatar-image.png\"\n                width={50}\n                height={50}\n                quality={95}\n                alt=\"jordan rhea wearing a hoodie\"\n            />\n\n            {author?.name && (\n                <div>\n                    Written by <strong>{author.name}</strong>{\" \"}\n                    {author?.summary || null}\n                    {` `}\n                    <div className=\"social-links\">\n                        <a href={social.twitter} data-label=\"Twitter\">\n                            <span className=\"label\">\n                                <FaTwitter />\n                            </span>\n                        </a>\n                        <a href={social.linkedin} data-label=\"LinkedIn\">\n                            <span className=\"label\">\n                                <FaLinkedin />\n                            </span>\n                        </a>\n                        <a href={social.youtube} data-label=\"YouTube\">\n                            <span className=\"label\">\n                                <FaYoutube />\n                            </span>\n                        </a>\n                        <a href={social.github} data-label=\"GitHub\">\n                            <span className=\"label\">\n                                <FaGithub />\n                            </span>\n                        </a>\n                    </div>\n                </div>\n            )}\n        </StyledBio>\n    );\n};\n\nexport default Bio;\n\nconst StyledBio = styled.div`\n    display: flex;\n    margin-top: var(--spacing-16);\n    margin-bottom: var(--spacing-16);\n    a {\n        color: var(--color-text);\n        text-decoration: none;\n        display: inline-block;\n        position: relative;\n\n        &::after {\n            content: attr(data-label);\n            font-weight: 700;\n            visibility: hidden;\n            display: block;\n            height: 0;\n            overflow: hidden;\n            pointer-events: none;\n        }\n\n        .label {\n            font-weight: 400;\n            transition: font-weight 0.05s linear;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        &:hover .label {\n            font-weight: 700;\n        }\n    }\n\n    p {\n        margin-bottom: var(--spacing-0);\n    }\n\n    .bio-avatar {\n        margin-right: var(--spacing-4);\n        margin-bottom: var(--spacing-0);\n        min-width: 50px;\n        border-radius: 100%;\n    }\n`;\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { ProjectPage, ProjectPageProps } from \"../types/ProjectPage\";\nimport { StyledContainer } from \"../components/StyledContainer\";\nimport styled from \"styled-components\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: {\n                fields: { category: { eq: \"project\" }, draft: { eq: false } }\n            }\n            sort: { fields: { date: DESC } }\n        ) {\n            nodes {\n                id\n                fields {\n                    slug\n                    date\n                }\n                frontmatter {\n                    title\n                    image {\n                        childImageSharp {\n                            gatsbyImageData(layout: CONSTRAINED)\n                        }\n                    }\n                }\n                excerpt\n            }\n        }\n    }\n`;\nconst Projects: React.FC<ProjectPageProps> = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`;\n    const projects = data.allMarkdownRemark.nodes;\n\n    if (projects.length === 0) {\n        return (\n            <Layout location={location} title={siteTitle}>\n                <Seo title=\"All posts\" />\n                <Bio />\n                <p>No blog posts found.</p>\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo title=\"All Projects\" />\n\n            <StyledContainer>\n                <StyledProjectCards>\n                    {projects.map((p: any) => {\n                        return <ProjectCard key={p.id} project={p} />;\n                    })}\n                </StyledProjectCards>\n\n                <Bio />\n            </StyledContainer>\n        </Layout>\n    );\n};\n\nexport default Projects;\n\nconst StyledProjectCards = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n    grid-gap: 1em;\n    padding-top: 2em;\n\n    a {\n        color: var(--color-text);\n        text-decoration: none;\n    }\n\n    .project-card {\n        display: flex;\n        flex-direction: column;\n        align-items: space-between;\n        background-color: white;\n        text-align: center;\n        border: 1px solid lightgray;\n        height: 100%;\n        min-height: 320px;\n        overflow: hidden;\n        transition: all 150ms ease-in;\n\n        &:hover {\n            transform: scale(1.05);\n        }\n\n        .description {\n            display: flex;\n            flex-direction: column;\n            align-items: space-between;\n            padding: 1em;\n        }\n    }\n`;\n\nconst ProjectCard: React.FC<{ project: ProjectPage }> = ({ project }) => {\n    const image = getImage(project.frontmatter.image);\n\n    return (\n        <Link to={`/projects/${project.fields.slug}`}>\n            <div className=\"project-card\">\n                {image && (\n                    <div className=\"image\">\n                        <GatsbyImage\n                            image={image}\n                            alt={project.frontmatter.title}\n                        />\n                    </div>\n                )}\n                <div className=\"description\">\n                    <h6>{project.frontmatter.title}</h6>\n                    <p>{project.excerpt}</p>\n                </div>\n            </div>\n        </Link>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n    margin: 0 auto;\n    max-width: 800px;\n    padding: 3em 0.25em;\n\n    @media (max-width: 768px) {\n        padding: 2em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","StyledBio","StaticImage","className","layout","formats","src","width","height","quality","alt","__imageData","require","name","summary","href","twitter","FaTwitter","linkedin","FaLinkedin","youtube","FaYoutube","github","FaGithub","styled","div","withConfig","displayName","componentId","_ref","location","siteTitle","title","projects","allMarkdownRemark","nodes","length","Layout","Seo","StyledContainer","StyledProjectCards","map","p","ProjectCard","key","id","project","_ref2","image","getImage","frontmatter","Link","to","fields","slug","GatsbyImage","excerpt"],"sourceRoot":""}