{"version":3,"file":"component---src-pages-language-learning-dictionary-tsx-7e92a7edba5521c60b9c.js","mappings":"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","sources":["webpack://rheajt.github.io/./src/pages/language-learning/dictionary.tsx","webpack://rheajt.github.io/./src/components/footer.tsx","webpack://rheajt.github.io/./src/utils/links.ts","webpack://rheajt.github.io/./src/components/header.tsx","webpack://rheajt.github.io/./src/components/layout.tsx","webpack://rheajt.github.io/./src/components/link-button.tsx","webpack://rheajt.github.io/./src/components/section.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Layout from \"../../components/layout\";\nimport { Section } from \"../../components/section\";\nimport Seo from \"../../components/seo\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nexport const pageQuery = graphql`\n    query allWords {\n        allGoogleTutoringSheet(sort: { lesson: DESC }) {\n            nodes {\n                id\n                chinese\n                pinyin\n                partOfSpeech\n                english\n                lesson\n                category\n            }\n        }\n    }\n`;\n\ntype Word = {\n    id: string;\n    chinese: string;\n    pinyin?: string;\n    partOfSpeech?: string;\n    english: string;\n    lesson: number;\n    category?: string;\n};\n\nexport default function ChineseLanguageDictionaryPage({ data, location }: any) {\n    const [filter, setFilter] = React.useState<string>(\"\");\n    const words: Word[] = data.allGoogleTutoringSheet.nodes || [];\n    return (\n        <Layout\n            location={location}\n            title=\"Chinese Language Learning Dictionary\"\n        >\n            <Seo title=\"Chinese Language Learning Dictionary\" />\n            <Section>\n                <SearchRow>\n                    <SearchInput\n                        type=\"text\"\n                        value={filter}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                            setFilter(e.target.value)\n                        }\n                        placeholder=\"Filter words...\"\n                        aria-label=\"Filter words\"\n                    />\n                </SearchRow>\n\n                <CardsGrid>\n                    {words\n                        .filter(word => {\n                            if (!filter) return true;\n                            const lowerFilter = filter.toLowerCase();\n                            return (\n                                (word.chinese &&\n                                    word.chinese\n                                        .toLowerCase()\n                                        .includes(lowerFilter)) ||\n                                (word.pinyin &&\n                                    word.pinyin\n                                        .toLowerCase()\n                                        .includes(lowerFilter)) ||\n                                (word.english &&\n                                    word.english\n                                        .toLowerCase()\n                                        .includes(lowerFilter)) ||\n                                (word.partOfSpeech &&\n                                    word.partOfSpeech\n                                        .toLowerCase()\n                                        .includes(lowerFilter)) ||\n                                (word.category &&\n                                    word.category\n                                        .toLowerCase()\n                                        .includes(lowerFilter))\n                            );\n                        })\n                        .map(word => {\n                            return <WordCard key={word.id} word={word} />;\n                        })}\n                </CardsGrid>\n            </Section>\n        </Layout>\n    );\n}\n\nfunction WordCard({ word }: { word: Word }) {\n    return (\n        <CardLink to={`/language-learning/lesson${word.lesson}`}>\n            <CardTop>\n                <Chinese>{word.chinese}</Chinese>\n                {word.pinyin && <Pinyin>{word.pinyin}</Pinyin>}\n            </CardTop>\n\n            <English>{word.english}</English>\n\n            <Meta>\n                <LessonBadge>Lesson {word.lesson}</LessonBadge>\n                {word.partOfSpeech && <Category>{word.partOfSpeech}</Category>}\n            </Meta>\n        </CardLink>\n    );\n}\n\nconst CardLink = styled(Link)`\n    display: block;\n    padding: 12px 16px;\n    background: #fff;\n    border-radius: 8px;\n    border: 1px solid rgba(0, 0, 0, 0.06);\n    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.03);\n    margin: 0.5rem 0;\n    text-decoration: none;\n    color: inherit;\n    transition:\n        transform 140ms ease,\n        box-shadow 140ms ease;\n\n    &:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.06);\n    }\n`;\n\nconst CardTop = styled.div`\n    display: flex;\n    align-items: baseline;\n    gap: 0.75rem;\n`;\n\nconst Chinese = styled.div`\n    font-size: 1.5rem;\n    font-weight: 700;\n`;\n\nconst Pinyin = styled.div`\n    font-size: 0.95rem;\n    color: #555;\n`;\n\nconst English = styled.div`\n    margin-top: 0.5rem;\n    color: #333;\n`;\n\nconst Meta = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin-top: 0.5rem;\n`;\n\nconst LessonBadge = styled.span`\n    background: var(--color-accent);\n    color: var(--color-text);\n    padding: 0.2rem 0.5rem;\n    border-radius: 999px;\n    font-size: 0.8rem;\n    font-weight: 600;\n`;\n\nconst Category = styled.span`\n    font-size: 0.8rem;\n    color: #666;\n`;\n\nconst SearchRow = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 1rem;\n`;\n\nconst SearchInput = styled.input`\n    width: 100%;\n    max-width: 560px;\n    padding: 0.6rem 0.9rem;\n    border-radius: 8px;\n    border: 1px solid lightgray;\n    font-size: 1rem;\n    transition:\n        box-shadow 120ms ease,\n        border-color 120ms ease;\n    &:focus {\n        outline: none;\n        border-color: var(--color-primary);\n        box-shadow: 0 6px 18px rgba(40, 53, 151, 0.06);\n    }\n`;\n\nconst CardsGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));\n    gap: 0.75rem;\n`;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { styled } from \"styled-components\";\nexport const Footer = () => {\n\treturn (\n\t\t<StyledFooter>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\t© {new Date().getFullYear()}{\" \"}\n\t\t\t\t\t<a href=\"https://jordanrhea.com\">jordan rhea</a>\n\t\t\t\t</div>\n\n\t\t\t\t{/*isBrowser && (\n                    <PopupWidget\n                        url=\"https://calendly.com/jordan-rhea/30min\"\n                        rootElement={document.getElementById(\"___gatsby\")!}\n                        text=\"Let's talk solutions!\"\n                        textColor=\"#ffffff\"\n                        color=\"#283597\"\n                    />\n                )*/}\n\n\t\t\t\t<div className=\"legals\">\n\t\t\t\t\t<Link to=\"/privacy\">privacy</Link>\n\t\t\t\t\t<Link to=\"/terms\">terms</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StyledFooter>\n\t);\n};\n\nconst StyledFooter = styled.footer`\n    background-color: var(--color-primary);\n    padding: 3em;\n    color: white;\n\n    a,\n    a:hover {\n        color: white;\n        text-decoration: none;\n        margin-right: 1em;\n    }\n\n    .container {\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        max-width: 800px;\n    }\n`;\n","export const links = [\n    { name: \"Projects\", to: \"projects\" },\n    {\n        name: \"About\",\n        to: \"about\",\n        children: [{ name: \"Language Learning\", to: \"language-learning\" }],\n    },\n];\n","import { Link, navigate } from \"gatsby\";\nimport React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { LinkButton } from \"./link-button\";\nimport { links } from \"../utils/links\";\nimport styled from \"styled-components\";\n\nexport const BasicHeader: React.FC = () => {\n    return (\n        <StyledHeader>\n            <div className=\"container\">\n                <div\n                    onClick={() => {\n                        navigate(-1);\n                    }}\n                >\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </div>\n            </div>\n        </StyledHeader>\n    );\n};\nexport const Header: React.FC<{ pathname: string; showLinks?: boolean }> = ({\n    pathname,\n    showLinks = true,\n}) => {\n    const [openDropdown, setOpenDropdown] = React.useState<string | null>(null);\n\n    React.useEffect(() => {\n        if (typeof window === \"undefined\") return;\n        function handleResize() {\n            if (window.innerWidth > 768) {\n                setOpenDropdown(null);\n            }\n        }\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return (\n        <StyledHeader>\n            <div className=\"container\">\n                <Link to=\"/\">\n                    <StaticImage\n                        layout=\"fixed\"\n                        formats={[\"auto\", \"webp\", \"avif\"]}\n                        src=\"../../content/img/jr-icon.png\"\n                        width={36}\n                        height={36}\n                        quality={95}\n                        alt=\"jordan rhea header\"\n                    />\n                </Link>\n\n                <nav className={showLinks ? `` : `is-hidden`}>\n                    <div className=\"page-links\">\n                        {links.map((link: any) => {\n                            const hasChildren =\n                                Array.isArray(link.children) &&\n                                link.children.length > 0;\n                            const isActive =\n                                pathname.includes(link.to) ||\n                                (hasChildren &&\n                                    link.children.some((c: any) =>\n                                        pathname.includes(c.to),\n                                    ));\n\n                            if (!hasChildren) {\n                                return (\n                                    <Link\n                                        key={link.to}\n                                        data-label={link.name}\n                                        className={`page-link sans ${isActive ? \"active\" : \"\"}`}\n                                        to={`/${link.to}`}\n                                        onClick={() => setOpenDropdown(null)}\n                                    >\n                                        <span className=\"label\">\n                                            {link.name}\n                                        </span>\n                                    </Link>\n                                );\n                            }\n\n                            return (\n                                <div\n                                    key={link.to}\n                                    className={`page-link-with-dropdown ${isActive ? \"active\" : \"\"} ${openDropdown === link.to ? \"is-open\" : \"\"}`}\n                                >\n                                    <Link\n                                        data-label={link.name}\n                                        className={`page-link sans ${isActive ? \"active\" : \"\"}`}\n                                        to={`/${link.to}`}\n                                        onClick={e => {\n                                            if (typeof window === \"undefined\")\n                                                return;\n                                            if (window.innerWidth <= 768) {\n                                                // if dropdown is already open for this link, follow the link\n                                                if (openDropdown === link.to) {\n                                                    setOpenDropdown(null);\n                                                    return;\n                                                }\n\n                                                e.preventDefault();\n                                                setOpenDropdown(link.to);\n                                            }\n                                        }}\n                                    >\n                                        <span className=\"label\">\n                                            {link.name}\n                                        </span>\n                                    </Link>\n\n                                    <div className=\"dropdown\">\n                                        {link.children.map((child: any) => (\n                                            <Link\n                                                key={child.to}\n                                                to={`/${child.to}`}\n                                                className={`dropdown-item sans ${pathname.includes(child.to) ? \"active\" : \"\"}`}\n                                                onClick={() =>\n                                                    setOpenDropdown(null)\n                                                }\n                                            >\n                                                <span className=\"label\">\n                                                    {child.name}\n                                                </span>\n                                            </Link>\n                                        ))}\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n\n                    <LinkButton\n                        pathname={pathname}\n                        href={\"/contact\"}\n                        label=\"Contact\"\n                    />\n                </nav>\n            </div>\n        </StyledHeader>\n    );\n};\n\nconst StyledHeader = styled.header`\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 1;\n    padding: 0.25em;\n\n    .container {\n        max-width: 800px;\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        justify-content: center;\n    }\n\n    nav.is-hidden {\n        display: none;\n    }\n\n    a {\n        background: none;\n        text-decoration: none;\n        color: var(--color-text);\n    }\n\n    nav {\n        display: flex;\n        align-items: center;\n        list-style: none;\n        text-transform: uppercase;\n        justify-content: space-between;\n        width: 100%;\n        margin-left: 1em;\n\n        a {\n            padding: 0 1em;\n            display: inline-block;\n            position: relative;\n            transition: font-weight 0.5s linear;\n\n            /* reserve space for the bold state to prevent layout shift */\n            &::after {\n                content: attr(data-label);\n                font-weight: 700;\n                visibility: hidden;\n                display: block;\n                height: 0;\n                overflow: hidden;\n                pointer-events: none;\n            }\n\n            .label {\n                font-weight: 400;\n                transition: font-weight 0.05s linear;\n            }\n\n            &:hover .label {\n                font-weight: 700;\n            }\n\n            &.active .label {\n                font-weight: 700;\n            }\n        }\n\n        .page-links {\n            display: flex;\n            align-items: center;\n        }\n\n        /* Dropdown container */\n        .page-link-with-dropdown {\n            position: relative;\n            display: flex;\n            align-content: center;\n        }\n\n        .dropdown {\n            opacity: 0;\n            visibility: hidden;\n            pointer-events: none;\n            position: absolute;\n            top: 100%;\n            left: 100%;\n            transform: translateX(-50%) translateY(6px);\n            background: var(--color-background, #fff);\n            border-radius: 4px;\n            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.12);\n            min-width: 180px;\n            padding: 0.25em 0;\n            z-index: 10;\n            transition:\n                opacity 160ms ease,\n                transform 160ms ease;\n        }\n\n        .page-link-with-dropdown:hover .dropdown,\n        .page-link-with-dropdown .dropdown:hover,\n        .page-link-with-dropdown.is-open .dropdown {\n            opacity: 1;\n            visibility: visible;\n            pointer-events: auto;\n            transform: translateX(-50%) translateY(0);\n        }\n\n        .dropdown-item {\n            display: block;\n            padding: 0.5em 1em;\n            text-decoration: none;\n            color: var(--color-text);\n            white-space: nowrap;\n        }\n\n        .dropdown-item:hover {\n            background: rgba(0, 0, 0, 0.04);\n        }\n    }\n`;\n","import { navigate } from \"gatsby\";\nimport * as React from \"react\";\nimport { ReactNode } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Footer } from \"./footer\";\nimport { BasicHeader, Header } from \"./header\";\n\nexport interface Location {\n    pathname: string;\n    search: string;\n    hash: string;\n}\n\nconst GlobalStyles = createGlobalStyle`\n*,\n:after,\n:before {\n    box-sizing: border-box;\n}\n\nhtml, body {\n\tpadding: 0;\n\tmargin: 0;\n}\n\nhtml {\n    line-height: var(--grid-size);\n    font-size: var(--fontSize-root);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n    font-family: var(--font-body);\n    font-size: var(--fontSize-1);\n    color: var(--color-text);\n    /* subtle graph-paper background */\n    background-color: #fbfbf8;\n    background-image:\n        linear-gradient(to right, rgba(0,0,0,0.06) 1px, transparent 1px),\n        linear-gradient(to bottom, rgba(0,0,0,0.06) 1px, transparent 1px);\n    background-size: 24px 24px;\n    background-repeat: repeat;\n}\n\n:root {\n    --grid-size: 1.5rem;\n    --maxWidth-none: \"none\";\n    --maxWidth-xs: 20rem;\n    --maxWidth-sm: 24rem;\n    --maxWidth-md: 28rem;\n    --maxWidth-lg: 32rem;\n    --maxWidth-xl: 36rem;\n    --maxWidth-2xl: 42rem;\n    --maxWidth-3xl: 48rem;\n    --maxWidth-4xl: 56rem;\n    --maxWidth-full: \"100%\";\n    --maxWidth-wrapper: var(--maxWidth-2xl);\n    --spacing-px: \"1px\";\n    --spacing-0: 0;\n    --spacing-1: calc(var(--grid-size) / 4);\n    --spacing-2: calc(var(--grid-size) / 2);\n    --spacing-3: calc(var(--grid-size) * 0.75);\n    --spacing-4: var(--grid-size);\n    --spacing-5: calc(var(--grid-size) * 1.25);\n    --spacing-6: calc(var(--grid-size) * 1.5);\n    --spacing-8: calc(var(--grid-size) * 2);\n    --spacing-10: calc(var(--grid-size) * 2.5);\n    --spacing-12: calc(var(--grid-size) * 3);\n    --spacing-16: calc(var(--grid-size) * 4);\n    --spacing-20: calc(var(--grid-size) * 5);\n    --spacing-24: calc(var(--grid-size) * 6);\n    --spacing-32: calc(var(--grid-size) * 8);\n    --fontFamily-sans: Work Sans, system-ui, -apple-system, BlinkMacSystemFont,\n        \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif,\n        \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n        \"Noto Color Emoji\";\n    --fontFamily-serif: \"Merriweather\", \"Georgia\", Cambria, \"Times New Roman\",\n        Times, serif;\n    --font-body: var(--fontFamily-sans);\n    --font-heading: var(--fontFamily-sans);\n    --fontWeight-normal: 400;\n    --fontWeight-medium: 500;\n    --fontWeight-semibold: 600;\n    --fontWeight-bold: 700;\n    --fontWeight-extrabold: 800;\n    --fontWeight-black: 900;\n    --fontSize-root: 16px;\n    --lineHeight-none: 1;\n    --lineHeight-tight: 1.25;\n    --lineHeight-normal: 1.5;\n    --lineHeight-relaxed: 1.875;\n    /* 1.200 Minor Third Type Scale */\n    --fontSize-0: 0.833rem;\n    --fontSize-1: 1rem;\n    --fontSize-2: 1.2rem;\n    --fontSize-3: 1.44rem;\n    --fontSize-4: 1.728rem;\n    --fontSize-5: 2.074rem;\n    --fontSize-6: 2.488rem;\n    --fontSize-7: 2.986rem;\n    --color-primary: #283597;\n    --color-text: #2e353f;\n    --color-text-light: #4f5969;\n    --color-heading: #1a202c;\n    --color-heading-black: black;\n    --color-accent: #d1dce5;\n}\n`;\n\nconst Layout: React.FC<{\n    children: ReactNode;\n    location: Location;\n    title: string;\n}> = ({ location, children }) => {\n    return (\n        <div>\n            <GlobalStyles />\n\n            <Header pathname={location.pathname} />\n\n            <main>{children}</main>\n\n            <Footer />\n        </div>\n    );\n};\n\nexport function SimpleLayout({ children }: { children: ReactNode }) {\n    return (\n        <div>\n            <GlobalStyles />\n            <BasicHeader />\n            <main>{children}</main>\n        </div>\n    );\n}\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\ntype LinkButtonProps = {\n\tpathname?: string;\n\thref: string;\n\tlabel: string;\n};\nexport function LinkButton({\n\tpathname = \"\",\n\thref = \"\",\n\tlabel = \"\",\n}: LinkButtonProps) {\n\tif (href.startsWith(\"http\")) {\n\t\treturn (\n\t\t\t<StyledLinkButtons>\n\t\t\t\t<a\n\t\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\thref={href}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</a>\n\t\t\t</StyledLinkButtons>\n\t\t);\n\t}\n\n\treturn (\n\t\t<StyledLinkButtons>\n\t\t\t<Link\n\t\t\t\tclassName={`page-button sans ${pathname.includes(href) && \"active\"\n\t\t\t\t\t}`}\n\t\t\t\tto={href}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Link>\n\t\t</StyledLinkButtons>\n\t);\n}\n\nconst StyledLinkButtons = styled.div`\n    .page-button {\n        background: none;\n        border: none;\n        padding: 0.5em 1em;\n        font: inherit;\n        cursor: pointer;\n        outline: inherit;\n        text-decoration: none;\n        color: white;\n        font-size: inherit;\n        font-weight: bold;\n        font-family: inherit;\n        border: 1px solid lightgray;\n        border-radius: 3px;\n        background-color: var(--color-primary);\n\n        &:hover {\n            $purple: var(--color-primary);\n            background-color: lighten(#283597, 10%);\n            // background-color: lightgray;\n        }\n    }\n`;\n","import React from \"react\";\nimport { styled } from \"styled-components\";\n\ntype SectionProps = {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n\tid?: string;\n\tstyle?: React.CSSProperties;\n};\n\nexport const Section = (props: SectionProps) => {\n\treturn (\n\t\t<StyledSection\n\t\t\tclassName={props.className}\n\t\t\tid={props.id}\n\t\t\tstyle={props.style}\n\t\t>\n\t\t\t{props.children}\n\t\t</StyledSection>\n\t);\n};\n\nconst StyledSection = styled.section`\n    padding: 3em 0.25em;\n    margin: 0 auto;\n    max-width: 800px;\n\n    @media (max-width: 768px) {\n        padding: 2em 0.25em;\n        max-width: var(--maxWidth-sm);\n    }\n`;\n"],"names":["ChineseLanguageDictionaryPage","_ref","data","location","filter","setFilter","React","words","allGoogleTutoringSheet","nodes","Layout","title","Seo","Section","SearchRow","SearchInput","type","value","onChange","e","target","placeholder","CardsGrid","word","lowerFilter","toLowerCase","chinese","includes","pinyin","english","partOfSpeech","category","map","WordCard","key","id","_ref2","CardLink","to","lesson","CardTop","Chinese","Pinyin","English","Meta","LessonBadge","Category","styled","Link","withConfig","displayName","componentId","div","span","input","Footer","StyledFooter","className","Date","getFullYear","href","footer","links","name","children","BasicHeader","StyledHeader","onClick","navigate","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","Header","pathname","showLinks","openDropdown","setOpenDropdown","window","addEventListener","handleResize","removeEventListener","innerWidth","link","hasChildren","Array","isArray","length","isActive","some","c","preventDefault","child","LinkButton","label","header","GlobalStyles","createGlobalStyle","SimpleLayout","startsWith","StyledLinkButtons","props","StyledSection","style","section"],"sourceRoot":""}