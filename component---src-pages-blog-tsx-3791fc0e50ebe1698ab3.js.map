{"version":3,"file":"component---src-pages-blog-tsx-3791fc0e50ebe1698ab3.js","mappings":"gMA8EA,UAjE8BA,IAAwB,UAAvB,KAAEC,EAAI,SAAEC,GAAU,EAC7C,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtBC,EAAwBC,QAAU,QAC9CC,EAAQP,EAAKQ,kBAAkBC,MAErC,GAAqB,IAAjBF,EAAMG,OACN,OACIC,EAAAA,cAACC,EAAAA,EAAM,CAACX,SAAUA,EAAUK,MAAOJ,GAC/BS,EAAAA,cAACE,EAAAA,EAAG,CAACP,MAAM,cACXK,EAAAA,cAACG,EAAAA,EAAG,MACJH,EAAAA,cAAAA,IAAAA,KAAG,yBAKf,MAAMI,EAAUR,EAAMS,QAAO,CAACC,EAAUC,KACpC,IAAKA,EAAKC,OAAOC,KAAM,OAAOH,EAE9B,MAAMI,GAAYC,EAAAA,EAAAA,GAAO,IAAIC,KAAKL,EAAKC,OAAOC,MAAO,aAQrD,OANIH,EAAII,GACJJ,EAAII,GAAWG,KAAKN,GAEpBD,EAAII,GAAa,CAACH,GAGfD,CAAG,GACX,CAAC,GAEJ,OACIN,EAAAA,cAACC,EAAAA,EAAM,CAACX,SAAUA,EAAUK,MAAOJ,GAC/BS,EAAAA,cAACE,EAAAA,EAAG,CAACP,MAAM,cACXK,EAAAA,cAACG,EAAAA,EAAG,MAEHW,OAAOC,KAAKX,GAASY,KAAIC,GAElBjB,EAAAA,cAAAA,UAAAA,CAASkB,IAAKD,GACVjB,EAAAA,cAAAA,KAAAA,KAAKiB,GACJb,EAAQa,GAAOD,KAAKT,GACjBP,EAAAA,cAAAA,MAAAA,CAAKkB,IAAM,GAAED,KAASV,EAAKC,OAAOW,QAC9BnB,EAAAA,cAACoB,EAAAA,KAAI,CAACC,GAAK,SAAQd,EAAKC,OAAOW,QAC3BnB,EAAAA,cAAAA,IAAAA,KAAIO,EAAKe,YAAY3B,QAGzBK,EAAAA,cAAAA,IAAAA,KACIA,EAAAA,cAAAA,IAAAA,MACKW,EAAAA,EAAAA,GACG,IAAIC,KAAKL,EAAKC,OAAOC,MACrB,QAEH,IAAI,IACPF,EAAKgB,SAEXvB,EAAAA,cAAAA,IAAAA,KAAG,qBACoB,IACnBA,EAAAA,cAAAA,IAAAA,KAAIO,EAAKe,YAAYE,KAAKC,KAAK,cAOlD,C","sources":["webpack://rheajt.github.io/./src/pages/blog.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n    data: any;\n    location: Location;\n}\n\nconst Blog: React.FC<Props> = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`;\n    const posts = data.allMarkdownRemark.nodes;\n\n    if (posts.length === 0) {\n        return (\n            <Layout location={location} title={siteTitle}>\n                <Seo title=\"All posts\" />\n                <Bio />\n                <p>No blog posts found.</p>\n            </Layout>\n        );\n    }\n\n    const byMonth = posts.reduce((acc: any, page: any) => {\n        if (!page.fields.date) return acc;\n\n        const monthYear = format(new Date(page.fields.date), \"MMMM yyyy\");\n\n        if (acc[monthYear]) {\n            acc[monthYear].push(page);\n        } else {\n            acc[monthYear] = [page];\n        }\n\n        return acc;\n    }, {});\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo title=\"All posts\" />\n            <Bio />\n\n            {Object.keys(byMonth).map(month => {\n                return (\n                    <section key={month}>\n                        <h3>{month}</h3>\n                        {byMonth[month].map((page: any) => (\n                            <div key={`${month}-${page.fields.slug}`}>\n                                <Link to={`/blog/${page.fields.slug}`}>\n                                    <b>{page.frontmatter.title}</b>\n                                </Link>\n\n                                <p>\n                                    <i>\n                                        {format(\n                                            new Date(page.fields.date),\n                                            \"PPP\"\n                                        )}\n                                    </i>{\" \"}\n                                    -{page.excerpt}\n                                </p>\n                                <p>\n                                    Tags in this post:{\" \"}\n                                    <i>{page.frontmatter.tags.join(\", \")}</i>\n                                </p>\n                            </div>\n                        ))}\n                    </section>\n                );\n            })}\n        </Layout>\n    );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: { fields: { category: { eq: \"blog\" } } }\n            sort: { fields: [fields___date], order: DESC }\n        ) {\n            nodes {\n                excerpt\n                fields {\n                    slug\n                    date\n                }\n                frontmatter {\n                    title\n                    description\n                    tags\n                }\n            }\n        }\n    }\n`;\n"],"names":["_ref","data","location","siteTitle","site","siteMetadata","_data$site$siteMetada","title","posts","allMarkdownRemark","nodes","length","React","Layout","Seo","Bio","byMonth","reduce","acc","page","fields","date","monthYear","format","Date","push","Object","keys","map","month","key","slug","Link","to","frontmatter","excerpt","tags","join"],"sourceRoot":""}