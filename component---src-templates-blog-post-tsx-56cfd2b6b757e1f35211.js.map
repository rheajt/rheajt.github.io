{"version":3,"file":"component---src-templates-blog-post-tsx-56cfd2b6b757e1f35211.js","mappings":"8LAiHA,UA5D0C,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzCC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACI,gBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GAC/B,gBAAC,IAAD,CACIG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,QAClDC,MAAOX,EAAKQ,YAAYG,MAAMC,WAAa,KAE/C,2BACIC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BACI,sBAAIC,SAAS,YAAYhB,EAAKQ,YAAYH,OAC1C,0BAAIY,EAAAA,EAAAA,GAAO,IAAIC,KAAKlB,EAAKmB,OAAOC,MAAO,SAE3C,2BACIC,wBAAyB,CAAEC,OAAQtB,EAAKuB,MACxCP,SAAS,gBAEb,2BACA,8BACI,gBAAC,IAAD,QAGR,uBAAKH,UAAU,iBACX,sBACIW,MAAO,CACHC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGb,0BACKvB,GACG,gBAAC,EAAAwB,KAAD,CAAMC,GAAIzB,EAASa,OAAOa,KAAMC,IAAI,QAApC,KACO3B,EAASE,YAAYH,QAIpC,0BACKE,GACG,gBAAC,EAAAuB,KAAD,CAAMC,GAAIxB,EAAKY,OAAOa,KAAMC,IAAI,QAC3B1B,EAAKC,YAAYH,MADtB","sources":["webpack://rheajt.github.io/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n    data: Data;\n    location: Location;\n}\n\ninterface Data {\n    site: {\n        siteMetadata: {\n            title: string;\n        };\n    };\n    markdownRemark: {\n        id: string;\n        excerpt: string;\n        html: string;\n        frontmatter: {\n            title: string;\n            date: string;\n            description: string;\n            image: {\n                publicURL: string;\n            };\n        };\n        fields: {\n            date: string;\n        };\n    };\n    previous: {\n        fields: {\n            slug: string;\n        };\n        frontmatter: {\n            title: string;\n        };\n    };\n    next: {\n        fields: {\n            slug: string;\n        };\n        frontmatter: {\n            title: string;\n        };\n    };\n}\n\nconst BlogPostTemplate: React.FC<Props> = ({ data, location }) => {\n    const post = data.markdownRemark;\n    const siteTitle = data.site.siteMetadata?.title || `Title`;\n    const { previous, next } = data;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n                image={post.frontmatter.image.publicURL || \"\"}\n            />\n            <article\n                className=\"blog-post\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n            >\n                <header>\n                    <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n                    <p>{format(new Date(post.fields.date), \"PPP\")}</p>\n                </header>\n                <section\n                    dangerouslySetInnerHTML={{ __html: post.html }}\n                    itemProp=\"articleBody\"\n                />\n                <hr />\n                <footer>\n                    <Bio />\n                </footer>\n            </article>\n            <nav className=\"blog-post-nav\">\n                <ul\n                    style={{\n                        display: `flex`,\n                        flexWrap: `wrap`,\n                        justifyContent: `space-between`,\n                        listStyle: `none`,\n                        padding: 0,\n                    }}\n                >\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                ← {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title} →\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </nav>\n        </Layout>\n    );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug(\n        $id: String!\n        $previousPostId: String\n        $nextPostId: String\n    ) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                description\n                image {\n                    publicURL\n                }\n            }\n            fields {\n                date\n            }\n        }\n        previous: markdownRemark(id: { eq: $previousPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n        next: markdownRemark(id: { eq: $nextPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n    }\n`;\n"],"names":["data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","image","publicURL","className","itemScope","itemType","itemProp","format","Date","fields","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","slug","rel"],"sourceRoot":""}